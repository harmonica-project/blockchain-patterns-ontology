@prefix : <http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@base <http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns> .

<http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns> rdf:type owl:Ontology .

#################################################################
#    Annotation properties
#################################################################

###  http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled
<http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> rdf:type owl:AnnotationProperty .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#problemDescription
:problemDescription rdf:type owl:AnnotationProperty .


#################################################################
#    Object Properties
#################################################################

###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#addressProblem
:addressProblem rdf:type owl:ObjectProperty ;
                rdfs:subPropertyOf owl:topObjectProperty ;
                owl:inverseOf :addressedBy ;
                rdfs:domain :Pattern ;
                rdfs:range :Problem .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#addressedBy
:addressedBy rdf:type owl:ObjectProperty ;
             rdfs:subPropertyOf owl:topObjectProperty .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#benefitsFrom
:benefitsFrom rdf:type owl:ObjectProperty ;
              rdfs:subPropertyOf owl:topObjectProperty ;
              rdfs:domain [ rdf:type owl:Class ;
                            owl:unionOf ( [ owl:intersectionOf ( :Proposal
                                                                 [ rdf:type owl:Class ;
                                                                   owl:complementOf :Variant
                                                                 ]
                                                               ) ;
                                            rdf:type owl:Class
                                          ]
                                          [ owl:intersectionOf ( :Variant
                                                                 [ rdf:type owl:Class ;
                                                                   owl:complementOf :Proposal
                                                                 ]
                                                               ) ;
                                            rdf:type owl:Class
                                          ]
                                        )
                          ] ;
              rdfs:range [ rdf:type owl:Class ;
                           owl:unionOf ( [ owl:intersectionOf ( :Proposal
                                                                [ rdf:type owl:Class ;
                                                                  owl:complementOf :Variant
                                                                ]
                                                              ) ;
                                           rdf:type owl:Class
                                         ]
                                         [ owl:intersectionOf ( :Variant
                                                                [ rdf:type owl:Class ;
                                                                  owl:complementOf :Proposal
                                                                ]
                                                              ) ;
                                           rdf:type owl:Class
                                         ]
                                       )
                         ] .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#createdFrom
:createdFrom rdf:type owl:ObjectProperty ;
             rdfs:subPropertyOf owl:topObjectProperty ;
             rdfs:domain [ rdf:type owl:Class ;
                           owl:unionOf ( [ owl:intersectionOf ( :Proposal
                                                                [ rdf:type owl:Class ;
                                                                  owl:complementOf :Variant
                                                                ]
                                                              ) ;
                                           rdf:type owl:Class
                                         ]
                                         [ owl:intersectionOf ( :Variant
                                                                [ rdf:type owl:Class ;
                                                                  owl:complementOf :Proposal
                                                                ]
                                                              ) ;
                                           rdf:type owl:Class
                                         ]
                                       )
                         ] ;
             rdfs:range [ rdf:type owl:Class ;
                          owl:unionOf ( [ owl:intersectionOf ( :Proposal
                                                               [ rdf:type owl:Class ;
                                                                 owl:complementOf :Variant
                                                               ]
                                                             ) ;
                                          rdf:type owl:Class
                                        ]
                                        [ owl:intersectionOf ( :Variant
                                                               [ rdf:type owl:Class ;
                                                                 owl:complementOf :Proposal
                                                               ]
                                                             ) ;
                                          rdf:type owl:Class
                                        ]
                                      )
                        ] .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#hasIdentifier
:hasIdentifier rdf:type owl:ObjectProperty ;
               rdfs:subPropertyOf owl:topObjectProperty ;
               owl:inverseOf :identifies ;
               rdfs:domain :Paper ;
               rdfs:range :Identifier .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#hasPaper
:hasPaper rdf:type owl:ObjectProperty ;
          rdfs:subPropertyOf owl:topObjectProperty ;
          owl:inverseOf :proposes ;
          rdfs:domain :Proposal ;
          rdfs:range :Paper .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#hasProposal
:hasProposal rdf:type owl:ObjectProperty ;
             rdfs:subPropertyOf owl:topObjectProperty ;
             owl:inverseOf :hasVariant ;
             rdfs:domain [ rdf:type owl:Class ;
                           owl:unionOf ( :Paper
                                         :Variant
                                       )
                         ] ;
             rdfs:range :Proposal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#hasVariant
:hasVariant rdf:type owl:ObjectProperty ;
            rdfs:subPropertyOf owl:topObjectProperty ;
            rdfs:domain :Proposal ;
            rdfs:range :Variant .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#identifies
:identifies rdf:type owl:ObjectProperty ;
            rdfs:subPropertyOf owl:topObjectProperty ;
            rdfs:domain :Identifier ;
            rdfs:range :Paper .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#proposes
:proposes rdf:type owl:ObjectProperty ;
          rdfs:subPropertyOf owl:topObjectProperty ;
          rdfs:domain :Paper ;
          rdfs:range :Proposal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#references
:references rdf:type owl:ObjectProperty ;
            rdfs:subPropertyOf owl:topObjectProperty ;
            rdfs:domain :Identifier ;
            rdfs:range :Identifier .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#relatedTo
:relatedTo rdf:type owl:ObjectProperty ;
           rdfs:subPropertyOf owl:topObjectProperty ;
           rdfs:domain [ rdf:type owl:Class ;
                         owl:unionOf ( [ owl:intersectionOf ( :Proposal
                                                              [ rdf:type owl:Class ;
                                                                owl:complementOf :Variant
                                                              ]
                                                            ) ;
                                         rdf:type owl:Class
                                       ]
                                       [ owl:intersectionOf ( :Variant
                                                              [ rdf:type owl:Class ;
                                                                owl:complementOf :Proposal
                                                              ]
                                                            ) ;
                                         rdf:type owl:Class
                                       ]
                                     )
                       ] ;
           rdfs:range [ rdf:type owl:Class ;
                        owl:unionOf ( [ owl:intersectionOf ( :Proposal
                                                             [ rdf:type owl:Class ;
                                                               owl:complementOf :Variant
                                                             ]
                                                           ) ;
                                        rdf:type owl:Class
                                      ]
                                      [ owl:intersectionOf ( :Variant
                                                             [ rdf:type owl:Class ;
                                                               owl:complementOf :Proposal
                                                             ]
                                                           ) ;
                                        rdf:type owl:Class
                                      ]
                                    )
                      ] .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#requires
:requires rdf:type owl:ObjectProperty ;
          rdfs:subPropertyOf owl:topObjectProperty ;
          rdfs:domain [ rdf:type owl:Class ;
                        owl:unionOf ( [ owl:intersectionOf ( :Proposal
                                                             [ rdf:type owl:Class ;
                                                               owl:complementOf :Variant
                                                             ]
                                                           ) ;
                                        rdf:type owl:Class
                                      ]
                                      [ owl:intersectionOf ( :Variant
                                                             [ rdf:type owl:Class ;
                                                               owl:complementOf :Proposal
                                                             ]
                                                           ) ;
                                        rdf:type owl:Class
                                      ]
                                    )
                      ] ;
          rdfs:range [ rdf:type owl:Class ;
                       owl:unionOf ( [ owl:intersectionOf ( :Proposal
                                                            [ rdf:type owl:Class ;
                                                              owl:complementOf :Variant
                                                            ]
                                                          ) ;
                                       rdf:type owl:Class
                                     ]
                                     [ owl:intersectionOf ( :Variant
                                                            [ rdf:type owl:Class ;
                                                              owl:complementOf :Proposal
                                                            ]
                                                          ) ;
                                       rdf:type owl:Class
                                     ]
                                   )
                     ] .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#variantOf
:variantOf rdf:type owl:ObjectProperty ;
           rdfs:subPropertyOf owl:topObjectProperty ;
           rdfs:domain [ rdf:type owl:Class ;
                         owl:unionOf ( [ owl:intersectionOf ( :Proposal
                                                              [ rdf:type owl:Class ;
                                                                owl:complementOf :Variant
                                                              ]
                                                            ) ;
                                         rdf:type owl:Class
                                       ]
                                       [ owl:intersectionOf ( :Variant
                                                              [ rdf:type owl:Class ;
                                                                owl:complementOf :Proposal
                                                              ]
                                                            ) ;
                                         rdf:type owl:Class
                                       ]
                                     )
                       ] ;
           rdfs:range [ rdf:type owl:Class ;
                        owl:unionOf ( [ owl:intersectionOf ( :Proposal
                                                             [ rdf:type owl:Class ;
                                                               owl:complementOf :Variant
                                                             ]
                                                           ) ;
                                        rdf:type owl:Class
                                      ]
                                      [ owl:intersectionOf ( :Variant
                                                             [ rdf:type owl:Class ;
                                                               owl:complementOf :Proposal
                                                             ]
                                                           ) ;
                                        rdf:type owl:Class
                                      ]
                                    )
                      ] .


###  http://www.w3.org/2002/07/owl#topObjectProperty
owl:topObjectProperty rdf:type owl:SymmetricProperty ,
                               owl:TransitiveProperty ,
                               owl:ReflexiveProperty ;
                      rdfs:domain :Pattern ;
                      rdfs:range :Pattern .


#################################################################
#    Data properties
#################################################################

###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ApplicationExample
:ApplicationExample rdf:type owl:DatatypeProperty ;
                    rdfs:subPropertyOf owl:topDataProperty ;
                    rdfs:domain :Proposal ;
                    rdfs:range rdfs:Literal ;
                    rdfs:label "Application example" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Authors
:Authors rdf:type owl:DatatypeProperty ;
         rdfs:subPropertyOf owl:topDataProperty ;
         rdfs:domain :Paper ;
         rdfs:range rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContextAndProblem
:ContextAndProblem rdf:type owl:DatatypeProperty ;
                   rdfs:subPropertyOf owl:topDataProperty ;
                   rdfs:domain :Proposal ;
                   rdfs:range rdfs:Literal ;
                   rdfs:label "Context and problem" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DOI
:DOI rdf:type owl:DatatypeProperty ;
     rdfs:subPropertyOf owl:topDataProperty ;
     rdfs:domain :Paper ;
     rdfs:range rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DocumentType
:DocumentType rdf:type owl:DatatypeProperty ;
              rdfs:subPropertyOf owl:topDataProperty ;
              rdfs:domain :Paper ;
              rdfs:range rdfs:Literal ;
              rdfs:label "Document type" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier
:Identifier rdf:type owl:DatatypeProperty ;
            rdfs:subPropertyOf owl:topDataProperty .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#IdentifierType
:IdentifierType rdf:type owl:DatatypeProperty ;
                rdfs:subPropertyOf owl:topDataProperty ;
                rdfs:label "Identifier type" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Journal
:Journal rdf:type owl:DatatypeProperty ;
         rdfs:subPropertyOf owl:topDataProperty ;
         rdfs:domain :Paper ;
         rdfs:range rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Pages
:Pages rdf:type owl:DatatypeProperty ;
       rdfs:subPropertyOf owl:topDataProperty ;
       rdfs:domain :Paper ;
       rdfs:range rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Solution
:Solution rdf:type owl:DatatypeProperty ;
          rdfs:subPropertyOf owl:topDataProperty ;
          rdfs:domain :Proposal ;
          rdfs:range rdfs:Literal ;
          rdfs:label "Solution" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Title
:Title rdf:type owl:DatatypeProperty ;
       rdfs:subPropertyOf owl:topDataProperty ;
       rdfs:domain :Paper ;
       rdfs:range rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Volume
:Volume rdf:type owl:DatatypeProperty ;
        rdfs:subPropertyOf owl:topDataProperty ;
        rdfs:domain :Paper ;
        rdfs:range rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Year
:Year rdf:type owl:DatatypeProperty ;
      rdfs:subPropertyOf owl:topDataProperty ;
      rdfs:domain :Paper ;
      rdfs:range rdfs:Literal .


#################################################################
#    Classes
#################################################################

###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AccessRestriction
:AccessRestriction rdf:type owl:Class ;
                   rdfs:subClassOf :ContractAccessControlPattern ;
                   rdfs:label "Access Restriction"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AddressMapping
:AddressMapping rdf:type owl:Class ;
                rdfs:subClassOf :StoragePattern .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AllBlockchains
:AllBlockchains rdf:type owl:Class ;
                rdfs:subClassOf :Blockchain ;
                owl:disjointWith :Ethereum ,
                                 :HyperledgerSawtooth ,
                                 :SpecificBlockchain ;
                rdfs:label "All blockchains"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Announcement
:Announcement rdf:type owl:Class ;
              rdfs:subClassOf :MultiDomainFeaturePattern ;
              rdfs:label "Announcement"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ArchitecturalDesignOrganization
:ArchitecturalDesignOrganization rdf:type owl:Class ;
                                 rdfs:subClassOf :Problem ;
                                 owl:disjointWith :AssetManagement ,
                                                  :BPMFeatureApplication ,
                                                  :BigDataFeatureApplication ,
                                                  :BlockchainEnhancedOffChainStorage ,
                                                  :BlockchainTransactionHandling ,
                                                  :BuildOnChainApplication ,
                                                  :DecentralizedIdentityFeatureApplication ,
                                                  :DesignPatternApplication ,
                                                  :DomainOrientedApplicationDesign ,
                                                  :EnableSmartContractAccessControl ,
                                                  :InteractingWithBlockchain ,
                                                  :LanguageIdiomApplication ,
                                                  :ManageOnChainData ,
                                                  :MultiDomainFeatureApplication ,
                                                  :OnChainDataEncryption ,
                                                  :OnChainDataMigration ,
                                                  :OnChainStorage ,
                                                  :OnOffChainDataExchange ,
                                                  :SmartContractEfficiency ,
                                                  :SmartContractManagement ,
                                                  :SmartContractSecurity ,
                                                  :SmartContractUsage ;
                                 :problemDescription "I want to use a commonly recurring architectural style in my application"@en ;
                                 rdfs:label "Architectural design organization"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ArchitecturalPattern
:ArchitecturalPattern rdf:type owl:Class ;
                      rdfs:subClassOf :Pattern ,
                                      [ rdf:type owl:Restriction ;
                                        owl:onProperty :addressProblem ;
                                        owl:someValuesFrom :ArchitecturalDesignOrganization
                                      ] ;
                      rdfs:label "Architectural pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AssetManagement
:AssetManagement rdf:type owl:Class ;
                 rdfs:subClassOf :InteractingWithBlockchain ;
                 owl:disjointWith :BPMFeatureApplication ,
                                  :BigDataFeatureApplication ,
                                  :BlockchainEnhancedOffChainStorage ,
                                  :BlockchainTransactionHandling ,
                                  :BuildOnChainApplication ,
                                  :DecentralizedIdentityFeatureApplication ,
                                  :DomainOrientedApplicationDesign ,
                                  :EnableSmartContractAccessControl ,
                                  :LanguageIdiomApplication ,
                                  :ManageOnChainData ,
                                  :MultiDomainFeatureApplication ,
                                  :OnChainDataEncryption ,
                                  :OnChainDataMigration ,
                                  :OnChainStorage ,
                                  :OnOffChainDataExchange ,
                                  :SmartContractEfficiency ,
                                  :SmartContractManagement ,
                                  :SmartContractSecurity ,
                                  :SmartContractUsage ;
                 :problemDescription "I want to safely manage my cryptographic wallets and keys"@en ;
                 rdfs:label "Asset management"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AutomaticDeprecation
:AutomaticDeprecation rdf:type owl:Class ;
                      rdfs:subClassOf :ContractSecurityPattern ;
                      rdfs:label "Automatic Deprecation"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AvoidRedundantOperations
:AvoidRedundantOperations rdf:type owl:Class ;
                          rdfs:subClassOf :ContractEfficiencyPattern ;
                          rdfs:label "Avoid redundant operations"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BPM
:BPM rdf:type owl:Class ;
     rdfs:subClassOf :Specific ;
     owl:disjointWith :General ;
     rdfs:label "BPM"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BPMFeatureApplication
:BPMFeatureApplication rdf:type owl:Class ;
                       rdfs:subClassOf :DomainOrientedApplicationDesign ;
                       owl:disjointWith :BigDataFeatureApplication ,
                                        :BlockchainEnhancedOffChainStorage ,
                                        :BlockchainTransactionHandling ,
                                        :DecentralizedIdentityFeatureApplication ,
                                        :EnableSmartContractAccessControl ,
                                        :InteractingWithBlockchain ,
                                        :LanguageIdiomApplication ,
                                        :ManageOnChainData ,
                                        :MultiDomainFeatureApplication ,
                                        :OnChainDataEncryption ,
                                        :OnChainDataMigration ,
                                        :OnChainStorage ,
                                        :OnOffChainDataExchange ,
                                        :SmartContractEfficiency ,
                                        :SmartContractManagement ,
                                        :SmartContractSecurity ,
                                        :SmartContractUsage ;
                       :problemDescription "I want my blockchain application to handle BPM features"@en ;
                       rdfs:label "BPM feature application"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BPMPattern
:BPMPattern rdf:type owl:Class ;
            rdfs:subClassOf :DomainBasedPattern ,
                            [ rdf:type owl:Restriction ;
                              owl:onProperty :addressProblem ;
                              owl:someValuesFrom :BPMFeatureApplication
                            ] ;
            rdfs:label "BPM pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BigData
:BigData rdf:type owl:Class ;
         rdfs:subClassOf :Specific ;
         owl:disjointWith :General ;
         rdfs:label "Big data"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BigDataFeatureApplication
:BigDataFeatureApplication rdf:type owl:Class ;
                           rdfs:subClassOf :DomainOrientedApplicationDesign ;
                           owl:disjointWith :BlockchainEnhancedOffChainStorage ,
                                            :BlockchainTransactionHandling ,
                                            :DecentralizedIdentityFeatureApplication ,
                                            :EnableSmartContractAccessControl ,
                                            :InteractingWithBlockchain ,
                                            :LanguageIdiomApplication ,
                                            :ManageOnChainData ,
                                            :MultiDomainFeatureApplication ,
                                            :OnChainDataEncryption ,
                                            :OnChainDataMigration ,
                                            :OnChainStorage ,
                                            :OnOffChainDataExchange ,
                                            :SmartContractEfficiency ,
                                            :SmartContractManagement ,
                                            :SmartContractSecurity ,
                                            :SmartContractUsage ;
                           :problemDescription "I want my blockchain application to handle big data features"@en ;
                           rdfs:label "Big data feature application"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BigDataPattern
:BigDataPattern rdf:type owl:Class ;
                rdfs:subClassOf :DomainBasedPattern ,
                                [ rdf:type owl:Restriction ;
                                  owl:onProperty :addressProblem ;
                                  owl:someValuesFrom :BigDataFeatureApplication
                                ] ;
                rdfs:label "Big data pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Blockchain
:Blockchain rdf:type owl:Class ;
            rdfs:subClassOf owl:Thing ;
            rdfs:label "Blockchain"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BlockchainBasedReputationSystem
:BlockchainBasedReputationSystem rdf:type owl:Class ;
                                 rdfs:subClassOf :MultiDomainFeaturePattern ;
                                 rdfs:label "Blockchain-based reputation system"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BlockchainBpEngine
:BlockchainBpEngine rdf:type owl:Class ;
                    rdfs:subClassOf :BPMPattern ;
                    rdfs:label "Blockchain BP Engine"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BlockchainEnhancedOffChainStorage
:BlockchainEnhancedOffChainStorage rdf:type owl:Class ;
                                   rdfs:subClassOf :InteractingWithBlockchain ;
                                   owl:disjointWith :BlockchainTransactionHandling ,
                                                    :BuildOnChainApplication ,
                                                    :DecentralizedIdentityFeatureApplication ,
                                                    :DomainOrientedApplicationDesign ,
                                                    :EnableSmartContractAccessControl ,
                                                    :LanguageIdiomApplication ,
                                                    :ManageOnChainData ,
                                                    :MultiDomainFeatureApplication ,
                                                    :OnChainDataEncryption ,
                                                    :OnChainDataMigration ,
                                                    :OnChainStorage ,
                                                    :OnOffChainDataExchange ,
                                                    :SmartContractEfficiency ,
                                                    :SmartContractManagement ,
                                                    :SmartContractSecurity ,
                                                    :SmartContractUsage ;
                                   :problemDescription "I want to store data off-chain while taking profit from blockchain capabilities to trace and attest off-chain data"@en ;
                                   rdfs:label "Blockchain-enhanced off-chain storage"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BlockchainSecurityPatternForBigDataEcosystems
:BlockchainSecurityPatternForBigDataEcosystems rdf:type owl:Class ;
                                               rdfs:subClassOf :BigDataPattern ;
                                               rdfs:label "Blockchain Security Pattern for Big Data Ecosystems"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BlockchainTransactionHandling
:BlockchainTransactionHandling rdf:type owl:Class ;
                               rdfs:subClassOf :InteractingWithBlockchain ;
                               owl:disjointWith :BuildOnChainApplication ,
                                                :DecentralizedIdentityFeatureApplication ,
                                                :DomainOrientedApplicationDesign ,
                                                :EnableSmartContractAccessControl ,
                                                :LanguageIdiomApplication ,
                                                :ManageOnChainData ,
                                                :MultiDomainFeatureApplication ,
                                                :OnChainDataEncryption ,
                                                :OnChainDataMigration ,
                                                :OnChainStorage ,
                                                :OnOffChainDataExchange ,
                                                :SmartContractEfficiency ,
                                                :SmartContractManagement ,
                                                :SmartContractSecurity ,
                                                :SmartContractUsage ;
                               :problemDescription "I want to safely handle transactional aspects between off-chain components and the blockchain"@en ;
                               rdfs:label "Blockchain transaction handling"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Blocklist
:Blocklist rdf:type owl:Class ;
           rdfs:subClassOf :MultiDomainFeaturePattern ;
           rdfs:label "Blocklist"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BoundWithSocialMedia
:BoundWithSocialMedia rdf:type owl:Class ;
                      rdfs:subClassOf :DecentralizedIdentityPattern ;
                      rdfs:label "Bound with Social Media"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BuildOnChainApplication
:BuildOnChainApplication rdf:type owl:Class ;
                         rdfs:subClassOf :DesignPatternApplication ;
                         owl:disjointWith :InteractingWithBlockchain ,
                                          :LanguageIdiomApplication ,
                                          :OnOffChainDataExchange ;
                         :problemDescription "I want to leverage blockchain in my application"@en ;
                         rdfs:label "Build on-chain application"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BulletinBoard
:BulletinBoard rdf:type owl:Class ;
               rdfs:subClassOf :MultiDomainFeaturePattern ;
               rdfs:label "Bulletin Board"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ChallengeResponse
:ChallengeResponse rdf:type owl:Class ;
                   rdfs:subClassOf :ContractEfficiencyPattern ;
                   rdfs:label "Challenge Response"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ChecksEffectInteractions
:ChecksEffectInteractions rdf:type owl:Class ;
                          rdfs:subClassOf :ContractSecurityPattern ;
                          rdfs:label "Checks-Effect-Interactions"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#CommitAndReveal
:CommitAndReveal rdf:type owl:Class ;
                 rdfs:subClassOf :EncryptionPattern ;
                 rdfs:label "Commit and Reveal"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractAccessControlPattern
:ContractAccessControlPattern rdf:type owl:Class ;
                              rdfs:subClassOf :SmartContractPattern ,
                                              [ rdf:type owl:Restriction ;
                                                owl:onProperty :addressProblem ;
                                                owl:someValuesFrom :EnableSmartContractAccessControl
                                              ] ;
                              rdfs:label "Contract access-control pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractBalanceLimit
:ContractBalanceLimit rdf:type owl:Class ;
                      rdfs:subClassOf :ContractSecurityPattern ;
                      rdfs:label "Contract Balance Limit"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractComposer
:ContractComposer rdf:type owl:Class ;
                  rdfs:subClassOf :ContractManagementPattern ;
                  rdfs:label "Contract Composer"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractDecorator
:ContractDecorator rdf:type owl:Class ;
                   rdfs:subClassOf :ContractManagementPattern ;
                   rdfs:label "Contract Decorator"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractEfficiencyPattern
:ContractEfficiencyPattern rdf:type owl:Class ;
                           rdfs:subClassOf :SmartContractPattern ,
                                           [ rdf:type owl:Restriction ;
                                             owl:onProperty :addressProblem ;
                                             owl:someValuesFrom :SmartContractEfficiency
                                           ] ;
                           rdfs:label "Contract efficiency pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractManagementPattern
:ContractManagementPattern rdf:type owl:Class ;
                           rdfs:subClassOf :SmartContractPattern ,
                                           [ rdf:type owl:Restriction ;
                                             owl:onProperty :addressProblem ;
                                             owl:someValuesFrom :SmartContractManagement
                                           ] ;
                           rdfs:label "Contract management pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractMediator
:ContractMediator rdf:type owl:Class ;
                  rdfs:subClassOf :ContractManagementPattern ;
                  rdfs:label "Contract Mediator"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractObserver
:ContractObserver rdf:type owl:Class ;
                  rdfs:subClassOf :ContractManagementPattern ;
                  rdfs:label "Contract Observer"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractRegistry
:ContractRegistry rdf:type owl:Class ;
                  rdfs:subClassOf :ContractManagementPattern ;
                  rdfs:label "Contract Registry"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractSecurityPattern
:ContractSecurityPattern rdf:type owl:Class ;
                         rdfs:subClassOf :SmartContractPattern ,
                                         [ rdf:type owl:Restriction ;
                                           owl:onProperty :addressProblem ;
                                           owl:someValuesFrom :SmartContractSecurity
                                         ] ;
                         rdfs:label "Contract security pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DataContract
:DataContract rdf:type owl:Class ;
              rdfs:subClassOf :ContractManagementPattern ;
              rdfs:label "Data Contract"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DataExchangePattern
:DataExchangePattern rdf:type owl:Class ;
                     rdfs:subClassOf :OnOffChainInteractionPattern ,
                                     [ rdf:type owl:Restriction ;
                                       owl:onProperty :addressProblem ;
                                       owl:someValuesFrom :OnOffChainDataExchange
                                     ] ;
                     rdfs:label "Data exchange pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DataManagementPattern
:DataManagementPattern rdf:type owl:Class ;
                       rdfs:subClassOf :OnChainPattern ,
                                       [ rdf:type owl:Restriction ;
                                         owl:onProperty :addressProblem ;
                                         owl:someValuesFrom :ManageOnChainData
                                       ] ;
                       rdfs:label "Data management pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DecentralizeBusinessProcess
:DecentralizeBusinessProcess rdf:type owl:Class ;
                             rdfs:subClassOf :BPMPattern ;
                             rdfs:label "Decentralize business process"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DecentralizedIdentityFeatureApplication
:DecentralizedIdentityFeatureApplication rdf:type owl:Class ;
                                         rdfs:subClassOf :DomainOrientedApplicationDesign ;
                                         owl:disjointWith :EnableSmartContractAccessControl ,
                                                          :InteractingWithBlockchain ,
                                                          :LanguageIdiomApplication ,
                                                          :ManageOnChainData ,
                                                          :MultiDomainFeatureApplication ,
                                                          :OnChainDataEncryption ,
                                                          :OnChainDataMigration ,
                                                          :OnChainStorage ,
                                                          :OnOffChainDataExchange ,
                                                          :SmartContractEfficiency ,
                                                          :SmartContractManagement ,
                                                          :SmartContractSecurity ,
                                                          :SmartContractUsage ;
                                         :problemDescription "I want my blockchain application to handle decentralized identity features"@en ;
                                         rdfs:label "Decentralized identity feature application"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DecentralizedIdentityPattern
:DecentralizedIdentityPattern rdf:type owl:Class ;
                              rdfs:subClassOf :DomainBasedPattern ,
                                              [ rdf:type owl:Restriction ;
                                                owl:onProperty :addressProblem ;
                                                owl:someValuesFrom :DecentralizedIdentityFeatureApplication
                                              ] ;
                              rdfs:label "Decentralized identity pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DefaultValue
:DefaultValue rdf:type owl:Class ;
              rdfs:subClassOf :Idiom ;
              rdfs:label "Default value"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DelegatedComputation
:DelegatedComputation rdf:type owl:Class ;
                      rdfs:subClassOf :OffChainStoragePattern ;
                      rdfs:label "Delegated Computation"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DelegatedTransactions
:DelegatedTransactions rdf:type owl:Class ;
                       rdfs:subClassOf :ArchitecturalPattern ;
                       rdfs:label "Delegated Transactions"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DesignPattern
:DesignPattern rdf:type owl:Class ;
               rdfs:subClassOf :Pattern ,
                               [ rdf:type owl:Restriction ;
                                 owl:onProperty :addressProblem ;
                                 owl:someValuesFrom :DesignPatternApplication
                               ] ;
               rdfs:label "Design pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DesignPatternApplication
:DesignPatternApplication rdf:type owl:Class ;
                          rdfs:subClassOf :Problem ;
                          owl:disjointWith :LanguageIdiomApplication ;
                          :problemDescription "I want to use commonly used design constructs and features in my application"@en ;
                          rdfs:label "Design pattern application"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DigitalRecord
:DigitalRecord rdf:type owl:Class ;
               rdfs:subClassOf :MultiDomainFeaturePattern ;
               rdfs:label "Digital Record"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Domain
:Domain rdf:type owl:Class ;
        rdfs:subClassOf owl:Thing ;
        rdfs:label "Domain"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DomainBasedPattern
:DomainBasedPattern rdf:type owl:Class ;
                    rdfs:subClassOf :OnChainPattern ,
                                    [ rdf:type owl:Restriction ;
                                      owl:onProperty :addressProblem ;
                                      owl:someValuesFrom :DomainOrientedApplicationDesign
                                    ] ;
                    rdfs:label "Domain-based pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DomainOrientedApplicationDesign
:DomainOrientedApplicationDesign rdf:type owl:Class ;
                                 rdfs:subClassOf :BuildOnChainApplication ;
                                 owl:disjointWith :EnableSmartContractAccessControl ,
                                                  :InteractingWithBlockchain ,
                                                  :LanguageIdiomApplication ,
                                                  :ManageOnChainData ,
                                                  :OnChainDataEncryption ,
                                                  :OnChainDataMigration ,
                                                  :OnChainStorage ,
                                                  :OnOffChainDataExchange ,
                                                  :SmartContractEfficiency ,
                                                  :SmartContractManagement ,
                                                  :SmartContractSecurity ,
                                                  :SmartContractUsage ;
                                 :problemDescription "I want my blockchain application to handle features that serve the purpose of a specific domain"@en ;
                                 rdfs:label "Domain-oriented application design"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DualResolution
:DualResolution rdf:type owl:Class ;
                rdfs:subClassOf :DecentralizedIdentityPattern ;
                rdfs:label "Dual Resolution"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DynamicBinding
:DynamicBinding rdf:type owl:Class ;
                rdfs:subClassOf :ContractAccessControlPattern ;
                rdfs:label "Dynamic Binding"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EmbeddedPermission
:EmbeddedPermission rdf:type owl:Class ;
                    rdfs:subClassOf :ContractAccessControlPattern ;
                    rdfs:label "Embedded Permission"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EmergencyStop
:EmergencyStop rdf:type owl:Class ;
               rdfs:subClassOf :ContractSecurityPattern ;
               rdfs:label "Emergency Stop"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EnableSmartContractAccessControl
:EnableSmartContractAccessControl rdf:type owl:Class ;
                                  rdfs:subClassOf :SmartContractUsage ;
                                  owl:disjointWith :InteractingWithBlockchain ,
                                                   :LanguageIdiomApplication ,
                                                   :ManageOnChainData ,
                                                   :MultiDomainFeatureApplication ,
                                                   :OnChainDataEncryption ,
                                                   :OnChainDataMigration ,
                                                   :OnChainStorage ,
                                                   :OnOffChainDataExchange ,
                                                   :SmartContractEfficiency ,
                                                   :SmartContractManagement ,
                                                   :SmartContractSecurity ;
                                  :problemDescription "I want to enable access control and permissions measures when requesting my smart-contracts"@en ;
                                  rdfs:label "Enable smart contract access control"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EncryptingOnChainData
:EncryptingOnChainData rdf:type owl:Class ;
                       rdfs:subClassOf :EncryptionPattern ;
                       rdfs:label "Encrypting on-chain data"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EncryptionPattern
:EncryptionPattern rdf:type owl:Class ;
                   rdfs:subClassOf :DataManagementPattern ,
                                   [ rdf:type owl:Restriction ;
                                     owl:onProperty :addressProblem ;
                                     owl:someValuesFrom :OnChainDataEncryption
                                   ] ;
                   rdfs:label "Encryption pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EstablishGenesis
:EstablishGenesis rdf:type owl:Class ;
                  rdfs:subClassOf :MigrationPattern ;
                  rdfs:label "Establish Genesis"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Ethereum
:Ethereum rdf:type owl:Class ;
          rdfs:subClassOf :SpecificBlockchain ;
          owl:disjointWith :SmartContractEnabledBlockchains ;
          rdfs:label "Ethereum"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EventLog
:EventLog rdf:type owl:Class ;
          rdfs:subClassOf :StoragePattern ;
          rdfs:label "Event log"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ExchangeTransfer
:ExchangeTransfer rdf:type owl:Class ;
                  rdfs:subClassOf :MigrationPattern ;
                  rdfs:label "Exchange Transfer"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ExplicitelyMarkExternalFunction
:ExplicitelyMarkExternalFunction rdf:type owl:Class ;
                                 rdfs:subClassOf :Idiom ;
                                 rdfs:label "Explicitely mark external function"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FactoryContract
:FactoryContract rdf:type owl:Class ;
                 rdfs:subClassOf :ContractManagementPattern ;
                 rdfs:label "Factory Contract"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FewerFunctions
:FewerFunctions rdf:type owl:Class ;
                rdfs:subClassOf :ContractEfficiencyPattern ;
                rdfs:label "Fewer functions"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FixedSize
:FixedSize rdf:type owl:Class ;
           rdfs:subClassOf :Idiom ;
           rdfs:label "Fixed size"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Flyweight
:Flyweight rdf:type owl:Class ;
           rdfs:subClassOf :ContractManagementPattern ;
           rdfs:label "Flyweight"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ForkCheck
:ForkCheck rdf:type owl:Class ;
           rdfs:subClassOf :ContractSecurityPattern ;
           rdfs:label "Fork check"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FreeingStorage
:FreeingStorage rdf:type owl:Class ;
                rdfs:subClassOf :Idiom ;
                rdfs:label "Freeing storage"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#General
:General rdf:type owl:Class ;
         rdfs:subClassOf :Domain ;
         owl:disjointWith :Healthcare ,
                          :IdentityManagement ,
                          :Specific ;
         rdfs:label "General"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#HardFork
:HardFork rdf:type owl:Class ;
          rdfs:subClassOf :MigrationPattern ;
          rdfs:label "Hard Fork"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#HashSecret
:HashSecret rdf:type owl:Class ;
            rdfs:subClassOf :ContractAccessControlPattern ;
            rdfs:label "Hash Secret"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Healthcare
:Healthcare rdf:type owl:Class ;
            rdfs:subClassOf :Specific ;
            rdfs:label "Healthcare"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#HotColdWalletStorage
:HotColdWalletStorage rdf:type owl:Class ;
                      rdfs:subClassOf :WalletAndKeysPattern ;
                      rdfs:label "Hot & Cold Wallet Storage"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#HyperledgerSawtooth
:HyperledgerSawtooth rdf:type owl:Class ;
                     rdfs:subClassOf :SpecificBlockchain ;
                     owl:disjointWith :SmartContractEnabledBlockchains ;
                     rdfs:label "Hyperledger Sawtooth"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier
:Identifier rdf:type owl:Class ;
            rdfs:subClassOf owl:Thing .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#IdentifierRegistry
:IdentifierRegistry rdf:type owl:Class ;
                    rdfs:subClassOf :DecentralizedIdentityPattern ;
                    rdfs:label "Identifier Registry"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#IdentityManagement
:IdentityManagement rdf:type owl:Class ;
                    rdfs:subClassOf :Specific ;
                    rdfs:label "Identity management"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Idiom
:Idiom rdf:type owl:Class ;
       rdfs:subClassOf :Pattern ,
                       [ rdf:type owl:Restriction ;
                         owl:onProperty :addressProblem ;
                         owl:someValuesFrom :LanguageIdiomApplication
                       ] ;
       rdfs:label "Idiom"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#IncentiveExecution
:IncentiveExecution rdf:type owl:Class ;
                    rdfs:subClassOf :ContractEfficiencyPattern ;
                    rdfs:label "Incentive Execution"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#InterFamilyCommunication
:InterFamilyCommunication rdf:type owl:Class ;
                          rdfs:subClassOf :ContractManagementPattern ;
                          rdfs:label "Inter-family communication"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#InteractingWithBlockchain
:InteractingWithBlockchain rdf:type owl:Class ;
                           rdfs:subClassOf :DesignPatternApplication ;
                           owl:disjointWith :LanguageIdiomApplication ,
                                            :ManageOnChainData ,
                                            :MultiDomainFeatureApplication ,
                                            :OnChainDataEncryption ,
                                            :OnChainDataMigration ,
                                            :OnChainStorage ,
                                            :SmartContractEfficiency ,
                                            :SmartContractManagement ,
                                            :SmartContractSecurity ,
                                            :SmartContractUsage ;
                           :problemDescription "I want to enable communication between my application and a blockchain"@en ;
                           rdfs:label "Interacting with blockchain"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#InternalFunctionCalls
:InternalFunctionCalls rdf:type owl:Class ;
                       rdfs:subClassOf :Idiom ;
                       rdfs:label "Internal function calls"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#KeySharding
:KeySharding rdf:type owl:Class ;
             rdfs:subClassOf :WalletAndKeysPattern ;
             rdfs:label "Key Sharding"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#KeyValueStore
:KeyValueStore rdf:type owl:Class ;
               rdfs:subClassOf :StoragePattern ;
               rdfs:label "Key-value store"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Language
:Language rdf:type owl:Class ;
          rdfs:subClassOf owl:Thing ;
          rdfs:label "Language"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LanguageIdiomApplication
:LanguageIdiomApplication rdf:type owl:Class ;
                          rdfs:subClassOf :Problem ;
                          owl:disjointWith :ManageOnChainData ,
                                           :MultiDomainFeatureApplication ,
                                           :OnChainDataEncryption ,
                                           :OnChainDataMigration ,
                                           :OnChainStorage ,
                                           :OnOffChainDataExchange ,
                                           :SmartContractEfficiency ,
                                           :SmartContractManagement ,
                                           :SmartContractSecurity ,
                                           :SmartContractUsage ;
                          :problemDescription "I want to use language idioms in my application"@en ;
                          rdfs:label "Language idiom application"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LegalAndSmartContractPair
:LegalAndSmartContractPair rdf:type owl:Class ;
                           rdfs:subClassOf :OffChainStoragePattern ;
                           rdfs:label "Legal and smart-contract pair"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LimitExternalCalls
:LimitExternalCalls rdf:type owl:Class ;
                    rdfs:subClassOf :ContractEfficiencyPattern ;
                    rdfs:label "Limit external calls"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LimitModifiers
:LimitModifiers rdf:type owl:Class ;
                rdfs:subClassOf :ContractEfficiencyPattern ;
                rdfs:label "Limit modifiers"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LimitStorage
:LimitStorage rdf:type owl:Class ;
              rdfs:subClassOf :ContractEfficiencyPattern ;
              rdfs:label "Limit storage"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LowContractFootprint
:LowContractFootprint rdf:type owl:Class ;
                      rdfs:subClassOf :ContractEfficiencyPattern ;
                      rdfs:label "Low Contract Footprint"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ManageOnChainData
:ManageOnChainData rdf:type owl:Class ;
                   rdfs:subClassOf :BuildOnChainApplication ;
                   owl:disjointWith :MultiDomainFeatureApplication ,
                                    :OnOffChainDataExchange ,
                                    :SmartContractEfficiency ,
                                    :SmartContractManagement ,
                                    :SmartContractSecurity ,
                                    :SmartContractUsage ;
                   :problemDescription "I want to store and manage on-chain data in any format (encrypted or clear)"@en ;
                   rdfs:label "Manage on-chain data"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MappingVsArray
:MappingVsArray rdf:type owl:Class ;
                rdfs:subClassOf :Idiom ;
                rdfs:label "Mapping vs Array"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MasterSubKey
:MasterSubKey rdf:type owl:Class ;
              rdfs:subClassOf :WalletAndKeysPattern ;
              rdfs:label "Master & Sub Key"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Math
:Math rdf:type owl:Class ;
      rdfs:subClassOf :ContractSecurityPattern ;
      rdfs:label "Math"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Migration
:Migration rdf:type owl:Class ;
           rdfs:subClassOf :ContractManagementPattern ;
           rdfs:label "Migration"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MigrationPattern
:MigrationPattern rdf:type owl:Class ;
                  rdfs:subClassOf :DataManagementPattern ,
                                  [ rdf:type owl:Restriction ;
                                    owl:onProperty :addressProblem ;
                                    owl:someValuesFrom :OnChainDataMigration
                                  ] ;
                  rdfs:label "Migration pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MinimizeOnChainData
:MinimizeOnChainData rdf:type owl:Class ;
                     rdfs:subClassOf :ContractEfficiencyPattern ;
                     rdfs:label "Minimize on-chain data"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Mortal
:Mortal rdf:type owl:Class ;
        rdfs:subClassOf :Idiom ;
        rdfs:label "Mortal"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MultiDomainFeatureApplication
:MultiDomainFeatureApplication rdf:type owl:Class ;
                               rdfs:subClassOf :DomainOrientedApplicationDesign ;
                               owl:disjointWith :OnChainDataEncryption ,
                                                :OnChainDataMigration ,
                                                :OnChainStorage ,
                                                :OnOffChainDataExchange ,
                                                :SmartContractEfficiency ,
                                                :SmartContractManagement ,
                                                :SmartContractSecurity ,
                                                :SmartContractUsage ;
                               :problemDescription "I want to reuse multi-domain on-chain features in my blockchain application"@en ;
                               rdfs:label "Multi-domain feature application"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MultiDomainFeaturePattern
:MultiDomainFeaturePattern rdf:type owl:Class ;
                           rdfs:subClassOf :DomainBasedPattern ,
                                           [ rdf:type owl:Restriction ;
                                             owl:onProperty :addressProblem ;
                                             owl:someValuesFrom :MultiDomainFeatureApplication
                                           ] ;
                           rdfs:label "Multi-domain feature pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MultipleAuthorization
:MultipleAuthorization rdf:type owl:Class ;
                       rdfs:subClassOf :ContractAccessControlPattern ;
                       rdfs:label "Multiple authorization"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MultipleRegistration
:MultipleRegistration rdf:type owl:Class ;
                      rdfs:subClassOf :DecentralizedIdentityPattern ;
                      rdfs:label "Multiple Registration"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Mutex
:Mutex rdf:type owl:Class ;
       rdfs:subClassOf :ContractSecurityPattern ;
       rdfs:label "Mutex"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#NodeSync
:NodeSync rdf:type owl:Class ;
          rdfs:subClassOf :MigrationPattern ;
          rdfs:label "Node Sync"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OffChainContractRegistry
:OffChainContractRegistry rdf:type owl:Class ;
                          rdfs:subClassOf :OffChainStoragePattern ;
                          rdfs:label "(Off-chain) Contract Registry"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OffChainDataStorage
:OffChainDataStorage rdf:type owl:Class ;
                     rdfs:subClassOf :OffChainStoragePattern ;
                     rdfs:label "Off-chain data storage"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OffChainSecretEnabledDynamicAuthentication
:OffChainSecretEnabledDynamicAuthentication rdf:type owl:Class ;
                                            rdfs:subClassOf :ContractAccessControlPattern ;
                                            rdfs:label "Off-chain secret enabled dynamic authentication"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OffChainSignatures
:OffChainSignatures rdf:type owl:Class ;
                    rdfs:subClassOf :OffChainStoragePattern ;
                    rdfs:label "Off-chain Signatures"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OffChainStoragePattern
:OffChainStoragePattern rdf:type owl:Class ;
                        rdfs:subClassOf :OnOffChainInteractionPattern ,
                                        [ rdf:type owl:Restriction ;
                                          owl:onProperty :addressProblem ;
                                          owl:someValuesFrom :BlockchainEnhancedOffChainStorage
                                        ] ;
                        rdfs:label "Off-chain storage pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OnChainDataEncryption
:OnChainDataEncryption rdf:type owl:Class ;
                       rdfs:subClassOf :ManageOnChainData ;
                       owl:disjointWith :OnChainDataMigration ,
                                        :OnChainStorage ,
                                        :OnOffChainDataExchange ,
                                        :SmartContractEfficiency ,
                                        :SmartContractManagement ,
                                        :SmartContractSecurity ,
                                        :SmartContractUsage ;
                       :problemDescription "I want to encrypt my on-chain data"@en ;
                       rdfs:label "On-chain data encryption"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OnChainDataMigration
:OnChainDataMigration rdf:type owl:Class ;
                      rdfs:subClassOf :ManageOnChainData ;
                      owl:disjointWith :OnChainStorage ,
                                       :OnOffChainDataExchange ,
                                       :SmartContractEfficiency ,
                                       :SmartContractManagement ,
                                       :SmartContractSecurity ,
                                       :SmartContractUsage ;
                      :problemDescription "I want to migrate my on-chain data from a storage (blockchain and/or smart-contract) to another"@en ;
                      rdfs:label "On-chain data migration"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OnChainPattern
:OnChainPattern rdf:type owl:Class ;
                rdfs:subClassOf :DesignPattern ,
                                [ rdf:type owl:Restriction ;
                                  owl:onProperty :addressProblem ;
                                  owl:someValuesFrom :BuildOnChainApplication
                                ] ;
                rdfs:label "On-chain pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OnChainStorage
:OnChainStorage rdf:type owl:Class ;
                rdfs:subClassOf :ManageOnChainData ;
                owl:disjointWith :OnOffChainDataExchange ,
                                 :SmartContractEfficiency ,
                                 :SmartContractManagement ,
                                 :SmartContractSecurity ,
                                 :SmartContractUsage ;
                :problemDescription "I want to use the best practices to store on-chain data in my blockchain application"@en ;
                rdfs:label "On-chain storage"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OnOffChainDataExchange
:OnOffChainDataExchange rdf:type owl:Class ;
                        rdfs:subClassOf :InteractingWithBlockchain ;
                        owl:disjointWith :SmartContractEfficiency ,
                                         :SmartContractManagement ,
                                         :SmartContractSecurity ,
                                         :SmartContractUsage ;
                        :problemDescription "I want to push up-to-date data on-chain or pull data and events from on-chain smart-contracts"@en ;
                        rdfs:label "On/off-chain data exchange"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OnOffChainInteractionPattern
:OnOffChainInteractionPattern rdf:type owl:Class ;
                              rdfs:subClassOf :DesignPattern ,
                                              [ rdf:type owl:Restriction ;
                                                owl:onProperty :addressProblem ;
                                                owl:someValuesFrom :InteractingWithBlockchain
                                              ] ;
                              rdfs:label "On/off-chain interaction pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Optimizer
:Optimizer rdf:type owl:Class ;
           rdfs:subClassOf :Idiom ;
           rdfs:label "Optimizer"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Oracle
:Oracle rdf:type owl:Class ;
        rdfs:subClassOf :DataExchangePattern .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Ownership
:Ownership rdf:type owl:Class ;
           rdfs:subClassOf :ContractAccessControlPattern ;
           rdfs:label "Ownership"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PackingBooleans
:PackingBooleans rdf:type owl:Class ;
                 rdfs:subClassOf :Idiom ;
                 rdfs:label "Packing booleans"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PackingVariables
:PackingVariables rdf:type owl:Class ;
                  rdfs:subClassOf :Idiom ;
                  rdfs:label "Packing variables"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Paper
:Paper rdf:type owl:Class ;
       rdfs:subClassOf owl:Thing ;
       rdfs:label "Paper"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Pattern
:Pattern rdf:type owl:Class ;
         rdfs:subClassOf owl:Thing ;
         rdfs:label "Pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Poll
:Poll rdf:type owl:Class ;
      rdfs:subClassOf :MultiDomainFeaturePattern ;
      rdfs:label "Poll"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Problem
:Problem rdf:type owl:Class ;
         rdfs:subClassOf owl:Thing ;
         rdfs:label "Problem"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Proposal
:Proposal rdf:type owl:Class ;
          rdfs:subClassOf owl:Thing ;
          rdfs:label "Proposal"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ProxyContract
:ProxyContract rdf:type owl:Class ;
               rdfs:subClassOf :ContractManagementPattern ;
               rdfs:label "Proxy Contract"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PublisherSubscriber
:PublisherSubscriber rdf:type owl:Class ;
                     rdfs:subClassOf :ContractEfficiencyPattern ;
                     rdfs:label "Publisher-Subscriber"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PullBasedInboundOracle
:PullBasedInboundOracle rdf:type owl:Class ;
                        rdfs:subClassOf :DataExchangePattern ;
                        rdfs:label "Pull-based inbound oracle"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PullBasedOutboundOracle
:PullBasedOutboundOracle rdf:type owl:Class ;
                         rdfs:subClassOf :DataExchangePattern ;
                         rdfs:label "Pull-based outbound oracle"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PullPayment
:PullPayment rdf:type owl:Class ;
             rdfs:subClassOf :ContractEfficiencyPattern ;
             rdfs:label "Pull payment"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PushBasedInboundOracle
:PushBasedInboundOracle rdf:type owl:Class ;
                        rdfs:subClassOf :DataExchangePattern ;
                        rdfs:label "Push-based inbound oracle"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PushBasedOutboundOracle
:PushBasedOutboundOracle rdf:type owl:Class ;
                         rdfs:subClassOf :DataExchangePattern ;
                         rdfs:label "Push-based outbound oracle"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Randomness
:Randomness rdf:type owl:Class ;
            rdfs:subClassOf :MultiDomainFeaturePattern ;
            rdfs:label "Randomness"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#RateLimit
:RateLimit rdf:type owl:Class ;
           rdfs:subClassOf :ContractSecurityPattern ;
           rdfs:label "Rate Limit"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ReverseOracle
:ReverseOracle rdf:type owl:Class ;
               rdfs:subClassOf :DataExchangePattern ;
               rdfs:label "Reverse Oracle"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Satellite
:Satellite rdf:type owl:Class ;
           rdfs:subClassOf :ContractManagementPattern ;
           rdfs:label "Satellite"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SecureEtherTransfer
:SecureEtherTransfer rdf:type owl:Class ;
                     rdfs:subClassOf :Idiom ;
                     rdfs:label "Secure Ether Transfer"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SelectiveContentGeneration
:SelectiveContentGeneration rdf:type owl:Class ;
                            rdfs:subClassOf :MultiDomainFeaturePattern ;
                            rdfs:label "Selective Content Generation"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SelfConfirmedTransactions
:SelfConfirmedTransactions rdf:type owl:Class ;
                           rdfs:subClassOf :ArchitecturalPattern ;
                           rdfs:label "Self-Confirmed Transactions"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SelfGeneratedTransactions
:SelfGeneratedTransactions rdf:type owl:Class ;
                           rdfs:subClassOf :ArchitecturalPattern ;
                           rdfs:label "Self-Generated Transactions"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ShortCircuit
:ShortCircuit rdf:type owl:Class ;
              rdfs:subClassOf :Idiom ;
              rdfs:label "Short circuit"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ShortConstantStrings
:ShortConstantStrings rdf:type owl:Class ;
                      rdfs:subClassOf :ContractEfficiencyPattern ;
                      rdfs:label "Short constant strings"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SingleLineSwap
:SingleLineSwap rdf:type owl:Class ;
                rdfs:subClassOf :Idiom ;
                rdfs:label "Single-line swap"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SmartContractActivities
:SmartContractActivities rdf:type owl:Class ;
                         rdfs:subClassOf :BPMPattern ;
                         rdfs:label "Smart Contract Activities"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SmartContractEfficiency
:SmartContractEfficiency rdf:type owl:Class ;
                         rdfs:subClassOf :SmartContractUsage ;
                         owl:disjointWith :SmartContractManagement ,
                                          :SmartContractSecurity ;
                         :problemDescription "I want to improve the efficiency of my blockchain application by optimizing the costs of deploying and executing smart-contracts"@en ;
                         rdfs:label "Smart contract efficiency"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SmartContractEnabledBlockchains
:SmartContractEnabledBlockchains rdf:type owl:Class ;
                                 rdfs:subClassOf :AllBlockchains ;
                                 owl:disjointWith :SpecificBlockchain ;
                                 rdfs:label "Smart-contract enabled blockchains"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SmartContractManagement
:SmartContractManagement rdf:type owl:Class ;
                         rdfs:subClassOf :SmartContractUsage ;
                         owl:disjointWith :SmartContractSecurity ;
                         :problemDescription "I want to organize and manage my suite of deployed smart-contracts on-chain"@en ;
                         rdfs:label "Smart contract management"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SmartContractPattern
:SmartContractPattern rdf:type owl:Class ;
                      rdfs:subClassOf :OnChainPattern ,
                                      [ rdf:type owl:Restriction ;
                                        owl:onProperty :addressProblem ;
                                        owl:someValuesFrom :SmartContractUsage
                                      ] ;
                      rdfs:label "Smart-contract pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SmartContractSecurity
:SmartContractSecurity rdf:type owl:Class ;
                       rdfs:subClassOf :SmartContractUsage ;
                       :problemDescription "I want to improve the security of my smart contract against vulnerabilities and abuses"@en ;
                       rdfs:label "Smart contract security"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SmartContractTranslation
:SmartContractTranslation rdf:type owl:Class ;
                          rdfs:subClassOf :MigrationPattern ;
                          rdfs:label "Smart Contract Translation"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SmartContractUsage
:SmartContractUsage rdf:type owl:Class ;
                    rdfs:subClassOf :BuildOnChainApplication ;
                    :problemDescription "I want to use smart-contracts in the design of my blockchain application"@en ;
                    rdfs:label "Smart contract usage"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Snapshotting
:Snapshotting rdf:type owl:Class ;
              rdfs:subClassOf :MigrationPattern ;
              rdfs:label "Snapshotting"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Solidity
:Solidity rdf:type owl:Class ;
          rdfs:subClassOf :Language ;
          rdfs:label "Solidity"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Specific
:Specific rdf:type owl:Class ;
          rdfs:subClassOf :Domain ;
          rdfs:label "Specific"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SpecificBlockchain
:SpecificBlockchain rdf:type owl:Class ;
                    rdfs:subClassOf :Blockchain ;
                    rdfs:label "Specific blockchain"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SpeedBump
:SpeedBump rdf:type owl:Class ;
           rdfs:subClassOf :ContractSecurityPattern ;
           rdfs:label "Speed Bump"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#StateAggregation
:StateAggregation rdf:type owl:Class ;
                  rdfs:subClassOf :MigrationPattern ;
                  rdfs:label "State Aggregation"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#StateChannel
:StateChannel rdf:type owl:Class ;
              rdfs:subClassOf :OffChainStoragePattern ;
              rdfs:label "State Channel"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#StateInitialization
:StateInitialization rdf:type owl:Class ;
                     rdfs:subClassOf :MigrationPattern ;
                     rdfs:label "State Initialization"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#StateMachine
:StateMachine rdf:type owl:Class ;
              rdfs:subClassOf :MultiDomainFeaturePattern ;
              rdfs:label "State machine"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#StoragePattern
:StoragePattern rdf:type owl:Class ;
                rdfs:subClassOf :DataManagementPattern ,
                                [ rdf:type owl:Restriction ;
                                  owl:onProperty :addressProblem ;
                                  owl:someValuesFrom :OnChainStorage
                                ] ;
                rdfs:label "Storage pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Termination
:Termination rdf:type owl:Class ;
             rdfs:subClassOf :ContractSecurityPattern ;
             rdfs:label "Termination"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TightVariablePacking
:TightVariablePacking rdf:type owl:Class ;
                      rdfs:subClassOf :ContractEfficiencyPattern ;
                      rdfs:label "Tight Variable Packing"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TimeConstrainedAccess
:TimeConstrainedAccess rdf:type owl:Class ;
                       rdfs:subClassOf :MultiDomainFeaturePattern ;
                       rdfs:label "Time-Constrained Access"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TimeConstraint
:TimeConstraint rdf:type owl:Class ;
                rdfs:subClassOf :ContractSecurityPattern ;
                rdfs:label "Time Constraint"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TokenBurning
:TokenBurning rdf:type owl:Class ;
              rdfs:subClassOf :MigrationPattern ;
              rdfs:label "Token burning"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Tokenisation
:Tokenisation rdf:type owl:Class ;
              rdfs:subClassOf :StoragePattern .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TransactionReplay
:TransactionReplay rdf:type owl:Class ;
                   rdfs:subClassOf :MigrationPattern ;
                   rdfs:label "Transaction Replay"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TransactionsPattern
:TransactionsPattern rdf:type owl:Class ;
                     rdfs:subClassOf :OnOffChainInteractionPattern ,
                                     [ rdf:type owl:Restriction ;
                                       owl:onProperty :addressProblem ;
                                       owl:someValuesFrom :BlockchainTransactionHandling
                                     ] ;
                     rdfs:label "Transactions pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TransparentEventLog
:TransparentEventLog rdf:type owl:Class ;
                     rdfs:subClassOf :StoragePattern ;
                     rdfs:label "Transparent Event Log"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#UintVsUint256
:UintVsUint256 rdf:type owl:Class ;
               rdfs:subClassOf :Idiom ;
               rdfs:label "Uint* vs Uint256"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Unspecified
:Unspecified rdf:type owl:Class ;
             rdfs:subClassOf :Language ;
             rdfs:label "Unspecified"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#UseLibraries
:UseLibraries rdf:type owl:Class ;
              rdfs:subClassOf :ContractEfficiencyPattern ;
              rdfs:label "Use libraries"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Variant
:Variant rdf:type owl:Class ;
         rdfs:subClassOf owl:Thing ;
         rdfs:label "Variant"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#VirtualMachineEmulation
:VirtualMachineEmulation rdf:type owl:Class ;
                         rdfs:subClassOf :MigrationPattern ;
                         rdfs:label "Virtual Machine Emulation"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#WalletAndKeysPattern
:WalletAndKeysPattern rdf:type owl:Class ;
                      rdfs:subClassOf :OnOffChainInteractionPattern ,
                                      [ rdf:type owl:Restriction ;
                                        owl:onProperty :addressProblem ;
                                        owl:someValuesFrom :AssetManagement
                                      ] ;
                      rdfs:label "Wallet and keys pattern"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#WriteValues
:WriteValues rdf:type owl:Class ;
             rdfs:subClassOf :ContractEfficiencyPattern ;
             rdfs:label "Write values"@en .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#XConfirmation
:XConfirmation rdf:type owl:Class ;
               rdfs:subClassOf :TransactionsPattern ;
               rdfs:label "X-confirmation"@en .


#################################################################
#    Individuals
#################################################################

###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AbstractFactoryZhang2017Applying
:AbstractFactoryZhang2017Applying rdf:type owl:NamedIndividual ,
                                           :Healthcare ,
                                           :Proposal ,
                                           :SmartContractEnabledBlockchains ,
                                           :Unspecified ;
                                  :hasPaper :Zhang2017Applying ;
                                  :hasVariant :FactoryContractV ;
                                  :ApplicationExample "PoC (from the same paper)"^^rdfs:Literal ,
                                                      "Proposed approach (from the same paper)"^^rdfs:Literal ;
                                  :ContextAndProblem "Smart contracts allow code to be executed on the blockchain by the EVM. The incorruptibility property of blockchain ensures that interfaces (e.g. methods and properties) of already instantiated contracts cannot be modified or upgraded. Each new version of a smart contract has to be created as a new contract object on the blockchain and distributed among all the network nodes to be executed on demand. Therefore, it is important to design a contract class to modularize code and minimize changes to its interface over time."^^rdfs:Literal ;
                                  :Solution "The Abstract Factory pattern can facilitate this scenario because its factory object (the factory itself is a contract instance) is then responsible for providing creation services of concrete departmental contracts for the entire health organization. Each factory object can create contracts for a group of departments or subdivisions that are related or always interact, and it is easy to instantiate another factory object when new interactions take place."^^rdfs:Literal ;
                                  rdfs:label "Abstract factory (Zhang, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AbstractFactoryZhang2018Chapter
:AbstractFactoryZhang2018Chapter rdf:type owl:NamedIndividual ,
                                          :Healthcare ,
                                          :Proposal ,
                                          :SmartContractEnabledBlockchains ,
                                          :Unspecified ;
                                 :hasPaper :Zhang2018Chapter ;
                                 :hasVariant :FactoryContractV ;
                                 :ContextAndProblem "As part of the initial user on boarding process, account creation and management may occur on the Blockchain in order to define unique identifications for an organization or individual. Many organizations in the healthcare industry, such as enterprise hospitals and insurance companies, are hierarchical and evolving in nature. One design problem is thus to create an account structure that supports organization evolvability while minimizing integration complexity when new entities of different functions (e.g., a new division or department) are introduced. Specifically, the immutability property of Blockchain technology ensures that smart contract interface (including data member definitions and functions) cannot be modified. Each change to a smart contract must be deployed as a new contract object on the Blockchain and distributed among all the network nodes so it can be executed on demand.To minimize interface changes over time, it is important to create a modular design."^^rdfs:Literal ;
                                 :Solution "This pattern allows DApps like DASH to delegate the responsibility for providing account creation services to an abstract factory object (which is a contract instance itself). A concrete factory object can then inherit methods from the abstract factory and customize them to create accounts for a specific set of related or interacting sub-entities."^^rdfs:Literal ;
                                 rdfs:label "Abstract factory (Zhang, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AccessRestrictionV
:AccessRestrictionV rdf:type owl:NamedIndividual ,
                             :AccessRestriction ,
                             :Variant ;
                    :hasProposal :AccessRestrictionWöhrer2018Design ;
                    rdfs:label "Access Restriction" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AccessRestrictionWöhrer2018Design
:AccessRestrictionWöhrer2018Design rdf:type owl:NamedIndividual ,
                                            :Ethereum ,
                                            :General ,
                                            :Proposal ,
                                            :Solidity ;
                                   :hasPaper :Wöhrer2018Design ;
                                   :hasVariant :AccessRestrictionV ;
                                   :ApplicationExample "Etheroll"^^rdfs:Literal ;
                                   :ContextAndProblem "By default a contract method is executed without any preconditions being checked, but it is desired that the execution is only allowed if certain requirements are met."^^rdfs:Literal ;
                                   :Solution "Since there is no built in mechanism to control executionprivileges, a common pattern is to restrict function execution. It is often required that functions should only be executed based on the presence of certain prerequisites. These can refer to different categories, such as temporal conditions, caller and transaction info, or other requirements that need to be checked prior a function execution. Listing"^^rdfs:Literal ;
                                   rdfs:label "Access Restriction (Wöhrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AddressMapping
:AddressMapping rdf:type owl:NamedIndividual .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AddressMappingV
:AddressMappingV rdf:type owl:NamedIndividual ,
                          :AddressMapping ,
                          :Variant ;
                 :hasProposal :AddressMappingWorley2019Opportunities ;
                 rdfs:label "Address mapping" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AddressMappingWorley2019Opportunities
:AddressMappingWorley2019Opportunities rdf:type owl:NamedIndividual ,
                                                :General ,
                                                :Proposal ,
                                                :SmartContractEnabledBlockchains ,
                                                :Unspecified ;
                                       :hasPaper :Worley2019Opportunities ;
                                       :hasVariant :AddressMappingV ;
                                       :ApplicationExample "ERC20 token implementation of OpenZeppelin (https://docs.openzeppelin.com/contracts/2.x/api/token/erc20)"^^rdfs:Literal ,
                                                           "Native support from Solidity language (https://docs.soliditylang.org/en/latest/types.html)"^^rdfs:Literal ;
                                       :ContextAndProblem "Smart contracts often interact with various users, all of whom must be tracked independently. How can relationships between the smart contract and user accounts be managed correctly?"^^rdfs:Literal ;
                                       :Solution "Establish a mapping from addresses to contract-relevant data, defined for all possible Ethereum addresses. In the case of accounts that the contract has never interacted with, the mapping is from the address to a default value of the codomain (the set being mapped to). This mapping may be changed by the contract to other values of the type."^^rdfs:Literal ;
                                       rdfs:label "Address mapping (Worley, 2019)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AnchoringToBlockchainLiu2020Design
:AnchoringToBlockchainLiu2020Design rdf:type owl:NamedIndividual ,
                                             :AllBlockchains ,
                                             :IdentityManagement ,
                                             :Proposal ,
                                             :Unspecified ;
                                    :hasPaper :Liu2020Design ;
                                    :hasVariant :OffChainDataStorageV ;
                                    :relatedTo :LowContractFootprintEberhardt2017On ,
                                               :OffChainDataStorageXu2018A ;
                                    :ApplicationExample "Blockstack (https://blockstack.org/)"^^rdfs:Literal ,
                                                        "Chainpoint (https://chainpoint.org/)"^^rdfs:Literal ,
                                                        "I. Weber, Q. Lu, A. B. Tran, A. Deshmukh, M. Gorski, and M. Strazds, “A platform architecture for multi-tenant blockchain-based systems,” in2019 IEEE International Conference on Software Architecture (ICSA), March 2019, pp. 101–110."^^rdfs:Literal ;
                                    :ContextAndProblem "Blockchain’s nature configurations may limit its performance when facing a large number of transactions. Blockchain can ensure data integrity via storing data on-chain, but it costs real money to process the transaction in many public blockchain networks. In addition, according to the nature consensus mechanism, blockchain generates a block in a fixed period (i.e. block interval), which only includes a restricted number of transactions due to the block size. Consequently, blockchain’s performance may be restricted when users frequently initiate transactions."^^rdfs:Literal ;
                                    :Solution "Blockchain Anchor relies on the hashing technology that one does not need to store everything on-chain, but periodically sends the unique hash value of off-chain data to blockchain."^^rdfs:Literal ;
                                    rdfs:label "Anchoring to Blockchain (Liu, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AnnouncementV
:AnnouncementV rdf:type owl:NamedIndividual ,
                        :Announcement ,
                        :Variant ;
               :hasProposal :AnnouncementWorley2019Opportunities ;
               rdfs:label "Announcement" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AnnouncementWorley2019Opportunities
:AnnouncementWorley2019Opportunities rdf:type owl:NamedIndividual ,
                                              :General ,
                                              :Proposal ,
                                              :SmartContractEnabledBlockchains ,
                                              :Unspecified ;
                                     :hasPaper :Worley2019Opportunities ;
                                     :hasVariant :AnnouncementV ;
                                     :requires :AuthorizationWorley2019Opportunities ;
                                     :ContextAndProblem "Information from different sources on the blockchain must be accessed by entities on-chain."^^rdfs:Literal ;
                                     :Solution "Create a contract that serves as a space where Authorized contracts can post announcements. These announcements can then be viewed by any other contract."^^rdfs:Literal ;
                                     rdfs:label "Announcement (Worley, 2019)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AntiOracleWorley2019Opportunities
:AntiOracleWorley2019Opportunities rdf:type owl:NamedIndividual ,
                                            :General ,
                                            :Proposal ,
                                            :SmartContractEnabledBlockchains ,
                                            :Unspecified ;
                                   :hasPaper :Worley2019Opportunities ;
                                   :hasVariant :ReverseOracleV ;
                                   :ContextAndProblem "Information from different sources on the blockchain must be accessed off-chain."^^rdfs:Literal ;
                                   :Solution "Create an off-chain daemon that periodically examines the blockchain for specific events and collates the records of those events into a single off-chain source. Off-chain entities can then read a well-formatted digest of the relevant information."^^rdfs:Literal ;
                                   rdfs:label "Anti-Oracle (Worley, 2019)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AuthorizationBartoletti2017An
:AuthorizationBartoletti2017An rdf:type owl:NamedIndividual ,
                                        :Ethereum ,
                                        :General ,
                                        :Proposal ,
                                        :Solidity ;
                               :hasPaper :Bartoletti2017An ;
                               :hasVariant :EmbeddedPermissionV ;
                               :ApplicationExample "CharlyLifeLog (https://etherscan.io/address/0x5A5eFF38DA95b0D58b6C616f2699168B480953C9#code)"^^rdfs:Literal ,
                                                   "Corporation contract (https://etherscan.io/address/0x684282178b1d61164febcf9609ca195bef9a33b5#code)"^^rdfs:Literal ,
                                                   "Doubler contract (https://etherscan.io/address/0xdc84953D7C6448e498Eb3C33ab0F815da5D13999#code)"^^rdfs:Literal ;
                               :ContextAndProblem ""^^rdfs:Literal ;
                               :Solution "This pattern is used to restrict the execution of code according to the caller address. The majority of the analysed contracts check if the caller address is that of the contract owner, before performing critical operations (e.g., sending ether, invoking suicide or selfdestruct)."^^rdfs:Literal ;
                               rdfs:label "Authorization (Bartoletti, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AuthorizationWorley2019Opportunities
:AuthorizationWorley2019Opportunities rdf:type owl:NamedIndividual ,
                                               :General ,
                                               :Proposal ,
                                               :SmartContractEnabledBlockchains ,
                                               :Unspecified ;
                                      :hasPaper :Worley2019Opportunities ;
                                      :hasVariant :EmbeddedPermissionV ;
                                      :ApplicationExample "Ownable contract implementation of OpenZeppelin (https://docs.openzeppelin.com/contracts/2.x/api/ownership)"^^rdfs:Literal ;
                                      :ContextAndProblem "A smart contract may need to transition to a new state that isn’t defined by its internal logic because of some external event or internal flaw. Since smart contracts are immutable, how can this transition be performed?"^^rdfs:Literal ;
                                      :Solution "Establish a permissioning system where the contract is hard-coded to perform special actions in response to specific users. This permission may come from a single user or a vote of many, and privileges may range from setting state variables to completely destroying the contract. The exact details of the permissions and privileges must be specified at creation."^^rdfs:Literal ;
                                      rdfs:label "Authorization (Worley, 2019)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AutomaticDeprecationV
:AutomaticDeprecationV rdf:type owl:NamedIndividual ,
                                :AutomaticDeprecation ,
                                :Variant ;
                       :hasProposal :AutomaticDeprecationWöhrer2018Design ;
                       rdfs:label "Automatic Deprecation" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AutomaticDeprecationWöhrer2018Design
:AutomaticDeprecationWöhrer2018Design rdf:type owl:NamedIndividual ,
                                               :Ethereum ,
                                               :General ,
                                               :Proposal ,
                                               :Solidity ;
                                      :hasPaper :Wöhrer2018Design ;
                                      :hasVariant :AutomaticDeprecationV ;
                                      :ApplicationExample "Polkadot"^^rdfs:Literal ;
                                      :ContextAndProblem "A usage scenario requires a temporal constraint defining a point in time when functions become deprecated."^^rdfs:Literal ;
                                      :Solution "Define an expiration time and apply modifiers in function definitions to disable function execution if the expiration date has been reached."^^rdfs:Literal ;
                                      rdfs:label "Automatic Deprecation (Wöhrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AvoidRedundantOperationsMarchesi2020Design
:AvoidRedundantOperationsMarchesi2020Design rdf:type owl:NamedIndividual ,
                                                     :Ethereum ,
                                                     :General ,
                                                     :Proposal ,
                                                     :Solidity ;
                                            :hasPaper :Marchesi2020Design ;
                                            :hasVariant :AvoidRedundantOperationsV ;
                                            :ContextAndProblem "Every single operation costs gas."^^rdfs:Literal ;
                                            :Solution "Avoid redundant operations. For instance, avoid double checks; the use of SafeMath library prevents underflow and overflow, so there is no need to check for them."^^rdfs:Literal ;
                                            rdfs:label "Avoid redundant operations (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#AvoidRedundantOperationsV
:AvoidRedundantOperationsV rdf:type owl:NamedIndividual ,
                                    :AvoidRedundantOperations ,
                                    :Variant ;
                           :hasProposal :AvoidRedundantOperationsMarchesi2020Design ;
                           rdfs:label "Avoid redundant operations" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BalanceLimitWohrer2018Smart
:BalanceLimitWohrer2018Smart rdf:type owl:NamedIndividual ,
                                      :Ethereum ,
                                      :General ,
                                      :Proposal ,
                                      :Solidity ;
                             :hasPaper :Wohrer2018Smart ;
                             :hasVariant :ContractBalanceLimitV ;
                             :ContextAndProblem "There is always a risk that a contract gets compromised due to bugs in the code or yet unknown security issues within the contract platform."^^rdfs:Literal ;
                             :Solution "Limit the maximum amount of funds at risk held within a contract."^^rdfs:Literal ;
                             rdfs:label "Balance Limit (Wohrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Bandara2020Patterns
:Bandara2020Patterns rdf:type owl:NamedIndividual ,
                              :Paper ;
                     :hasIdentifier :Identifier15 ;
                     :proposes :EstablishGenesisBandara2020Patterns ,
                               :ExchangeTransferBandara2020Patterns ,
                               :HardForkBandara2020Patterns ,
                               :NodeSyncBandara2020Patterns ,
                               :SmartContractTranslationBandara2020Patterns ,
                               :SnapshottingBandara2020Patterns ,
                               :StateAggregationBandara2020Patterns ,
                               :StateInitializationBandara2020Patterns ,
                               :TokenBurningBandara2020Patterns ,
                               :TransactionReplayBandara2020Patterns ,
                               :VirtualMachineEmulationBandara2020Patterns ;
                     :Authors "Bandara, HMN Dilum and Xu, Xiwei and Weber, Ingo"^^rdfs:Literal ;
                     :Identifier "10.1145/3424771.3424796"^^rdfs:Literal ;
                     :IdentifierType "DOI"^^rdfs:Literal ;
                     :Title "Patterns for Blockchain Data Migration"^^rdfs:Literal ;
                     :Year "2020"^^rdfs:Literal ;
                     rdfs:label "Patterns for Blockchain Data Migration" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Bartoletti2017An
:Bartoletti2017An rdf:type owl:NamedIndividual ,
                           :Paper ;
                  :hasIdentifier :Identifier9 ;
                  :proposes :AuthorizationBartoletti2017An ,
                            :ForkCheckBartoletti2017An ,
                            :MathBartoletti2017An ,
                            :OracleBartoletti2017An ,
                            :PollBartoletti2017An ,
                            :RandomnessBartoletti2017An ,
                            :TerminationBartoletti2017An ,
                            :TimeConstraintBartoletti2017An ,
                            :TokenBartoletti2017An ;
                  :Authors "Bartoletti, Massimo and Pompianu, Livio"^^rdfs:Literal ;
                  :Identifier "10.1007/978-3-319-70278-0_31"^^rdfs:Literal ;
                  :IdentifierType "DOI"^^rdfs:Literal ;
                  :Journal "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)"^^rdfs:Literal ;
                  :Pages "494--509"^^rdfs:Literal ;
                  :Title "An Empirical analysis of smart contracts: Platforms, applications, and design patterns"^^rdfs:Literal ;
                  :Volume "10323 LNCS"^^rdfs:Literal ;
                  :Year "2017"^^rdfs:Literal ;
                  rdfs:label "An Empirical analysis of smart contracts: Platforms, applications, and design patterns" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BlockchainBasedReputationSystemMüller2020Silver
:BlockchainBasedReputationSystemMüller2020Silver rdf:type owl:NamedIndividual ,
                                                          :AllBlockchains ,
                                                          :BPM ,
                                                          :Proposal ,
                                                          :Unspecified ;
                                                 :hasPaper :Müller2020Silver ;
                                                 :hasVariant :BlockchainBasedReputationSystemV ;
                                                 :ContextAndProblem "Reputation systems are a well-established method that has been used from the early ages of e-commerce to symbolize the trustworthiness of online business partners. Hence, they are an approach to build confidence in a process. From a technical perspective, reputation systems store the reputation claim that a source makes regarding a specific reputation target [26]. This requires the user to trust the centralized authority not to manipulate the saved reputation data."^^rdfs:Literal ;
                                                 :Solution "The blockchain technology can be leveraged to implement fully decentralized reputation systems. In such decentralized systems, there is no need to trust a centralized party for the integrity of reputation statements and their aggregation since all blockchain participants have access to the data"^^rdfs:Literal ;
                                                 rdfs:label "Blockchain-based reputation system (Müller, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BlockchainBasedReputationSystemV
:BlockchainBasedReputationSystemV rdf:type owl:NamedIndividual ,
                                           :BlockchainBasedReputationSystem ,
                                           :Variant ;
                                  :hasProposal :BlockchainBasedReputationSystemMüller2020Silver ;
                                  rdfs:label "Blockchain-based reputation system" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BlockchainBpEngineMüller2020Silver
:BlockchainBpEngineMüller2020Silver rdf:type owl:NamedIndividual ,
                                             :AllBlockchains ,
                                             :BPM ,
                                             :Proposal ,
                                             :Unspecified ;
                                    :hasPaper :Müller2020Silver ;
                                    :hasVariant :BlockchainBpEngineV ;
                                    :requires :Oracle ;
                                    :ContextAndProblem "For the successful execution of an instance of a business process, it is inevitable to ensure the correct control flow between subprocesses and activities of different organizations and within the same organization. To ensure the execution of a business process according to its defining model, business process engines [22] are commonly utilized. Traditionally, such engines are centrally managed. This implies that all other collaborators have to trust that the business process engine managed by one collaborator acts as intended. From a trust-aware BPM view, this means that there is uncertainty regarding the correctness (integrity) of the process flow present."^^rdfs:Literal ;
                                    :Solution "Blockchain-based business processes engines, as proposed by Lopez-Pintado et al. [23], store business process models in smart contracts on a blockchain. All collaborators have access to the smart contract and can, at any point, verify the model’s correctness."^^rdfs:Literal ;
                                    rdfs:label "Blockchain BP Engine (Müller, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BlockchainBpEngineV
:BlockchainBpEngineV rdf:type owl:NamedIndividual ,
                              :BlockchainBpEngine ,
                              :Variant ;
                     :hasProposal :BlockchainBpEngineMüller2020Silver ;
                     rdfs:label "Blockchain BP Engine" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BlockchainSecurityPatternForBigDataEcosystemsMoreno2019BlockBD
:BlockchainSecurityPatternForBigDataEcosystemsMoreno2019BlockBD rdf:type owl:NamedIndividual ,
                                                                         :BigData ,
                                                                         :Proposal ,
                                                                         :SmartContractEnabledBlockchains ,
                                                                         :Unspecified ;
                                                                :benefitsFrom :Unknown ;
                                                                :hasPaper :Moreno2019BlockBD ;
                                                                :hasVariant :BlockchainSecurityPatternForBigDataEcosystemsV ;
                                                                :requires :Unknown ;
                                                                :variantOf :Unknown ;
                                                                :ApplicationExample "Omnilytics (https://platform.omnilytics.co)"^^rdfs:Literal ;
                                                                :ContextAndProblem "Usually Data lakes are chaotic; they are a store where all the data of a company is accumulated without any kind of structure or rules to use it. For that reason, some people have started to call it Data swamps [12]. This problem can lead to a decrease of the value of the data. The Blockchain security pattern for Big Data Ecosystem tries to improve the traceability and integrity of the data stored in this kind of systems. In a nutshell, this security pattern will help in the implementation of a security solution to tackle a vulnerability of a Big Data ecosystem: huge amount of data can lead to a loss of control of the data and the operations that are performed on them, which can cause a loss of confidence in them."^^rdfs:Literal ;
                                                                :Solution "The solution is based on the incorporation of a Blockchain layer that uses the same nodes utilized by the Big Data ecosystems. This layer will act as distributed ledger system that registers all the operations performed over the data stored. In the following subsection, our solution is explained in more detail. The Blockchain security pattern for Big Data ecosystems uses the elements of the SRA as a way to facilitate its implementation in a real scenario. More specifically, this pattern tries to improve the security of the Collector (in the BDAP component) which is implemented by the elements of the BDFP component."^^rdfs:Literal ;
                                                                rdfs:label "Blockchain Security Pattern for Big Data Ecosystems (Moreno, 2019)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BlockchainSecurityPatternForBigDataEcosystemsV
:BlockchainSecurityPatternForBigDataEcosystemsV rdf:type owl:NamedIndividual ,
                                                         :BlockchainSecurityPatternForBigDataEcosystems ,
                                                         :Variant ;
                                                :hasProposal :BlockchainSecurityPatternForBigDataEcosystemsMoreno2019BlockBD ;
                                                rdfs:label "Blockchain Security Pattern for Big Data Ecosystems" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BlocklistV
:BlocklistV rdf:type owl:NamedIndividual ,
                     :Blocklist ,
                     :Variant ;
            :hasProposal :BlocklistWorley2019Opportunities ;
            rdfs:label "Blocklist" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BlocklistWorley2019Opportunities
:BlocklistWorley2019Opportunities rdf:type owl:NamedIndividual ,
                                           :General ,
                                           :Proposal ,
                                           :SmartContractEnabledBlockchains ,
                                           :Unspecified ;
                                  :hasPaper :Worley2019Opportunities ;
                                  :hasVariant :BlocklistV ;
                                  :ContextAndProblem "A contract needs to record a set of entities that will be disallowed access to some asset off-chain"^^rdfs:Literal ;
                                  :Solution "Define a contract that stores a Bloom filter coefficient set. Off-chain clients may download the coefficients to calculate with the Bloom filter"^^rdfs:Literal ;
                                  rdfs:label "Blocklist (Worley, 2019)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BoundWithSocialMediaLiu2020Design
:BoundWithSocialMediaLiu2020Design rdf:type owl:NamedIndividual ,
                                            :IdentityManagement ,
                                            :Proposal ,
                                            :SmartContractEnabledBlockchains ,
                                            :Unspecified ;
                                   :hasPaper :Liu2020Design ;
                                   :hasVariant :BoundWithSocialMediaV ;
                                   :requires :IdentifierRegistryLiu2020Design ;
                                   :ApplicationExample "Onename (https://www.onename.com)"^^rdfs:Literal ;
                                   :ContextAndProblem "Social media profiles can be considered as one of the most important assets, which are critical to achieve more exposure on the internet, attract more attention, or improve online reputation. The trustworthiness of a social media profile can be improved by verifying the account using traditional identity issued by some central authority. On the other hand, blockchain provides a decentralised infrastructure for self-sovereign identity, where entities are in control over their own identities. In addition to verification by some certain people or central authorities, a user can link his/her social media profile (e.g. Twitter) to his/her identity registered on blockchain to improve the trustworthiness of both social media profile and blockchain-based identity. The problem here is how to bind a social media profile with the corresponding blockchain-based identity to ensure mapping."^^rdfs:Literal ;
                                   :Solution "An entity can create an attribute of social media in the identifier document. Signing the attribute with the blockchain signing key creates a claim that the blockchainbased identity controls the social media account. The attribute also contains a URL which links to a social media post stating that the social media account also controls this particular blockchain identity. Thus, a two-way link is established for connecting the blockchain identity with the social media profile. The two directional binding makes sure that that the social media profile and blockchain-based identity have a 1-to-1 mapping."^^rdfs:Literal ;
                                   rdfs:label "Bound with Social Media (Liu, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BoundWithSocialMediaV
:BoundWithSocialMediaV rdf:type owl:NamedIndividual ,
                                :BoundWithSocialMedia ,
                                :Variant ;
                       :hasProposal :BoundWithSocialMediaLiu2020Design ;
                       rdfs:label "Bound with Social Media" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BulletinBoardV
:BulletinBoardV rdf:type owl:NamedIndividual ,
                         :BulletinBoard ,
                         :Variant ;
                :benefitsFrom :JudgeV ,
                              :VoteV ;
                :hasProposal :BulletinBoardWorley2019Opportunities ;
                rdfs:label "Bulletin Board" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#BulletinBoardWorley2019Opportunities
:BulletinBoardWorley2019Opportunities rdf:type owl:NamedIndividual ,
                                               :General ,
                                               :Proposal ,
                                               :SmartContractEnabledBlockchains ,
                                               :Unspecified ;
                                      :benefitsFrom :JudgeWorley2019Opportunities ,
                                                    :VoteWorley2019Opportunities ;
                                      :hasPaper :Worley2019Opportunities ;
                                      :hasVariant :BulletinBoardV ;
                                      :ContextAndProblem "A contract must supply irregular updates on real-world data, from multiple sources."^^rdfs:Literal ;
                                      :Solution "Create a Bulletin Board contract, where requests for data can be posted and answered by users. Define a decision process for acceptance of the answers, perhaps using the Vote or Judge patterns, and expose the answer data."^^rdfs:Literal ;
                                      rdfs:label "Bulletin Board (Worley, 2019)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ChallengeResponseEberhardt2017On
:ChallengeResponseEberhardt2017On rdf:type owl:NamedIndividual ,
                                           :General ,
                                           :Proposal ,
                                           :SmartContractEnabledBlockchains ,
                                           :Unspecified ;
                                  :hasPaper :Eberhardt2017On ;
                                  :hasVariant :ChallengeResponseV ;
                                  :ApplicationExample "Chess on Ethereum. https://medium.com/@graycoding/lessons-learned-from-making-a-chess-game-for-ethereum-6917c01178b6, accessed: 2017-06-26"^^rdfs:Literal ,
                                                      "Ethereum Chess Proof-of-Concept Implementation. https://github.com/ise-ethereum/on-chain-chess, accessed: 2017-06-26"^^rdfs:Literal ;
                                  :ContextAndProblem "A smart contract models a state machine with well-defined final states. State transitions are cheap to compute, but checking whether a given state is a final state is expensive."^^rdfs:Literal ;
                                  :Solution "Instead of checking whether a state is final or not in a smart contract on a blockchain, the same check is performed off-chain on the client side. A client can notify a smart contract when a final state has been reached. Other clients can prove claims wrong by providing a valid state transition. Using this pattern, the computation never has to be performed on-chain"^^rdfs:Literal ;
                                  rdfs:label "Challenge Response (Eberhardt, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ChallengeResponseV
:ChallengeResponseV rdf:type owl:NamedIndividual ,
                             :ChallengeResponse ,
                             :Variant ;
                    :hasProposal :ChallengeResponseEberhardt2017On ;
                    rdfs:label "Challenge Response" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ChecksEffectInteractionsRajasekar2020Emerging
:ChecksEffectInteractionsRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                                        :General ,
                                                        :Proposal ,
                                                        :SmartContractEnabledBlockchains ,
                                                        :Unspecified ;
                                               :createdFrom :ChecksEffectsInteractionWohrer2018Smart ;
                                               :hasPaper :Rajasekar2020Emerging ;
                                               :hasVariant :ChecksEffectInteractionsV ;
                                               :ContextAndProblem "If the ”interactions” occur before the ”effects” are recorded and the invoked contract makes a callback to the original one, the system state can be exploited."^^rdfs:Literal ;
                                               :Solution "The contract first checks whether the necessary conditions are met, then makes necessary changes to the contract state (effects) and finally passes control to another contract (interactions)"^^rdfs:Literal ;
                                               rdfs:label "Checks-Effect-Interactions (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ChecksEffectInteractionsV
:ChecksEffectInteractionsV rdf:type owl:NamedIndividual ,
                                    :ChecksEffectInteractions ,
                                    :Variant ;
                           :hasProposal :ChecksEffectInteractionsRajasekar2020Emerging ,
                                        :ChecksEffectsInteractionWohrer2018Smart ;
                           rdfs:label "Checks-Effect-Interactions" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ChecksEffectsInteractionWohrer2018Smart
:ChecksEffectsInteractionWohrer2018Smart rdf:type owl:NamedIndividual ,
                                                  :Ethereum ,
                                                  :General ,
                                                  :Proposal ,
                                                  :Solidity ;
                                         :hasPaper :Wohrer2018Smart ;
                                         :hasVariant :ChecksEffectInteractionsV ;
                                         :ContextAndProblem "When a contract calls another contract, it hands over control to that other contract. The called contract can then, in turn, re-enter the contract by which it was called and try to manipulate its state or hijack the control flow through malicious code."^^rdfs:Literal ;
                                         :Solution "Follow a recommended functional code order, in which calls to external contracts are always the last step, to reduce the attack surface of a contract being manipulated by its own externally called contracts."^^rdfs:Literal ;
                                         rdfs:label "Checks-Effects-Interaction (Wohrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#CommitAndRevealRajasekar2020Emerging
:CommitAndRevealRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                               :General ,
                                               :Proposal ,
                                               :SmartContractEnabledBlockchains ,
                                               :Unspecified ;
                                      :createdFrom :CommitAndRevealWöhrer2018Design ;
                                      :hasPaper :Rajasekar2020Emerging ;
                                      :hasVariant :CommitAndRevealV ;
                                      :ContextAndProblem "If a contract’s internal state is visible to the network, it is possible for a malicious user to take advantage, and invoke the contract with deliberately selected variables that change the state to one they desire."^^rdfs:Literal ;
                                      :Solution "This pattern works by hiding certain secret variables in a contract’s function, and only displaying the final values. Authorized users may have access to the secret."^^rdfs:Literal ;
                                      rdfs:label "Commit and Reveal (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#CommitAndRevealV
:CommitAndRevealV rdf:type owl:NamedIndividual ,
                           :CommitAndReveal ,
                           :Variant ;
                  :hasProposal :CommitAndRevealRajasekar2020Emerging ,
                               :CommitAndRevealWöhrer2018Design ;
                  rdfs:label "Commit and Reveal" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#CommitAndRevealWöhrer2018Design
:CommitAndRevealWöhrer2018Design rdf:type owl:NamedIndividual ,
                                          :Ethereum ,
                                          :General ,
                                          :Proposal ,
                                          :Solidity ;
                                 :hasPaper :Wöhrer2018Design ;
                                 :hasVariant :CommitAndRevealV ;
                                 :ApplicationExample "ENS Registrar"^^rdfs:Literal ;
                                 :ContextAndProblem "A characteristic of blockchains is, that it is not possible to restrict anyone from reading contents of a transaction or transaction’s state. This transparency leads to problems, especially when contract participants compete with each other. All data and every transaction is publicly visible on the blockchain, but an application scenario requires that contract interactions, specifically submitted parameter values, are treated confidentially."^^rdfs:Literal ;
                                 :Solution "Apply a commitment scheme to ensure that a value submission is binding and concealed until a consolidation phase runs out, after which the value is revealed, and it is publicly verifiable that the value remained unchanged."^^rdfs:Literal ;
                                 rdfs:label "Commit and reveal (Wöhrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ConfidentialAndPseudoAnonymousContractEnforcementSix2020A
:ConfidentialAndPseudoAnonymousContractEnforcementSix2020A rdf:type owl:NamedIndividual ,
                                                                    :BPM ,
                                                                    :Proposal ,
                                                                    :SmartContractEnabledBlockchains ,
                                                                    :Unspecified ;
                                                           :hasPaper :Six2020A ;
                                                           :hasVariant :ConfidentialAndPseudoAnonymousContractEnforcementV ;
                                                           :variantOf :LegalAndSmartContractPairXu2018A ;
                                                           :ContextAndProblem "During past years, the different industries have been impacted by new and disruptive technologies. One of such technologies is smart contracts. One objective of the smart contracts is to translate legal contracts as code or help the legal contract by augmenting some of its clauses into machine-readable functions. The emergence of blockchain technologies has led to the creation of blockchain-based smart contracts, that has benefited from blockchain characteristics. When stored on-chain, data becomes tamper-resistant. Additionally, the utilization of smart contracts isn’t always possible for stakeholders due to concerns about the irreversibility of smart contracts in certain blockchain technologies. For example, creating GDPR compliant blockchains for storing personal data systems is still an open topic. Although not all smart contracts might deal with personal data, there are concerns over the leakage of organizations’ confidential data or their identities, even if data are encrypted."^^rdfs:Literal ;
                                                           :Solution "This pattern allows the execution of automatable legal contract clauses, where its execution states are stored in an on-chain smart-contract and the logic needed to enforce it wraps it off-chain. An engine completes this pattern by running a business process that corresponds to the legal contract."^^rdfs:Literal ;
                                                           rdfs:label "Confidential and pseudo-anonymous contract enforcement (Six, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ConfidentialAndPseudoAnonymousContractEnforcementV
:ConfidentialAndPseudoAnonymousContractEnforcementV rdf:type owl:NamedIndividual ,
                                                             :LegalAndSmartContractPair ,
                                                             :Variant ;
                                                    :hasProposal :ConfidentialAndPseudoAnonymousContractEnforcementSix2020A ;
                                                    rdfs:label "Confidential and pseudo-anonymous contract enforcement" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContentAddressableStorageEberhardt2017On
:ContentAddressableStorageEberhardt2017On rdf:type owl:NamedIndividual ,
                                                   :General ,
                                                   :Proposal ,
                                                   :SmartContractEnabledBlockchains ,
                                                   :Unspecified ;
                                          :hasPaper :Eberhardt2017On ;
                                          :hasVariant :OffChainDataStorageV ;
                                          :ContextAndProblem "A large amount of data is associated with a smart contract. On-chain storage is too expensive."^^rdfs:Literal ;
                                          :Solution "Store the data off-chain in a content-addressable storage system and store the reference in the smart contract. Clients using the smart contract can retrieve the reference and based on that retrieve the data. Then, they can verify the data’s correctness by recomputing its address from itself and comparing it to the reference stored in the smart contract."^^rdfs:Literal ;
                                          rdfs:label "Content-Addressable Storage (Eberhardt, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractBalanceLimitRajasekar2020Emerging
:ContractBalanceLimitRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                                    :General ,
                                                    :Proposal ,
                                                    :SmartContractEnabledBlockchains ,
                                                    :Unspecified ;
                                           :createdFrom :BalanceLimitWohrer2018Smart ;
                                           :hasPaper :Rajasekar2020Emerging ;
                                           :hasVariant :ContractBalanceLimitV ;
                                           :ContextAndProblem "Having a contract with too much capital reduces the target area for a potential attack to take place."^^rdfs:Literal ;
                                           :Solution "This pattern states that a contract should not hold any more funds than a predefined balance-limit. It must reject any further transactions made to it except for forced payments."^^rdfs:Literal ;
                                           rdfs:label "Contract Balance Limit (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractBalanceLimitV
:ContractBalanceLimitV rdf:type owl:NamedIndividual ,
                                :ContractBalanceLimit ,
                                :Variant ;
                       :hasProposal :BalanceLimitWohrer2018Smart ,
                                    :ContractBalanceLimitRajasekar2020Emerging ;
                       rdfs:label "Contract Balance Limit" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractComposerLiu2018Applying
:ContractComposerLiu2018Applying rdf:type owl:NamedIndividual ,
                                          :General ,
                                          :Proposal ,
                                          :SmartContractEnabledBlockchains ,
                                          :Unspecified ;
                                 :hasPaper :Liu2018Applying ;
                                 :hasVariant :ContractComposerV ;
                                 :relatedTo :ContractFactoryLiu2018Applying ;
                                 :ContextAndProblem "In a blockchain-based application, the combination of services or objects is inevitable. Consequently, how to effectively control such a combination becomes a challenge to developers, especially under the condition that each service or object is represented in the form of smart contract."^^rdfs:Literal ;
                                 :Solution "Compared with Contract Factory, Contract Composer focuses on the complex structure of a contract instance, as it can construct a complicated target through multiple small pieces."^^rdfs:Literal ;
                                 rdfs:label "Contract Composer (Liu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractComposerV
:ContractComposerV rdf:type owl:NamedIndividual ,
                            :ContractComposer ,
                            :Variant ;
                   :hasProposal :ContractComposerLiu2018Applying ;
                   rdfs:label "Contract Composer" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractDecoratorLiu2018Applying
:ContractDecoratorLiu2018Applying rdf:type owl:NamedIndividual ,
                                           :General ,
                                           :Proposal ,
                                           :SmartContractEnabledBlockchains ,
                                           :Unspecified ;
                                  :benefitsFrom :ContractComposerLiu2018Applying ,
                                                :ContractDecoratorLiu2018Applying ;
                                  :hasPaper :Liu2018Applying ;
                                  :hasVariant :ContractDecoratorV ;
                                  :ContextAndProblem "Once a smart contract is deployed on blockchain, it is not allowed to modify or update the source code of that contract."^^rdfs:Literal ;
                                  :Solution "Contract Decorator pattern can avoid rewriting the whole contract when there are new requirements, developers just need to encapsulate the old contracts and append the required features into a new version of the contract through this pattern, to achieve updatability and modifiability."^^rdfs:Literal ;
                                  rdfs:label "Contract Decorator (Liu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractDecoratorV
:ContractDecoratorV rdf:type owl:NamedIndividual ,
                             :ContractDecorator ,
                             :Variant ;
                    :benefitsFrom :ContractComposerV ,
                                  :ContractDecoratorV ;
                    :hasProposal :ContractDecoratorLiu2018Applying ;
                    rdfs:label "Contract Decorator" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractFacadeLiu2018Applying
:ContractFacadeLiu2018Applying rdf:type owl:NamedIndividual ,
                                        :General ,
                                        :Proposal ,
                                        :SmartContractEnabledBlockchains ,
                                        :Unspecified ;
                               :benefitsFrom :ContractComposerLiu2018Applying ,
                                             :ContractDecoratorLiu2018Applying ,
                                             :ContractMediatorLiu2018Applying ,
                                             :ContractObserverLiu2018Applying ;
                               :hasPaper :Liu2018Applying ;
                               :hasVariant :ProxyContractV ;
                               :ContextAndProblem "Managing smart contracts may be a burdensome work as there are massive contracts having similar features in a blockchain-based system."^^rdfs:Literal ;
                               :Solution "Contract Facade pattern can relieve such pressure via providing a simple interface by coping with contract addresses. Such an interface is also in the form of smart contract, for developers to call the functions of similar contracts."^^rdfs:Literal ;
                               rdfs:label "Contract Facade (Liu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractFactoryLiu2018Applying
:ContractFactoryLiu2018Applying rdf:type owl:NamedIndividual ,
                                         :General ,
                                         :Proposal ,
                                         :SmartContractEnabledBlockchains ,
                                         :Unspecified ;
                                :hasPaper :Liu2018Applying ;
                                :hasVariant :FactoryContractV ;
                                :relatedTo :ContractComposerLiu2018Applying ;
                                :ContextAndProblem "As the compiled code of a smart contract deployed on blockchain is not readable, it is tedious to deploy and manage smart contracts that have same properties but aim to diverse clients."^^rdfs:Literal ;
                                :Solution "With the help of this pattern, developers do not need to deploy the smart contracts one after another, but deploy a contract factory once, through which the required multiple instances can be instantiated."^^rdfs:Literal ;
                                rdfs:label "Contract Factory (Liu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractMediatorLiu2018Applying
:ContractMediatorLiu2018Applying rdf:type owl:NamedIndividual ,
                                          :General ,
                                          :Proposal ,
                                          :SmartContractEnabledBlockchains ,
                                          :Unspecified ;
                                 :hasPaper :Liu2018Applying ;
                                 :hasVariant :ContractMediatorV ;
                                 :ContextAndProblem "In a business process, smart contracts need to interact with each other to finish a certain activity, which may result in tight coupling of the contracts."^^rdfs:Literal ;
                                 :Solution "Contract Mediator pattern aims to reduce the communication complexity of smart contracts, an instance of this pattern is in the form of smart contract, which collects and encapsulates the interactions and invocations from one contract to the others, to decoupling the smart contracts."^^rdfs:Literal ;
                                 rdfs:label "Contract Mediator (Liu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractMediatorV
:ContractMediatorV rdf:type owl:NamedIndividual ,
                            :ContractMediator ,
                            :Variant ;
                   :hasProposal :ContractMediatorLiu2018Applying ;
                   rdfs:label "Contract Mediator" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractObserverLiu2018Applying
:ContractObserverLiu2018Applying rdf:type owl:NamedIndividual ,
                                          :General ,
                                          :Proposal ,
                                          :SmartContractEnabledBlockchains ,
                                          :Unspecified ;
                                 :benefitsFrom :ContractDecoratorLiu2018Applying ;
                                 :hasPaper :Liu2018Applying ;
                                 :hasVariant :ContractObserverV ;
                                 :ContextAndProblem "When a smart contract is modified due to the changing requirements in industry, all the related contracts need to be informed and updated automatically."^^rdfs:Literal ;
                                 :Solution "Contract Observer pattern can deal with such problem to achieve interoperability and updatability among the contracts via an observer instance. An instance of Contract Observer needs to define the objects and information involved, once there are any changes, it should notify all the objects to update information."^^rdfs:Literal ;
                                 rdfs:label "Contract Observer (Liu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractObserverV
:ContractObserverV rdf:type owl:NamedIndividual ,
                            :ContractObserver ,
                            :Variant ;
                   :benefitsFrom :ContractDecoratorV ;
                   :hasProposal :ContractObserverLiu2018Applying ;
                   rdfs:label "Contract Observer" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractRegisterWöhrer2018Design
:ContractRegisterWöhrer2018Design rdf:type owl:NamedIndividual ,
                                           :Ethereum ,
                                           :General ,
                                           :Proposal ,
                                           :Solidity ;
                                  :hasPaper :Wöhrer2018Design ;
                                  :hasVariant :ContractRegistryV ;
                                  :ApplicationExample "Tether Token"^^rdfs:Literal ;
                                  :ContextAndProblem "Contract participants must be referred to the latest contract version."^^rdfs:Literal ;
                                  :Solution "The register pattern is an approach to handle the update process of a contract. The pattern keeps track of different versions (addresses) of a contract and points on request to the latest one. In conclusion, before interacting with a contract, a user would always have to query the register for the contract’s latest address. When following this update approach, it is also important to determine how to handle existing contract data, when an old contract version is replaced. An alternative solution to point to the latest contract address would be to utilize the Ethereum Name Service (ENS). It is a register that enables a secure and decentralised way to resolve human-readable names, like ’mycontract.eth’, into machine-readable identifiers, including Ethereum addresses."^^rdfs:Literal ;
                                  rdfs:label "Contract register (Wöhrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractRegistryV
:ContractRegistryV rdf:type owl:NamedIndividual ,
                            :ContractRegistry ,
                            :Variant ;
                   :benefitsFrom :DataContractV ,
                                 :EmbeddedPermissionV ;
                   :hasProposal :ContractRegisterWöhrer2018Design ,
                                :ContractRegistryXu2018A ;
                   rdfs:label "Contract Registry" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractRegistryXu2018A
:ContractRegistryXu2018A rdf:type owl:NamedIndividual ,
                                  :General ,
                                  :Proposal ,
                                  :SmartContractEnabledBlockchains ,
                                  :Unspecified ;
                         :benefitsFrom :DataContractXu2018A ,
                                       :EmbeddedPermissionXu2018A ;
                         :hasPaper :Xu2018A ;
                         :hasVariant :ContractRegistryV ;
                         :ApplicationExample "Ethereum Name Service (ENS) (https://ens.domains/fr/)"^^rdfs:Literal ,
                                             "Regis (https://regis.nu)"^^rdfs:Literal ;
                         :ContextAndProblem "As any software application, blockchain-based applications need to be upgraded to new versions. To do so, the on-chain functions defined in smart contracts need to be updated to fix bugs as well as to fulfil new requirements. Smart contracts deployed on blockchain cannot be upgraded because the code of the smart contracts as a type of data, stored on blockchain is immutable."^^rdfs:Literal ;
                         :Solution "An on-chain registry contract is used to maintain a mapping between user-defined symbolic names and the blockchain addresses of the registered contracts. The address of the registry contract needs to be advertised off-chain. The creator of a contract can register the name and the address ofthe new contract to the registry contract after the new contract being deployed. The invoker of a registered contract retrieves the latest version of the new smart contract from the registry contract. The corresponding functions provided by the registered contract can be upgraded by replacing the address of the old version contract in the registry contract with the address of a new version without breaking the dependency between the upgraded smart contract and other smart contracts that depend on its functions. The address of a contract is stored as a variable in the registry contract. The value of contract variables can be updated. The registry contract can have a permission control module to maintain the writing permission. Note that all the previous values of the variable are still stored on the blockchain."^^rdfs:Literal ;
                         rdfs:label "Contract registry (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ContractRelayWöhrer2018Design
:ContractRelayWöhrer2018Design rdf:type owl:NamedIndividual ,
                                        :Ethereum ,
                                        :General ,
                                        :Proposal ,
                                        :Solidity ;
                               :hasPaper :Wöhrer2018Design ;
                               :hasVariant :ProxyContractV ;
                               :ApplicationExample "Numeraire"^^rdfs:Literal ;
                               :ContextAndProblem "Contract participants must be referred to the latest contract version."^^rdfs:Literal ;
                               :Solution "A relay is another approach to handle the update process of a contract. The relay pattern provides a method to update a contract to a newer version while keeping the old contract address. This is achieved by using a kind of proxy contract that forwards calls and data to the latest version of the contract."^^rdfs:Literal ;
                               rdfs:label "Contract Relay (Wöhrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DataContractMarchesi2020Design
:DataContractMarchesi2020Design rdf:type owl:NamedIndividual ,
                                         :Ethereum ,
                                         :General ,
                                         :Proposal ,
                                         :Solidity ;
                                :hasPaper :Marchesi2020Design ;
                                :hasVariant :DataContractV ;
                                :ContextAndProblem "When a SC holding a significant amount of data must be updated, also all its data must be copied to the newly deployed SC, consuming a lot of gas."^^rdfs:Literal ;
                                :Solution "Keep the data in a separate SC, accessed by one or more SC, using the data and holding the processing logic. If this logic must be updated, the data remain in the Data Contract. This pattern usually is included also in the implementations of the Proxy pattern."^^rdfs:Literal ;
                                rdfs:label "Data contract (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DataContractRajasekar2020Emerging
:DataContractRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                            :General ,
                                            :Proposal ,
                                            :SmartContractEnabledBlockchains ,
                                            :Unspecified ;
                                   :createdFrom :DataContractXu2018A ,
                                                :DataSegregationWöhrer2018Design ;
                                   :hasPaper :Rajasekar2020Emerging ;
                                   :hasVariant :DataContractV ;
                                   :ContextAndProblem "If a contract stores its data within itself, modifying the contract using the registry or proxy pattern will mean rewriting all of the data to the updated version as well. Since the outdated contracts still remain on the blockchain, and are only indirectly replaced by the updated versions, the data will be stored redundantly with every new version of the contract (Volland, 2018). Conversely, storing the data on a data contract would reduce redundant data storage."^^rdfs:Literal ;
                                   :Solution "Store data and code on separate contracts to decouple them."^^rdfs:Literal ;
                                   rdfs:label "Data Contract (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DataContractV
:DataContractV rdf:type owl:NamedIndividual ,
                        :DataContract ,
                        :Variant ;
               :benefitsFrom :ContractRegistryV ;
               :hasProposal :DataContractMarchesi2020Design ,
                            :DataContractRajasekar2020Emerging ,
                            :DataContractXu2018A ,
                            :DataSegregationWöhrer2018Design ;
               rdfs:label "Data Contract" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DataContractXu2018A
:DataContractXu2018A rdf:type owl:NamedIndividual ,
                              :General ,
                              :Proposal ,
                              :SmartContractEnabledBlockchains ,
                              :Unspecified ;
                     :benefitsFrom :ContractRegistryXu2018A ;
                     :hasPaper :Xu2018A ;
                     :hasVariant :DataContractV ;
                     :ApplicationExample "Chronobank (https://chronobank.io)"^^rdfs:Literal ,
                                         "Colony (https://colony.io)"^^rdfs:Literal ;
                     :ContextAndProblem "The need to upgrade a blockchain-based application over time is ultimately necessary, so as the smart contracts used by the application. In general, logic and data change at different times and with different frequencies. There are different ways to store a data on blockchain, as discussed in Hash Integrity pattern (Section 5.3).Problem: Storing data on blockchain is expensive and there is a limitation on the amount ofdata and amount ofcomputation a transaction can contain. In the context of upgrading smart contracts, the upgrading transactions might contain a large data storage for copying the data from the old version of the smart contract to the new version of the smart contract. Porting data to a new version might even require multiple transactions, e.g. when the block gas limit on Ethereum prevents an overly complex data migration transaction."^^rdfs:Literal ;
                     :Solution "To avoid moving data during upgrades ofsmart contracts, the data store is isolated from the rest of the code. In the context of blockchain, data could be separately stored in different smart contracts to enable isolation. Depending on the circumstances of the application, how large of a data store it needs and whether the data structure is expected to change often, the data store could use a strict definition or a loosely typed flat store. The more generic and flexible data structure can be used by all the other logic smart contracts and is unlikely to require changes. One example of a generic data structure is a mapping to store SHA3 key and value pairs."^^rdfs:Literal ;
                     rdfs:label "Data contract (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DataSegregationWöhrer2018Design
:DataSegregationWöhrer2018Design rdf:type owl:NamedIndividual ,
                                          :Ethereum ,
                                          :General ,
                                          :Proposal ,
                                          :Solidity ;
                                 :hasPaper :Wöhrer2018Design ;
                                 :hasVariant :DataContractV ;
                                 :ApplicationExample "SAN Token"^^rdfs:Literal ;
                                 :ContextAndProblem "Contract data and its logic are usually kept in the same contract, leading to a closely entangled coupling. Once a contract is replaced by a newer version, the former contract data must be migrated to the new contract version."^^rdfs:Literal ;
                                 :Solution "The data segregation pattern separates contract logic from its underlying data. Segregation promotes the separation of concerns and mimics a layered design (e.g. logic layer, data layer). Following this principle avoids costly data migrations when code functionality changes. Meaning a new contract version would not have to recreate all of the existing data contained in the previous contract."^^rdfs:Literal ;
                                 rdfs:label "Data Segregation (Wöhrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DecentralizeBusinessProcessMüller2020Silver
:DecentralizeBusinessProcessMüller2020Silver rdf:type owl:NamedIndividual ,
                                                      :AllBlockchains ,
                                                      :BPM ,
                                                      :Proposal ,
                                                      :Unspecified ;
                                             :hasPaper :Müller2020Silver ;
                                             :hasVariant :DecentralizeBusinessProcessV ;
                                             :ApplicationExample "Marcel Müller, Sandro Rodriguez Garzon, Martin Westerkamp, and Zoltan Andras Lux. Hidals: A hybrid iot-based decentralized application for logistics and supply chain management. In 2019 IEEE 10th Annual Information Technology, Electron"^^rdfs:Literal ,
                                                                 "ics and Mobile Communication Conference (IEMCON), pages 0802–0808. IEEE, 2019."^^rdfs:Literal ;
                                             :ContextAndProblem "In collaborative business processes, activities executed by one organization are usually outside of the domain of influence of other organizations. If one organization is in charge of particularly many tasks in a process, this can lead to a significant dependency on the organization."^^rdfs:Literal ;
                                             :Solution "Blockchain can be used as a tool to connect subprocesses in a decentralized process and as a tool for incentivization of correct behavior. As a software connector, the blockchain technology can be used as an interface for message flows between different organizations."^^rdfs:Literal ;
                                             rdfs:label "Decentralize business process (Müller, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DecentralizeBusinessProcessV
:DecentralizeBusinessProcessV rdf:type owl:NamedIndividual ,
                                       :DecentralizeBusinessProcess ,
                                       :Variant ;
                              :hasProposal :DecentralizeBusinessProcessMüller2020Silver ;
                              rdfs:label "Decentralize business process" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DefaultValueMarchesi2020Design
:DefaultValueMarchesi2020Design rdf:type owl:NamedIndividual ,
                                         :Ethereum ,
                                         :General ,
                                         :Proposal ,
                                         :Solidity ;
                                :hasPaper :Marchesi2020Design ;
                                :hasVariant :DefaultValueV ;
                                :ContextAndProblem "It is good software engineering practice to initialize all variables when they are created. However, this costs gas in Ethereum."^^rdfs:Literal ;
                                :Solution "In Solidity, all variables are set to zeroes by default. So, do not explicitly initialize a variable with its default value if it is zero."^^rdfs:Literal ;
                                rdfs:label "Default value (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DefaultValueV
:DefaultValueV rdf:type owl:NamedIndividual ,
                        :DefaultValue ,
                        :Variant ;
               :hasProposal :DefaultValueMarchesi2020Design ;
               rdfs:label "Default value" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DelegateListLiu2020Design
:DelegateListLiu2020Design rdf:type owl:NamedIndividual ,
                                    :IdentityManagement ,
                                    :Proposal ,
                                    :SmartContractEnabledBlockchains ,
                                    :Unspecified ;
                           :benefitsFrom :IdentifierRegistryLiu2020Design ,
                                         :MutexWohrer2018Smart ;
                           :hasPaper :Liu2020Design ;
                           :hasVariant :DelegateListV ;
                           :relatedTo :IdentifierRegistryLiu2020Design ;
                           :variantOf :MultipleAuthorizationXu2018A ;
                           :ApplicationExample "Sovrin (https://sovrin.org)"^^rdfs:Literal ,
                                               "uPort (https://www.uport.me)"^^rdfs:Literal ;
                           :ContextAndProblem "Each identity has a key pair to authenticate the transactions initiated by the user by means of digital signatures. A master-key may be compromised/stolen by malicious hackers. A compromised master-key results in the loss of ownership over all sub-keys and corresponding identifiers. The hacker may utilise the identifiers to further steal the entity’s identity data."^^rdfs:Literal ;
                           :Solution "Delegate List relies on a web of trust architecture. This requires an identity owner to designate its own set of trustees that the owner trusts to assist in identity ownership update when the owner asks for it. An identifier maintains a list of recovery delegates and an update threshold that can help the user recover identity. These delegates can be individuals or organisations. If key loss happens, the original identity owner needs to request for ownership update using a new key pair, and a minimum number of the trustees (e.g. 2 out of 3) must sign a new identity record transaction respectively. When there are enough confirmations (i.e. reaching the threshold) of the new key pair, the ownership of the identifier is updated and thus the identity is recovered. A timelock period can be specified to prevent an attacker who tries to compromise an identity owner’s key and immediately change the owner’s identity records, including his/her designated trustees to prevent identifier ownership recovery."^^rdfs:Literal ;
                           rdfs:label "Delegate List (Liu, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DelegateListV
:DelegateListV rdf:type owl:NamedIndividual ,
                        :MultipleAuthorization ,
                        :Variant ;
               :benefitsFrom :IdentifierRegistryV ,
                             :MutexV ;
               :hasProposal :DelegateListLiu2020Design ;
               rdfs:label "Delegate List" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DelegatedComputationEberhardt2017On
:DelegatedComputationEberhardt2017On rdf:type owl:NamedIndividual ,
                                              :General ,
                                              :Proposal ,
                                              :SmartContractEnabledBlockchains ,
                                              :Unspecified ;
                                     :hasPaper :Eberhardt2017On ;
                                     :hasVariant :DelegatedComputationV ;
                                     :ContextAndProblem "a) A node participating in a blockchain network wants to prove a property of its private data without publishing it.b) A node wants to perform a computation that is too complex to be executed on-chain."^^rdfs:Literal ;
                                     :Solution "Outsource computation to an untrusted third party and, besides the result, generate a proof of correct execution. Instead of executing the computation itself, verify the proof of correct execution on-chain."^^rdfs:Literal ;
                                     rdfs:label "Delegated Computation (Eberhardt, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DelegatedComputationV
:DelegatedComputationV rdf:type owl:NamedIndividual ,
                                :DelegatedComputation ,
                                :Variant ;
                       :hasProposal :DelegatedComputationEberhardt2017On ;
                       rdfs:label "Delegated Computation" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DelegatedTransactionsV
:DelegatedTransactionsV rdf:type owl:NamedIndividual ,
                                 :DelegatedTransactions ,
                                 :Variant ;
                        :hasProposal :DelegatedTransactionsWessling2018Engineering ;
                        rdfs:label "Delegated Transactions" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DelegatedTransactionsWessling2018Engineering
:DelegatedTransactionsWessling2018Engineering rdf:type owl:NamedIndividual ,
                                                       :AllBlockchains ,
                                                       :General ,
                                                       :Proposal ,
                                                       :Unspecified ;
                                              :hasPaper :Wessling2018Engineering ;
                                              :hasVariant :DelegatedTransactionsV ;
                                              :ContextAndProblem ""^^rdfs:Literal ;
                                              :Solution "DApp provider offers a website the users can interact with, not requiring a cryptobrowser or MetaMask plugin. The website communicates with the DApp backend logic via REST calls and encapsulates all blockchain-specific actions. This means the backend is responsible for interacting with the blockchain and is sending transactions on behalf of the user, who is not able to validate them."^^rdfs:Literal ;
                                              rdfs:label "Delegated Transactions (Wessling, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DigitalRecordLemieux2017A
:DigitalRecordLemieux2017A rdf:type owl:NamedIndividual ,
                                    :General ,
                                    :Proposal ,
                                    :SmartContractEnabledBlockchains ,
                                    :Unspecified ;
                           :hasPaper :Lemieux2017A ;
                           :hasVariant :DigitalRecordV ;
                           :ContextAndProblem "Many current and proposed applications of blockchain technology aim to address recordkeeping challenges, such as more efficient and secure processing of land title transfers, greater patient control over their sensitive health information, and more efficient recording of financial payments and settlements. All of the blockchain systems offer a new form of records generation use, storage and/or control."^^rdfs:Literal ;
                           :Solution "Records are no longer just mirrored on chain, they are actively created on chain in the form of “smart contracts”. This marks a more fundamental departure from the traditional form of digital records creation and storage in centralized databases or cloud-based platforms. Typically, these smart contracts encode procedures that execute among a multi-stakeholder network as part of a work process flow. In these “digital records” systems, execution of the smart code results in an update to the distributed database of records, or ledger, implementing state change once the smart contract has completed."^^rdfs:Literal ;
                           rdfs:label "Digital Record (Lemieux, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DigitalRecordV
:DigitalRecordV rdf:type owl:NamedIndividual ,
                         :DigitalRecord ,
                         :Variant ;
                :hasProposal :DigitalRecordLemieux2017A ;
                rdfs:label "Digital Record" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DualResolutionLiu2020Design
:DualResolutionLiu2020Design rdf:type owl:NamedIndividual ,
                                      :IdentityManagement ,
                                      :Proposal ,
                                      :SmartContractEnabledBlockchains ,
                                      :Unspecified ;
                             :hasPaper :Liu2020Design ;
                             :hasVariant :DualResolutionV ;
                             :requires :IdentifierRegistryLiu2020Design ;
                             :ContextAndProblem "In self-sovereign identity, entities interact with each other. When two or more entities want to establish interactions (e.g., for business purposes), each entity first needs to determine the target entity’s basic information and ways of communicating before going further."^^rdfs:Literal ;
                             :Solution "A DDO contains verification methods (i.e. public keys) and service endpoints (e.g., messaging service details) which can be utilised by an entity to establish interactions with the corresponding DID owner. Before any formal activity between two entities in a relationship, they should first mutually resolve each other’s DID and obtain the interaction information stored in DDO. Such a process is considered as “Dual Resolution” and it forms the first step for any entity to establish an interoperation with its target entity."^^rdfs:Literal ;
                             rdfs:label "Dual Resolution (Liu, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DualResolutionV
:DualResolutionV rdf:type owl:NamedIndividual ,
                          :DualResolution ,
                          :Variant ;
                 :hasProposal :DualResolutionLiu2020Design ;
                 rdfs:label "Dual Resolution" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DynamicBindingRajasekar2020Emerging
:DynamicBindingRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                              :General ,
                                              :Proposal ,
                                              :SmartContractEnabledBlockchains ,
                                              :Unspecified ;
                                     :createdFrom :Unknown ;
                                     :hasPaper :Rajasekar2020Emerging ;
                                     :hasVariant :DynamicBindingV ;
                                     :ContextAndProblem ""^^rdfs:Literal ;
                                     :Solution "Create a dynamic association between a contract and its authorized users’ addresses, in such a way that the addresses are not defined in the contract. Instead, the users send a secret key to another, designated contract, which forwards the request to the the main one if the key is valid."^^rdfs:Literal ;
                                     rdfs:label "Dynamic Binding (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#DynamicBindingV
:DynamicBindingV rdf:type owl:NamedIndividual ,
                          :DynamicBinding ,
                          :Variant ;
                 :hasProposal :DynamicBindingRajasekar2020Emerging ;
                 rdfs:label "Dynamic Binding" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Eberhardt2017On
:Eberhardt2017On rdf:type owl:NamedIndividual ,
                          :Paper ;
                 :hasIdentifier :Identifier36 ;
                 :proposes :ChallengeResponseEberhardt2017On ,
                           :ContentAddressableStorageEberhardt2017On ,
                           :DelegatedComputationEberhardt2017On ,
                           :LowContractFootprintEberhardt2017On ,
                           :OffChainSignaturesEberhardt2017On ;
                 :Authors "Eberhardt, Jacob and Tai, Stefan"^^rdfs:Literal ;
                 :Identifier "10.1007/978-3-319-67262-5_1"^^rdfs:Literal ;
                 :IdentifierType "DOI"^^rdfs:Literal ;
                 :Journal "Service-Oriented and Cloud Computing"^^rdfs:Literal ;
                 :Title "On or off the blockchain? Insights on off-chaining computation and data"^^rdfs:Literal ;
                 :Year "2017"^^rdfs:Literal ;
                 rdfs:label "On or off the blockchain? Insights on off-chaining computation and data" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EmbeddedPermissionRajasekar2020Emerging
:EmbeddedPermissionRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                                  :General ,
                                                  :Proposal ,
                                                  :SmartContractEnabledBlockchains ,
                                                  :Unspecified ;
                                         :createdFrom :EmbeddedPermissionXu2018A ,
                                                      :Unknown ;
                                         :hasPaper :Rajasekar2020Emerging ;
                                         :hasVariant :EmbeddedPermissionV ;
                                         :ContextAndProblem "A good example of a critical or sensitive function is self destruct() in Solidity2. The absence of embedded permission to execute this particular function was leveraged in the Parity Wallet hack."^^rdfs:Literal ;
                                         :Solution "Contracts must have an embedded permission field for certain critical functions, which allows only authorized users to run them. This is comparable to an end-user not having access to all the back-end code."^^rdfs:Literal ;
                                         rdfs:label "Embedded Permission (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EmbeddedPermissionV
:EmbeddedPermissionV rdf:type owl:NamedIndividual ,
                              :EmbeddedPermission ,
                              :Variant ;
                     :benefitsFrom :EmbeddedPermissionV ,
                                   :MultipleAuthorizationV ,
                                   :OffChainSecretEnabledDynamicAuthenticationV ;
                     :hasProposal :AuthorizationBartoletti2017An ,
                                  :AuthorizationWorley2019Opportunities ,
                                  :EmbeddedPermissionRajasekar2020Emerging ,
                                  :EmbeddedPermissionXu2018A ;
                     rdfs:label "Embedded Permission" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EmbeddedPermissionXu2018A
:EmbeddedPermissionXu2018A rdf:type owl:NamedIndividual ,
                                    :General ,
                                    :Proposal ,
                                    :SmartContractEnabledBlockchains ,
                                    :Unspecified ;
                           :benefitsFrom :AuthorizationWorley2019Opportunities ,
                                         :MultipleAuthorizationXu2018A ,
                                         :OffChainSecretEnabledDynamicAuthenticationXu2018A ;
                           :hasPaper :Xu2018A ;
                           :hasVariant :EmbeddedPermissionV ;
                           :ApplicationExample "Solidity Restrict access pattern (https://docs.soliditylang.org/en/develop/contracts.html)"^^rdfs:Literal ,
                                               "Solidity tutorial Mortal contract (https://docs.soliditylang.org/en/develop/contracts.html)"^^rdfs:Literal ;
                           :ContextAndProblem "All the smart contracts running on blockchain can be accessed and called by all the blockchain participants and other smart contracts by default, because there are no privileged users and, in the case of public blockchain, every participant can join the network to access all the information and code stored and running on blockchain. A smart contract by default has no owner, meaning that once deployed the author of the smart contract has no special privilege on the smart contract. A permission-less function can be triggered by unauthorized users accidentally. Such a permissionless function becomes vulnerability ofblockchain-based application."^^rdfs:Literal ;
                           :Solution "Adding permission control to every smart contract function to check permissions for every caller that triggers the functions defined in the smart contract based on the blockchain addresses of the caller. This can be done by checking the authorization of the caller before executing the logic of the function: unauthorized calls are rejected and the execution of the function terminated before reaching the core logic of the function."^^rdfs:Literal ;
                           rdfs:label "Embedded permission (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EmergencyStopRajasekar2020Emerging
:EmergencyStopRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                             :General ,
                                             :Proposal ,
                                             :SmartContractEnabledBlockchains ,
                                             :Unspecified ;
                                    :createdFrom :EmergencyStopWohrer2018Smart ;
                                    :hasPaper :Rajasekar2020Emerging ;
                                    :hasVariant :EmergencyStopV ;
                                    :ContextAndProblem "If a contract is executing malicious functions recursively or for several iterations, without the ability to interrupt, the malicious function can run indefinitely and the nodes can do nothing till execution completes."^^rdfs:Literal ;
                                    :Solution "Include the ability for an authorized party to stop the execution of a contract."^^rdfs:Literal ;
                                    rdfs:label "Emergency Stop (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EmergencyStopV
:EmergencyStopV rdf:type owl:NamedIndividual ,
                         :EmergencyStop ,
                         :Variant ;
                :hasProposal :EmergencyStopRajasekar2020Emerging ,
                             :EmergencyStopWohrer2018Smart ;
                rdfs:label "Emergency Stop" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EmergencyStopWohrer2018Smart
:EmergencyStopWohrer2018Smart rdf:type owl:NamedIndividual ,
                                       :Ethereum ,
                                       :General ,
                                       :Proposal ,
                                       :Solidity ;
                              :hasPaper :Wohrer2018Smart ;
                              :hasVariant :EmergencyStopV ;
                              :ContextAndProblem "Since a deployed contract is executed autonomously on the Ethereum network, there is no option to halt its execution in case of a major bug or security issue."^^rdfs:Literal ;
                              :Solution "Incorporate an emergency stop functionality into the contract that can be triggered by an authenticated party to disable sensitive functions."^^rdfs:Literal ;
                              rdfs:label "Emergency Stop (Wohrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EncryptingOnChainDataV
:EncryptingOnChainDataV rdf:type owl:NamedIndividual ,
                                 :EncryptingOnChainData ,
                                 :Variant ;
                        :hasProposal :EncryptingOnChainDataXu2018A ;
                        rdfs:label "Encrypting on-chain data" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EncryptingOnChainDataXu2018A
:EncryptingOnChainDataXu2018A rdf:type owl:NamedIndividual ,
                                       :General ,
                                       :Proposal ,
                                       :SmartContractEnabledBlockchains ,
                                       :Unspecified ;
                              :hasPaper :Xu2018A ;
                              :hasVariant :EncryptingOnChainDataV ;
                              :relatedTo :OffChainDataStorageXu2018A ;
                              :ApplicationExample "Ahmed Kosba, Andrew Miller, Elaine Shi, Zikai Wen, and Charalampos Papa"^^rdfs:Literal ,
                                                  "Crypto digital Signature from MLGBlockchain (https://mlgblockchain.com/crypto-signature.html)"^^rdfs:Literal ,
                                                  "Encrypted queries from Oraclize (https://blog.oraclize.it/encrypted-queries-private-data-on-a-public-blockchain-71d893fac2bf)"^^rdfs:Literal ,
                                                  "Preserving Smart Contracts. In 37th IEEE Symposium on Security and Privacy (S&P2016). IEEE, Fairmont, SAN JOSE, CA, 839–858. https://doi.org/10.1109/SP. 2016.55"^^rdfs:Literal ,
                                                  "manthou. 2016. Hawk: The Blockchain Model of Cryptography and Privacy"^^rdfs:Literal ;
                              :ContextAndProblem "For some applications on blockchain, there might be commercially critical data that should be only accessible to the involved participants. An example would be a special discount price offered by a service provider to a subset of its users. Such information should not be accessible to the other users who do not get the discount. The lack of data privacy is one of the main limitations of blockchain. All the information on blockchain is publicly available to the participants of the blockchain. There is no privileged user within the blockchain network, no matter the blockchain is public, consortium or private. On a public blockchain, new participants can join the blockchain network freely and access all the information recorded on blockchain. Any confidential data on public blockchain is exposed to the public."^^rdfs:Literal ;
                              :Solution "To preserve the privacy ofthe involved participants, symmetric or asymmetric encryption can be used to encrypt data before inserting the data into blockchain. One possible design for sharing encrypted data among multiple participants is as follows. First, one of the involved participants creates a secret key for encrypting data and distributes it during an initial key exchange. When one of the participants needs to add a new data item to the blockchain, they first symmetrically encrypt it using the secret key. Only the participants allowed to access the transaction have the secret key and can decrypt the information."^^rdfs:Literal ;
                              rdfs:label "Encrypting on-chain data (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EstablishGenesisBandara2020Patterns
:EstablishGenesisBandara2020Patterns rdf:type owl:NamedIndividual ,
                                              :AllBlockchains ,
                                              :General ,
                                              :Proposal ,
                                              :Unspecified ;
                                     :benefitsFrom :SnapshottingBandara2020Patterns ,
                                                   :StateAggregationBandara2020Patterns ;
                                     :hasPaper :Bandara2020Patterns ;
                                     :hasVariant :EstablishGenesisV ;
                                     :ApplicationExample "Aeternity-team, “Frequently asked questions (FAQ): Token migration phases 1, 2, 3,” Sep. 2019. https://forum.aeternity.com/t/frequently-asked-questions-faq-token-migration-phases-1-2-3/1411."^^rdfs:Literal ,
                                                         "B. Network, “Bithereum’s hard spoon snapshot is complete!,” Dec. 2018. https: //medium.com/bithereum-network/bithereums-hard-spoon-snapshot-is-complete-c1814024ea9a."^^rdfs:Literal ,
                                                         "T. Foundation, “Telos token distribution Use of the EOS genesis snapshot & why,” Aug. 2018. https://medium.com/telos-foundation/telos-token-distribution-use-of-the-eos-genesis-snapshot-why-2d849a2b0055."^^rdfs:Literal ,
                                                         "Zeepin, “Announcement: Launch of ZEEPIN mainnet and mapping of ZPT and Gala,” Aug. 2018. https://medium.com/zeeblog/announcement-launch-of-zeepin-mainnet-and-mapping-of-zpt-and-gala-e34735c65418."^^rdfs:Literal ;
                                     :ContextAndProblem "Concert application has a large number of states, and all of them need to be recreated on the target blockchain. The nonprofit has decided to spin up a new blockchain instance as the target and use ConcertCoin as the native asset. The list of accounts and states to be migrated is given in the snapshot. After the snapshot, states are marked as unusable using token burning. Relevant smart contracts are also redeployed. How to load states to the target blockchain?"^^rdfs:Literal ;
                                     :Solution "Use the snapshot of states from the source blockchain to set states on the target blockchain’s genesis block during its initialization. If a user cannot use an existing private key to prove its ownership of a state migrated to the target blockchain, a new key pair needs to be created. Thus, the first step is to get each user to create a new key pair and a corresponding account ID (accID) using the account creation algorithm of the target blockchain. Second, update the account ID in the snapshot file with accID. Next, create the genesis block configuration file (aka., genesis file) while including the accounts and states from the updated snapshot file. Then use the genesis file to initialize the target blockchain. Update the ID database on the BAL to reflect the new set of accIDs. Also, add a PoE entry that tracks the mapping between old and new account IDs to record how the new accounts came into existence."^^rdfs:Literal ;
                                     rdfs:label "Establish Genesis (Bandara, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EstablishGenesisV
:EstablishGenesisV rdf:type owl:NamedIndividual ,
                            :EstablishGenesis ,
                            :Variant ;
                   :benefitsFrom :SnapshottingV ,
                                 :StateAggregationV ;
                   :hasProposal :EstablishGenesisBandara2020Patterns ;
                   rdfs:label "Establish Genesis" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EventLogMarchesi2020Design
:EventLogMarchesi2020Design rdf:type owl:NamedIndividual ,
                                     :Ethereum ,
                                     :General ,
                                     :Proposal ,
                                     :Solidity ;
                            :hasPaper :Marchesi2020Design ;
                            :hasVariant :EventLogV ;
                            :ContextAndProblem "Often events maintain important information about the system, which must be later used by the external system interacting with the blockchain. Storing this information in the blockchain can be very expensive, if the number of events is high."^^rdfs:Literal ;
                            :Solution "If past events data are needed by the external system, but not by SCs, let the external system directly access the Event Log in the blockchain. Note that this Log is not accessible by SCs, and that if the event happened far in time, the time to retrieve it may be long."^^rdfs:Literal ;
                            rdfs:label "Event log (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#EventLogV
:EventLogV rdf:type owl:NamedIndividual ,
                    :EventLog ,
                    :Variant ;
           :hasProposal :EventLogMarchesi2020Design ;
           rdfs:label "Event log" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ExchangeTransferBandara2020Patterns
:ExchangeTransferBandara2020Patterns rdf:type owl:NamedIndividual ,
                                              :AllBlockchains ,
                                              :General ,
                                              :Proposal ,
                                              :Unspecified ;
                                     :benefitsFrom :SnapshottingBandara2020Patterns ,
                                                   :StateAggregationBandara2020Patterns ;
                                     :hasPaper :Bandara2020Patterns ;
                                     :hasVariant :ExchangeTransferV ;
                                     :ApplicationExample "A. Milano, “$3 billion blockchain Tron kicks off token migration,” June 2018. https: //coindesk.com/3-billion-blockchain-tron-kicks-off-token-migration-today."^^rdfs:Literal ,
                                                         "B. C. Assistant, “Binance chain mainnet swap,” May 2019.community.binance.org/topic/44/binance-chain-mainnet-swap. https://"^^rdfs:Literal ,
                                                         "B. Sigman and A. Siniscalchi, “Teleport your ERC20 tokens to EOS.” https://github.com/ sheos-org/eos21."^^rdfs:Literal ,
                                                         "Gifto Official, “Mass adoption token meets mass adoption chain: Gifto migrates to Binance chain,” Apr. 2019. https://medium.com/@gifto/mass-adoption-token-meets-mass-adoption-chain-gifto-migrates-to-binance-chain-af8cf906e13a."^^rdfs:Literal ,
                                                         "K. Network, “Istanbul upgrade: Kyber smart contract migration,” Nov. 2019. https://blog.kyber.network/istanbul-upgrade-kyber-smart-contract-migration-c8a6bcd84a1b."^^rdfs:Literal ,
                                                         "S. Thomas and E. Schwartz, “A protocol for interledger payments,” 2015. https: //interledger.org/interledger.pdf."^^rdfs:Literal ,
                                                         "T. Publisher, “TomoChain’s mainnet launch, and token swapping schedule,” Nov. 2018. https://medium.com/tomochain/tomochains-mainnet-launch-and-token-swapping-schedule-6f556e2f772."^^rdfs:Literal ,
                                                         "VeChain, “VeChainThor wallet manual including token swap and X node migration,” July 2018. https://cdn.vechain.com/vechainthor wallet manual en v1.0.pdf."^^rdfs:Literal ;
                                     :ContextAndProblem "Concert application has a large number of states, and all of them need to be recreated on the target blockchain. The nonprofit has chosen an existing public blockchain as the target and ConcertCoins are to be converted to its native assets. The list of states to be migrated can be found from the ID database. How to load states to the target blockchain?"^^rdfs:Literal ;
                                     :Solution "Use a cryptocurrency/token exchange to transfer the states. If a user cannot use an existing private key to access the state migrated to the target blockchain, follow the first step to create a new account similar to the establish genesis pattern. Then get the user to sign a transaction with both the state and new account ID (i.e., accID) on the target blockchain as the payload. Set the address of the exchange (excAddress) as the recipient. Then submit the signed transaction to transfer the state to exchange’s account on the source blockchain. This is similar to a sell order in financial markets. Once the exchange confirms that the state is transferred to its account, it will look for a matching buy order. Once a match is made, the exchange will transfer the state to the accID using its account in the target blockchain. Similar to the establish genesis pattern, finally update the ID database to reflect new account IDs."^^rdfs:Literal ;
                                     rdfs:label "Exchange Transfer (Bandara, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ExchangeTransferV
:ExchangeTransferV rdf:type owl:NamedIndividual ,
                            :ExchangeTransfer ,
                            :Variant ;
                   :benefitsFrom :SnapshottingV ,
                                 :StateAggregationV ;
                   :hasProposal :ExchangeTransferBandara2020Patterns ;
                   rdfs:label "Exchange Transfer" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ExplicitelyMarkExternalFunctionMarchesi2020Design
:ExplicitelyMarkExternalFunctionMarchesi2020Design rdf:type owl:NamedIndividual ,
                                                            :Ethereum ,
                                                            :General ,
                                                            :Proposal ,
                                                            :Solidity ;
                                                   :hasPaper :Marchesi2020Design ;
                                                   :hasVariant :ExplicitelyMarkExternalFunctionV ;
                                                   :ContextAndProblem "The input parameters of public functions are copied to memory automatically, and this costs gas."^^rdfs:Literal ;
                                                   :Solution "The input parameters of external functions are read right from Calldata memory. Therefore, explicitly mark as external functions called only externally."^^rdfs:Literal ;
                                                   rdfs:label "Explicitely mark external function (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ExplicitelyMarkExternalFunctionV
:ExplicitelyMarkExternalFunctionV rdf:type owl:NamedIndividual ,
                                           :ExplicitelyMarkExternalFunction ,
                                           :Variant ;
                                  :hasProposal :ExplicitelyMarkExternalFunctionMarchesi2020Design ;
                                  rdfs:label "Explicitely mark external function" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FactoryContractRajasekar2020Emerging
:FactoryContractRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                               :General ,
                                               :Proposal ,
                                               :SmartContractEnabledBlockchains ,
                                               :Unspecified ;
                                      :createdFrom :AbstractFactoryZhang2018Chapter ,
                                                   :FactoryContractXu2018A ;
                                      :hasPaper :Rajasekar2020Emerging ;
                                      :hasVariant :FactoryContractV ;
                                      :ContextAndProblem "Using a factory contract helps make a DApp’s code modular and reduces the amount of updates required when new functionality is added to the DApp. It also ensures that certain design principles are consistent throughout the application."^^rdfs:Literal ;
                                      :Solution "This pattern is similar to the idea of a class in programming languages. It entails storing a template contract on the blockchain to instantiate other contracts having a similar structure and flow"^^rdfs:Literal ;
                                      rdfs:label "Factory Contract (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FactoryContractV
:FactoryContractV rdf:type owl:NamedIndividual ,
                           :FactoryContract ,
                           :Variant ;
                  :benefitsFrom :ContractRegistryV ;
                  :hasProposal :AbstractFactoryZhang2017Applying ,
                               :AbstractFactoryZhang2018Chapter ,
                               :ContractFactoryLiu2018Applying ,
                               :FactoryContractRajasekar2020Emerging ,
                               :FactoryContractXu2018A ;
                  rdfs:label "Factory Contract" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FactoryContractXu2018A
:FactoryContractXu2018A rdf:type owl:NamedIndividual ,
                                 :General ,
                                 :Proposal ,
                                 :SmartContractEnabledBlockchains ,
                                 :Unspecified ;
                        :benefitsFrom :ContractRegistryXu2018A ;
                        :hasPaper :Xu2018A ;
                        :hasVariant :FactoryContractV ;
                        :ApplicationExample "Ethereum developer tutorial (https://ethereumdev.io/interact-with-other-contracts-from-solidity/)"^^rdfs:Literal ,
                                            "Ingo Weber, Xiwei Xu, Regis Riveret, Guido Governatori, Alexander Ponomarev, and Jan Mendling. 2016. Untrusted Business Process Monitoring and Execution Using Blockchain. In BPM. Springer, Rio de Janeiro, Brazil, 329–347."^^rdfs:Literal ,
                                            "Peng Zhang, Jules White, Douglas C. Schmidt, and Gunther Lenz. 2017. Applying Software Patterns to Address Interoperability in Blockchain-based Healthcare Apps. (June 2017). arXiv:1706.03700"^^rdfs:Literal ;
                        :ContextAndProblem "Applications based on blockchain might need to use multiple instances of a standard contract with customization. Each contract instance is created by instantiating a contract template. For example, in a business process management system, each of the business process instances might be represented by a smart contract being generated from a contract template representing the business process model [18]. The template can be stored off-chain in a code repository, or on-chain, within its own smart contract. Keeping the contract template off-chain cannot guarantee consistency between different smart contract instances created from the same template because the source code of the template can be independently modified."^^rdfs:Literal ;
                        :Solution "Smart contracts are created from a contract factory deployed on blockchain. The factory contract is deployed once from the off-chain source code. The factory may contain the definition of multiple smart contracts. Smart contract instances are generated by passing parameters to the contract factory to instantiate customized smart contract instances. Factory contract is analogous to a Class in an object-oriented programming language. Every transaction that generates a smart contract instance essentially instantiates an object of the factory contract class. This contract instance (the object) will maintain its own properties independently of the other instances but with a structure consistent with its original template."^^rdfs:Literal ;
                        rdfs:label "Factory contract (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FewerFunctionsMarchesi2020Design
:FewerFunctionsMarchesi2020Design rdf:type owl:NamedIndividual ,
                                           :Ethereum ,
                                           :General ,
                                           :Proposal ,
                                           :Solidity ;
                                  :hasPaper :Marchesi2020Design ;
                                  :hasVariant :FewerFunctionsV ;
                                  :ContextAndProblem "Implementing a function in an Ethereum SC costs gas."^^rdfs:Literal ;
                                  :Solution "In general, keep in mind that implementing a SC with many small functions is expensive. However, having too big functions complicates the testing and potentially compromises the security. So, try to have fewer functions, but not too few, balancing the function number with their complexity."^^rdfs:Literal ;
                                  rdfs:label "Fewer functions (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FewerFunctionsV
:FewerFunctionsV rdf:type owl:NamedIndividual ,
                          :FewerFunctions ,
                          :Variant ;
                 :hasProposal :FewerFunctionsMarchesi2020Design ;
                 rdfs:label "Fewer functions" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FixedSizeMarchesi2020Design
:FixedSizeMarchesi2020Design rdf:type owl:NamedIndividual ,
                                      :Ethereum ,
                                      :General ,
                                      :Proposal ,
                                      :Solidity ;
                             :hasPaper :Marchesi2020Design ;
                             :hasVariant :FixedSizeV ;
                             :ContextAndProblem "In Solidity, any fixed size variable is cheaper than variable size."^^rdfs:Literal ;
                             :Solution "Whenever it is possible to set an upper bound on the size of an array, use a fixed size array instead of a dynamic one."^^rdfs:Literal ;
                             rdfs:label "Fixed size (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FixedSizeV
:FixedSizeV rdf:type owl:NamedIndividual ,
                     :FixedSize ,
                     :Variant ;
            :hasProposal :FixedSizeMarchesi2020Design ;
            rdfs:label "Fixed size" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FlyweightRajasekar2020Emerging
:FlyweightRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                         :General ,
                                         :Proposal ,
                                         :SmartContractEnabledBlockchains ,
                                         :Unspecified ;
                                :createdFrom :FlyweightZhang2018Chapter ;
                                :hasPaper :Rajasekar2020Emerging ;
                                :hasVariant :FlyweightV ;
                                :relatedTo :DataContractRajasekar2020Emerging ;
                                :ContextAndProblem ""^^rdfs:Literal ;
                                :Solution "Inspired in part by the data contract design pattern, the flyweight contract stores data that is shared by a group of clients in one common place."^^rdfs:Literal ;
                                rdfs:label "Flyweight (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FlyweightV
:FlyweightV rdf:type owl:NamedIndividual ,
                     :Flyweight ,
                     :Variant ;
            :hasProposal :FlyweightRajasekar2020Emerging ,
                         :FlyweightZhang2017Applying ,
                         :FlyweightZhang2018Chapter ;
            rdfs:label "Flyweight" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FlyweightZhang2017Applying
:FlyweightZhang2017Applying rdf:type owl:NamedIndividual ,
                                     :Healthcare ,
                                     :Proposal ,
                                     :SmartContractEnabledBlockchains ,
                                     :Unspecified ;
                            :hasPaper :Zhang2017Applying ;
                            :hasVariant :FlyweightV ;
                            :ApplicationExample "DASH (from the same paper)"^^rdfs:Literal ;
                            :ContextAndProblem "In order to achieve blockchain’s transparency and immutability properties, all of the data and transaction records are maintained in the blockchain by replicating and distributing to every node in the network. It is important to limit the amount of data stored in the blockchain to avoid high cost of data storage and unattended data when it is no longer needed. For example, if a blockchain is being used to store patient billing data, there will be millions of patients stored in the blockchain. Moreover, each patient will require storage of their insurance information, which will include details, such as their ID#, insurance contact information, coverage details, and other aspects that the provider needs to bill for services. Capturing this huge amount of information for every patient can generate a large amount of data in the blockchain."^^rdfs:Literal ;
                            :Solution "Using the Flyweight pattern in smart contracts, intrinsic data shared by patients is stored in the common contract,while extrinsic data is stored in a separate contract representing that specific patient. The contract with intrinsic data can also store references to specific patient contracts sharing the data. When retrieving complete billing information, a common method call can be invoked to return the combined intrinsic and extrinsic data."^^rdfs:Literal ;
                            rdfs:label "Flyweight (Zhang, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FlyweightZhang2018Chapter
:FlyweightZhang2018Chapter rdf:type owl:NamedIndividual ,
                                    :Healthcare ,
                                    :Proposal ,
                                    :SmartContractEnabledBlockchains ,
                                    :Unspecified ;
                           :hasPaper :Zhang2018Chapter ;
                           :hasVariant :FlyweightV ;
                           :requires :AbstractFactoryZhang2018Chapter ;
                           :ContextAndProblem "It may be inevitable that a Blockchainbased healthcare app requires some data to be maintained on-chain. However, a good design should minimize the storage requirements by maximizing data sharing on the Blockchain to avoid storage and cost overhead. The price for Blockchain to have transparency and immutability is that all data and transaction records maintained in the Blockchain are replicated and distributed to every node in the network. To avoid unnecessary data storage, such as  duplicated data or unattended data, it is therefore important to create a design that maximizes shared data on-chain. If a Blockchain is used as a database to store patient billing data, then in a large-scalehealthcare scenario, millions of records will be replicated on all Blockchain miners. Moreover, billing data could include detailed patient insurance information, such as their ID number, insurance contact information, coverage details, and other aspects that the provider needs to bill for services. Capturing all this information for every patient generates excessive amounts of data in the Blockchain."^^rdfs:Literal ;
                           :Solution "Combining the FLYWEIGHT pattern with a factory object can help minimize data storage in the Blockchain. In particular, the factory can establish a registry model that stores shared data between a set of entities in a common contract, i.e., the registry, while externalizing varying data to be stored in entity-specific contracts. The registry can also maintain references (i.e., addresses) to entity-specific contracts and return a combined extrinsic and intrinsic (common) data set upon request."^^rdfs:Literal ;
                           rdfs:label "Flyweight (Zhang, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ForkCheckBartoletti2017An
:ForkCheckBartoletti2017An rdf:type owl:NamedIndividual ,
                                    :Ethereum ,
                                    :General ,
                                    :Proposal ,
                                    :Solidity ;
                           :hasPaper :Bartoletti2017An ;
                           :hasVariant :ForkCheckV ;
                           :ApplicationExample "AmIOnTheFork contract (https://etherscan.io/address/0x2bd2326c993dfaef84f696526064ff22eba5b362#code)"^^rdfs:Literal ;
                           :ContextAndProblem "The Ethereum blockchain has been forked four times, starting from July 20th, 2016, when a fork was performed to contrast the effect of the DAO attack [4]."^^rdfs:Literal ;
                           :Solution "To know whether or not the fork took place, some contracts inspect the final balance of the DAO. Other contracts use this check to detect whether they are running on the main chain or on the fork, performing different actions in the two cases."^^rdfs:Literal ;
                           rdfs:label "Fork check (Bartoletti, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ForkCheckV
:ForkCheckV rdf:type owl:NamedIndividual ,
                     :ForkCheck ,
                     :Variant ;
            :hasProposal :ForkCheckBartoletti2017An ;
            rdfs:label "Fork check" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FreeingStorageMarchesi2020Design
:FreeingStorageMarchesi2020Design rdf:type owl:NamedIndividual ,
                                           :Ethereum ,
                                           :General ,
                                           :Proposal ,
                                           :Solidity ;
                                  :hasPaper :Marchesi2020Design ;
                                  :hasVariant :FreeingStorageV ;
                                  :ContextAndProblem "Sometimes, Storage variables are not longer used. Is there a way to take advantage of this?"^^rdfs:Literal ;
                                  :Solution "To help keeping the size of the blockchain smaller, you get a gas refund every time you free the Storage. Therefore, it is convenient to delete the variables on the Storage, using the keyword delete, as soon as they are no longer necessary."^^rdfs:Literal ;
                                  rdfs:label "Freeing storage (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#FreeingStorageV
:FreeingStorageV rdf:type owl:NamedIndividual ,
                          :FreeingStorage ,
                          :Variant ;
                 :hasProposal :FreeingStorageMarchesi2020Design ;
                 rdfs:label "Freeing storage" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#HardForkBandara2020Patterns
:HardForkBandara2020Patterns rdf:type owl:NamedIndividual ,
                                      :AllBlockchains ,
                                      :General ,
                                      :Proposal ,
                                      :Unspecified ;
                             :benefitsFrom :SnapshottingBandara2020Patterns ,
                                           :StateAggregationBandara2020Patterns ;
                             :hasPaper :Bandara2020Patterns ;
                             :hasVariant :HardForkV ;
                             :ApplicationExample "Aeternity-team, “Frequently asked questions (FAQ): Token migration phases 1, 2, 3,” Sep. 2019. https://forum.aeternity.com/t/frequently-asked-questions-faq-token-migration-phases-1-2-3/1411."^^rdfs:Literal ,
                                                 "Hive.IO, “Announcing the launch of Hive blockchain,” Mar. 2020. https://steempeak.com/ communityfork/@hiveio/announcing-the-launch-of-hive-blockchain."^^rdfs:Literal ,
                                                 "J. Wilcke, “To fork or not to fork,” July 2016. https://blog.ethereum.org/2016/07/15/ to-fork-or-not-to-fork/."^^rdfs:Literal ;
                             :ContextAndProblem "Concert application has a large number of states, and all of them need to be recreated on the target blockchain. The nonprofit has chosen an existing private or consortium blockchain as the target. The list of accounts and states to be migrated is given in the snapshot. After the snapshot, states are marked as unusable using token burning. How to load states to the target blockchain?"^^rdfs:Literal ;
                             :Solution "Use the states from the snapshot to change the global state on the target blockchain. If a user cannot use an existing private key to access the state migrated to the target blockchain, follow the first two steps to create a new account and update the snapshot file similar to the establish genesis pattern. Next, update the blockchain client software on all nodes of the target blockchain to include the snapshot file at a set block number (blockNo). Once the blockNo is reached, all blockchain nodes should append the states from the snapshot file into the ledger to update the global state. Due to the arbitrary addition of new states, blocks produced before and after the software update will be incompatible. Such a change in blockchain state transition rules is referred to as a hard fork [59]. Similar to the establish genesis pattern, update the ID database and add a PoE entry to reflect new account IDs."^^rdfs:Literal ;
                             rdfs:label "Hard Fork (Bandara, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#HardForkV
:HardForkV rdf:type owl:NamedIndividual ,
                    :HardFork ,
                    :Variant ;
           :benefitsFrom :SnapshottingV ,
                         :StateAggregationV ;
           :hasProposal :HardForkBandara2020Patterns ;
           rdfs:label "Hard Fork" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#HashSecretLiu2018Applying
:HashSecretLiu2018Applying rdf:type owl:NamedIndividual ,
                                    :General ,
                                    :Proposal ,
                                    :SmartContractEnabledBlockchains ,
                                    :Unspecified ;
                           :hasPaper :Liu2018Applying ;
                           :hasVariant :HashSecretV ;
                           :ContextAndProblem ""^^rdfs:Literal ;
                           :Solution "This pattern can help a user to achieve authorisation of a particular activity to unknown authorities, by generating a digital secret key known as the hash secret. When the authority is decided, it will then receive the hash secret and thus have the ability to finish further task."^^rdfs:Literal ;
                           rdfs:label "Hash Secret (Liu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#HashSecretV
:HashSecretV rdf:type owl:NamedIndividual ,
                      :HashSecret ,
                      :Variant ;
             :hasProposal :HashSecretLiu2018Applying ;
             rdfs:label "Hash Secret" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#HashStorageMüller2020Silver
:HashStorageMüller2020Silver rdf:type owl:NamedIndividual ,
                                      :AllBlockchains ,
                                      :BPM ,
                                      :Proposal ,
                                      :Unspecified ;
                             :hasPaper :Müller2020Silver ;
                             :hasVariant :OffChainDataStorageV ;
                             :ApplicationExample "Bin Liu, Xiao Liang Yu, Shiping Chen, Xiwei Xu, and Liming Zhu. Blockchain based data integrity service framework for iot data. In 2017 IEEE International Conference on Web Services (ICWS), pages 468–475. IEEE, 2017."^^rdfs:Literal ,
                                                 "Xueping Liang, Sachin Shetty, Deepak Tosh, Charles Kamhoua, Kevin Kwiat, and Laurent Njilla. Provchain: A blockchain-based data provenance architecture in cloud environment with enhanced privacy and availability. In 2017 17th IEEE/ACM International Symposium on Cluster, Cloud and Grid Computing (CCGRID), pages 468–477. IEEE, 2017."^^rdfs:Literal ;
                             :ContextAndProblem "In collaborative processes where different organizations use shared data, the integrity of this common piece of data is a crucial trust concern. When data can be altered and manipulated, this might lead to anomalies and malicious behavior. For collaborators, it is hard to verify the integrity of the data and trace its provenance. Data integrity is an uncertainty where collaborators have to rely on the organization providing data."^^rdfs:Literal ;
                             :Solution "In the tamper-proof hashed data storage pattern, the collaborator who acts as the data origin hashes the file. The hash is submitted through a transaction to the blockchain. A message with the hash is sent to data consumers. At any point in time, data consumers can verify the file’s integrity by comparing the hash of the received file with the hash on the blockchain. If the hashes do not match up, data has been changed."^^rdfs:Literal ;
                             rdfs:label "Hash Storage (Müller, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#HotColdWalletStorageLiu2020Design
:HotColdWalletStorageLiu2020Design rdf:type owl:NamedIndividual ,
                                            :AllBlockchains ,
                                            :IdentityManagement ,
                                            :Proposal ,
                                            :Unspecified ;
                                   :benefitsFrom :DelegateListLiu2020Design ;
                                   :hasPaper :Liu2020Design ;
                                   :hasVariant :HotColdWalletStorageV ;
                                   :ApplicationExample "Ledger (https://www.ledger.com)"^^rdfs:Literal ,
                                                       "MyEtherWallet (https://www.myetherwallet.com)"^^rdfs:Literal ,
                                                       "Trezor (https://trezor.io)"^^rdfs:Literal ;
                                   :ContextAndProblem "As a blockchain network participant, one entity can rely on so-called “wallets” to manage its accounts and interact with blockchain. An entity’s wallet may suffer malicious attacks, leading to key theft. The attacker can send transactions under that entity’s name to blockchain using a compromised key."^^rdfs:Literal ;
                                   :Solution "Users can choose to store keys in two types of wallets, namely hot wallet and cold wallet. Hot wallet refers to the blockchain gateways that are connected to Internet. Through a hot wallet, a user is able to directly conduct specific operations (e.g. generation) to its accounts and related decentralised identifiers stored on-chain. Cold wallet refers to key storage that is off-line, keeping the accounts from being hacked. A cold wallet can be any device disconnected from the internet or even a paper recording an entity’s keys. When the keys stored in a cold wallet are required for signing transactions, the user needs to connect the cold wallet device to a computer and copy-paste the key in the relevant field. A user can combine these two wallets: storing accounts that are frequently used in a hot wallet while using a cold wallet to keep those that are not used often."^^rdfs:Literal ;
                                   rdfs:label "Hot & Cold Wallet Storage (Liu, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#HotColdWalletStorageV
:HotColdWalletStorageV rdf:type owl:NamedIndividual ,
                                :HotColdWalletStorage ,
                                :Variant ;
                       :benefitsFrom :DelegateListV ;
                       :hasProposal :HotColdWalletStorageLiu2020Design ;
                       rdfs:label "Hot & Cold Wallet Storage" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier100
:Identifier100 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1504/ijeh.2021.117122"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier101
:Identifier101 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1080/10528008.2021.1943445"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier102
:Identifier102 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.24874/IJQR15.02-05"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier103
:Identifier103 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1504/ijebr.2021.114400"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier104
:Identifier104 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1057/s41261-021-00154-4"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier105
:Identifier105 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1016/j.cie.2020.106982"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier106
:Identifier106 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-63092-8_59"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier107
:Identifier107 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ,
                           :Identifier9 ;
               rdfs:label "10.1007/978-981-15-9529-5_13"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier108
:Identifier108 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-51295-8_56"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier109
:Identifier109 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/TETC.2019.2949510"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier11
:Identifier11 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Rajasekar2020Emerging ;
              rdfs:label "10.5220/0009892702420249"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier110
:Identifier110 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/TSC.2018.2876846"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier111
:Identifier111 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/DependSys51298.2020.00014"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier112
:Identifier112 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/TrustCom50675.2020.00221"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier113
:Identifier113 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1016/j.infoecopol.2020.100881"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier114
:Identifier114 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ,
                           :Identifier9 ;
               rdfs:label "10.1177/0268396220924669"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier115
:Identifier115 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1038/s41598-020-61346-y"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier116
:Identifier116 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3428757.3429130"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier117
:Identifier117 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ISAECT50560.2020.9523638"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier118
:Identifier118 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3368089.3417064"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier119
:Identifier119 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/BCCA50787.2020.9274455"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier120
:Identifier120 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/DSA51864.2020.00011"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier121
:Identifier121 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3384943.3409418"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier122
:Identifier122 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ,
                           :Identifier34 ,
                           :Identifier35 ,
                           :Identifier37 ,
                           :Identifier9 ;
               rdfs:label "10.3390/su12208404"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier123
:Identifier123 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/SmartBlock52591.2020.00030"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier124
:Identifier124 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ,
                           :Identifier9 ;
               rdfs:label "10.1109/EDOC49727.2020.00033"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier125
:Identifier125 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier24 ,
                           :Identifier27 ,
                           :Identifier35 ,
                           :Identifier37 ,
                           :Identifier9 ;
               rdfs:label "10.1002/smr.2267"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier126
:Identifier126 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3410699.3413798"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier127
:Identifier127 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3324884.3418918"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier128
:Identifier128 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/SRDS51746.2020.00014"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier129
:Identifier129 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/SMARTCOMP50058.2020.00043"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier13
:Identifier13 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Xu2018A ;
              rdfs:label "10.1145/3282308.3282312"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier130
:Identifier130 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/SecDev45635.2020.00026"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier131
:Identifier131 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ,
                           :Identifier9 ;
               rdfs:label "10.4230/OASIcs.SLATE.2020.2"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier132
:Identifier132 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/s10586-020-03063-9"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier133
:Identifier133 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/DAPPS49028.2020.00010"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier134
:Identifier134 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3387904.3389284"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier135
:Identifier135 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ,
                           :Identifier9 ;
               rdfs:label "10.1109/COMPSAC48688.2020.0-137"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier136
:Identifier136 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ,
                           :Identifier9 ;
               rdfs:label "10.11959/j.issn.2096-109x.2020030"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier137
:Identifier137 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/EEEIC/ICPSEurope49358.2020.9160781"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier138
:Identifier138 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1016/j.future.2017.08.020"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier139
:Identifier139 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/s10664-019-09796-5"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier14
:Identifier14 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Liu2020Design ;
              :references :Identifier13 ,
                          :Identifier35 ,
                          :Identifier37 ,
                          :Identifier9 ;
              rdfs:label "10.1145/3424771.3424802"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier140
:Identifier140 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3366423.3380215"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier141
:Identifier141 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1016/j.future.2019.12.019"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier142
:Identifier142 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3366370"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier143
:Identifier143 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.3390/electronics9020255"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier144
:Identifier144 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-66834-1_5"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier145
:Identifier145 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ,
                           :Identifier9 ;
               rdfs:label "10.1007/978-3-030-66498-5_19"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier146
:Identifier146 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-60248-2_41"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier147
:Identifier147 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-47355-6_8"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier148
:Identifier148 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ,
                           :Identifier27 ,
                           :Identifier37 ,
                           :Identifier9 ;
               rdfs:label "10.1007/978-3-030-59638-5_8"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier149
:Identifier149 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1155/2020/8870438"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier15
:Identifier15 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Bandara2020Patterns ;
              :references :Identifier13 ;
              rdfs:label "10.1145/3424771.3424796"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier150
:Identifier150 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-54455-3_28"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier151
:Identifier151 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ,
                           :Identifier9 ;
               rdfs:label "10.1007/978-3-030-54455-3_29"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier152
:Identifier152 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-51280-4_33"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier153
:Identifier153 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-52535-4_2"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier154
:Identifier154 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-43725-1_9"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier155
:Identifier155 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ,
                           :Identifier9 ;
               rdfs:label "10.1007/978-3-030-43725-1_8"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier156
:Identifier156 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ACCESS.2020.2981447"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier157
:Identifier157 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-38181-3_13"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier158
:Identifier158 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-38181-3_9"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier159
:Identifier159 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ,
                           :Identifier9 ;
               rdfs:label "10.1007/978-3-030-41593-8_5"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier160
:Identifier160 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.3390/ijgi9020084"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier161
:Identifier161 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-33582-3_105"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier162
:Identifier162 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-26574-8_6"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier163
:Identifier163 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1016/j.ribaf.2019.101067"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier164
:Identifier164 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-15032-7_46"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier165
:Identifier165 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3366030.3366075"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier166
:Identifier166 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/CloudCom.2019.00071"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier167
:Identifier167 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1186/s40649-019-0066-1"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier168
:Identifier168 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ISCON47742.2019.9036245"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier169
:Identifier169 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/APCC47188.2019.9026509"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier17
:Identifier17 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Moreno2019BlockBD ;
              rdfs:label "10.1145/3361149.3361166"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier170
:Identifier170 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ASE.2019.00133"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier171
:Identifier171 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/CyberC.2019.00016"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier172
:Identifier172 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/icat47117.2019.8938888"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier173
:Identifier173 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/IEMCON.2019.8936267"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier174
:Identifier174 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/SMC.2019.8913955"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier175
:Identifier175 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/JIOT.2019.2922538"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier176
:Identifier176 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1016/j.future.2019.04.001"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier177
:Identifier177 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1016/j.ifacol.2019.11.617"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier178
:Identifier178 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/SEEDA-CECNSM.2019.8908397"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier179
:Identifier179 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/PIMRC.2019.8904256"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier180
:Identifier180 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.23919/APNOMS.2019.8893121"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier181
:Identifier181 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1016/j.jobe.2019.100832"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier182
:Identifier182 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ICDCS.2019.00194"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier183
:Identifier183 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ICDCS.2019.00137"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier184
:Identifier184 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ICWS.2019.00046"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier185
:Identifier185 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3345252.3345279"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier186
:Identifier186 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/SDS.2019.8768612"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier187
:Identifier187 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/EuroSPW.2019.00041"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier188
:Identifier188 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/SMARTCOMP.2019.00068"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier189
:Identifier189 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/NTMS.2019.8763856"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier190
:Identifier190 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/s40812-019-00118-w"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier191
:Identifier191 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1093/idpl/ipz004"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier192
:Identifier192 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/BLOC.2019.8751323"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier193
:Identifier193 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ,
                           :Identifier9 ;
               rdfs:label "10.1109/BLOC.2019.8751335"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier194
:Identifier194 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1093/rfs/hhz007"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier195
:Identifier195 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3299815.3314434"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier196
:Identifier196 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3328833.3328857"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier197
:Identifier197 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ,
                           :Identifier37 ,
                           :Identifier9 ;
               rdfs:label "10.1109/DAPPCON.2019.00033"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier198
:Identifier198 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ISPRAS.2018.00029"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier199
:Identifier199 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ,
                           :Identifier37 ,
                           :Identifier9 ;
               rdfs:label "10.1109/IWBOSE.2019.8666486"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier2
:Identifier2 rdf:type owl:NamedIndividual ,
                      :Identifier ;
             :identifies :Müller2020Silver ;
             :references :Identifier13 ,
                         :Identifier24 ;
             rdfs:label "10.1007/978-3-030-58779-6_1"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier20
:Identifier20 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Marchesi2020Design ;
              :references :Identifier9 ;
              rdfs:label "10.1109/IWBOSE50093.2020.9050163"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier200
:Identifier200 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.16383/j.aas.c180586"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier201
:Identifier201 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ICDMW.2018.00025"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier202
:Identifier202 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/s40319-018-00776-8"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier203
:Identifier203 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/FAS-W.2018.00018"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier204
:Identifier204 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.3905/joi.2019.28.3.013"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier205
:Identifier205 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-33246-4_28"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier206
:Identifier206 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ,
                           :Identifier9 ;
               rdfs:label "10.1109/ACCESS.2019.2946988"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier207
:Identifier207 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ACCESS.2019.2950872"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier208
:Identifier208 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ACCESS.2019.2957284"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier209
:Identifier209 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ACCESS.2019.2957660"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier210
:Identifier210 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-36938-5_7"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier211
:Identifier211 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-37231-6_13"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier212
:Identifier212 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-34914-1_3"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier213
:Identifier213 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-32101-7_7"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier214
:Identifier214 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ,
                           :Identifier9 ;
               rdfs:label "10.1007/978-3-030-28005-5_20"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier215
:Identifier215 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ,
                           :Identifier9 ;
               rdfs:label "10.1007/978-3-030-30429-4_12"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier216
:Identifier216 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-981-13-9942-8_68"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier217
:Identifier217 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/s00766-019-00323-y"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier218
:Identifier218 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.3390/BUILDINGS9060149"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier219
:Identifier219 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ,
                           :Identifier9 ;
               rdfs:label "10.1109/ACCESS.2019.2921624"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier220
:Identifier220 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ACCESS.2019.2921936"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier221
:Identifier221 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ACCESS.2019.2920776"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier222
:Identifier222 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-19274-7_22"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier223
:Identifier223 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-17601-3_3"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier224
:Identifier224 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-10549-5_27"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier225
:Identifier225 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-06097-8_7"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier226
:Identifier226 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-01746-0_38"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier227
:Identifier227 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/CloudCom2018.2018.00059"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier228
:Identifier228 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1016/j.tele.2018.10.004"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier229
:Identifier229 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ,
                           :Identifier9 ;
               rdfs:label "10.1145/3282373.3282419"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier23
:Identifier23 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Six2020A ;
              :references :Identifier13 ;
              rdfs:label "10.1109/TrustCom50675.2020.00268"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier230
:Identifier230 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3282373.3282396"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier231
:Identifier231 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/HealthCom.2018.8531136"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier232
:Identifier232 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3278532.3278575"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier233
:Identifier233 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3278532.3278542"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier234
:Identifier234 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3284179.3284354"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier235
:Identifier235 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3243734.3243795"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier236
:Identifier236 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/EuCNC.2018.8442848"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier237
:Identifier237 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/ICCCI.2018.8441347"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier238
:Identifier238 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/QRS-C.2018.00036"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier239
:Identifier239 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/NOMS.2018.8406326"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier24
:Identifier24 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Wessling2018Engineering ;
              rdfs:label "10.1109/ICSA-C.2018.00019"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier240
:Identifier240 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1109/Cybermatics_2018.2018.00211"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier241
:Identifier241 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1145/3194113.3194117"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier242
:Identifier242 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.23919/ICITST.2017.8356459"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier243
:Identifier243 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.3390/info9020044"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier244
:Identifier244 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.4192/1577-8517-v18_1"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier245
:Identifier245 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-319-99828-2_10"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier246
:Identifier246 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-662-58387-6_28"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier247
:Identifier247 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.14763/2018.2.790"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier248
:Identifier248 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-02744-5_35"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier249
:Identifier249 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-03427-6_22"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier25
:Identifier25 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Lemieux2017A ;
              rdfs:label "10.1109/BigData.2017.8258180"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier250
:Identifier250 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-030-03427-6_32"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier251
:Identifier251 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-319-98989-1_1"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier252
:Identifier252 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-319-96661-8_45"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier253
:Identifier253 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-319-94478-4_6"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier254
:Identifier254 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.5220/0006688601050113"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier255
:Identifier255 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-319-89722-6_11"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier256
:Identifier256 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-319-75650-9_14"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier257
:Identifier257 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1016/j.giq.2017.09.007"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier258
:Identifier258 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier9 ;
               rdfs:label "10.1007/978-3-319-67816-0_20"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier259
:Identifier259 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1109/TEM.2020.3021242"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier260
:Identifier260 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1007/s11628-021-00465-6"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier261
:Identifier261 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1007/s12525-022-00536-0"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier262
:Identifier262 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.3390/app112210698"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier263
:Identifier263 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ,
                           :Identifier27 ,
                           :Identifier37 ;
               rdfs:label "10.1109/BRAINS52497.2021.9569830"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier264
:Identifier264 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ,
                           :Identifier27 ;
               rdfs:label "10.1109/BRAINS52497.2021.9569813"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier265
:Identifier265 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.3390/jtaer16050072"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier266
:Identifier266 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1145/3461011"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier267
:Identifier267 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1016/j.scico.2021.102631"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier268
:Identifier268 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1109/ICBC51069.2021.9461092"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier269
:Identifier269 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1145/3442412"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier27
:Identifier27 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Wöhrer2018Design ;
              :references :Identifier35 ,
                          :Identifier9 ;
              rdfs:label "10.1109/Cybermatics_2018.2018.00255"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier270
:Identifier270 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ,
                           :Identifier35 ;
               rdfs:label "10.1109/Blockchain53845.2021.00041"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier271
:Identifier271 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1007/978-3-030-85867-4_8"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier272
:Identifier272 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1007/978-3-030-86044-8_12"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier273
:Identifier273 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1007/978-3-030-80126-7_62"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier274
:Identifier274 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1016/j.ipm.2020.102425"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier275
:Identifier275 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.3390/s20226456"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier276
:Identifier276 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1145/3425269.3425285"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier277
:Identifier277 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1109/ICECCS51672.2020.00032"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier278
:Identifier278 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1109/EDOC49727.2020.00034"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier279
:Identifier279 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1109/MS.2020.2999989"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier280
:Identifier280 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1109/DAPPS49028.2020.00020"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier281
:Identifier281 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1109/ICSA47634.2020.00020"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier282
:Identifier282 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1109/ICSA-C50368.2020.00028"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier283
:Identifier283 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ,
                           :Identifier24 ;
               rdfs:label "10.1109/ICSA-C50368.2020.00029"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier284
:Identifier284 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1109/ICSA-C50368.2020.00033"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier285
:Identifier285 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1109/PARC49193.2020.236555"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier286
:Identifier286 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ,
                           :Identifier27 ;
               rdfs:label "10.30844/wi_2020_i2"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier287
:Identifier287 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ,
                           :Identifier27 ;
               rdfs:label "10.1007/978-3-030-59638-5_9"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier288
:Identifier288 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1007/978-3-030-58923-3_2"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier289
:Identifier289 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ,
                           :Identifier27 ;
               rdfs:label "10.1007/978-3-030-58779-6_5"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier290
:Identifier290 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1109/BigData47090.2019.9006341"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier291
:Identifier291 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1109/ISCON47742.2019.9036270"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier292
:Identifier292 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1007/978-3-030-30429-4_7"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier293
:Identifier293 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier13 ;
               rdfs:label "10.1109/ACCESS.2019.2914675"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier294
:Identifier294 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier14 ;
               rdfs:label "10.1109/ACCESS.2022.3150356"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier295
:Identifier295 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier14 ,
                           :Identifier20 ;
               rdfs:label "10.3390/fi13120301"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier296
:Identifier296 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier14 ;
               rdfs:label "10.1109/COMPSAC51774.2021.00168"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier297
:Identifier297 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier14 ;
               rdfs:label "10.1145/3463274.3463349"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier298
:Identifier298 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier15 ;
               rdfs:label "10.1007/978-3-030-96772-7_26"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier299
:Identifier299 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier15 ;
               rdfs:label "10.1109/SDS54264.2021.9732100"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier300
:Identifier300 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier17 ;
               rdfs:label "10.1016/j.future.2022.01.017"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier301
:Identifier301 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier20 ;
               rdfs:label "10.1016/j.eswa.2022.116804"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier302
:Identifier302 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier20 ,
                           :Identifier35 ;
               rdfs:label "10.1016/j.jss.2021.111193"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier303
:Identifier303 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier20 ,
                           :Identifier35 ;
               rdfs:label "10.1016/j.techsoc.2022.101941"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier304
:Identifier304 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier20 ;
               rdfs:label "10.14429/DSJ.71.16454"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier305
:Identifier305 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier20 ,
                           :Identifier27 ;
               rdfs:label "10.1109/AIIoT52608.2021.9454189"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier306
:Identifier306 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier20 ;
               rdfs:label "10.1109/WETSEB52558.2021.00013"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier307
:Identifier307 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier20 ;
               rdfs:label "10.3390/app11072960"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier308
:Identifier308 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier20 ;
               rdfs:label "10.1109/SANER50967.2021.00089"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier309
:Identifier309 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier20 ;
               rdfs:label "10.1109/SANER50967.2021.00088"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier310
:Identifier310 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier20 ;
               rdfs:label "10.1109/SANER50967.2021.00091"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier311
:Identifier311 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier20 ;
               rdfs:label "10.1109/ICSA-C52384.2021.00032"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier312
:Identifier312 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier20 ;
               rdfs:label "10.1109/ICSME52107.2021.00060"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier313
:Identifier313 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier20 ;
               rdfs:label "10.1007/978-3-030-87016-4_18"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier314
:Identifier314 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier20 ;
               rdfs:label "10.1109/ACCESS.2021.3074874"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier315
:Identifier315 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier24 ;
               rdfs:label "10.1016/j.compeleceng.2022.107925"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier316
:Identifier316 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier24 ;
               rdfs:label "10.3390/app12073415"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier317
:Identifier317 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier24 ;
               rdfs:label "10.1109/ICBC51069.2021.9461109"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier318
:Identifier318 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier24 ;
               rdfs:label "10.1007/978-3-030-79108-7_5"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier319
:Identifier319 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier24 ;
               rdfs:label "10.1007/978-981-15-5859-7_28"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier320
:Identifier320 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier24 ;
               rdfs:label "10.1109/SERVICES48979.2020.00039"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier321
:Identifier321 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier24 ,
                           :Identifier35 ,
                           :Identifier37 ;
               rdfs:label "10.1109/ICBC48266.2020.9169423"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier322
:Identifier322 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier24 ;
               rdfs:label "10.1145/3341105.3373988"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier323
:Identifier323 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier24 ;
               rdfs:label "10.1007/978-3-030-61143-9_18"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier324
:Identifier324 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier24 ;
               rdfs:label "10.1007/978-3-030-56441-4_1"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier325
:Identifier325 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier24 ;
               rdfs:label "10.31838/jcr.07.09.71"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier326
:Identifier326 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier24 ;
               rdfs:label "10.1109/INTERCON.2019.8853524"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier327
:Identifier327 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier24 ;
               rdfs:label "10.1109/JEEIT.2019.8717441"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier328
:Identifier328 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1108/DLP-08-2021-0065"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier329
:Identifier329 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1007/s10586-021-03491-1"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier330
:Identifier330 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ,
                           :Identifier35 ;
               rdfs:label "10.1109/ACCESS.2021.3138353"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier331
:Identifier331 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1007/978-981-16-6301-7_2"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier332
:Identifier332 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ,
                           :Identifier35 ;
               rdfs:label "10.1007/978-3-030-76216-2_10"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier333
:Identifier333 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.3390/BUILDINGS11110560"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier334
:Identifier334 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1109/COMPSAC51774.2021.00167"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier335
:Identifier335 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1109/BigData52589.2021.9671707"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier336
:Identifier336 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1109/ACCESS.2021.3132990"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier337
:Identifier337 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1109/ACCESS.2021.3109822"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier338
:Identifier338 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1057/s41278-021-00197-4"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier339
:Identifier339 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.3390/computers10080090"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier34
:Identifier34 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Zhang2017Applying ;
              rdfs:label "1706.03700"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier340
:Identifier340 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1080/10580530.2020.1767830"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier341
:Identifier341 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1108/RMJ-09-2019-0056"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier342
:Identifier342 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1108/RMJ-08-2019-0040"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier343
:Identifier343 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1177/1461444819888756"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier344
:Identifier344 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1177/1460458219866350"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier345
:Identifier345 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1007/978-981-15-5089-8_23"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier346
:Identifier346 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1109/iCoMET48670.2020.9073927"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier347
:Identifier347 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1007/978-981-15-1480-7_56"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier348
:Identifier348 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1007/978-3-030-38181-3_12"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier349
:Identifier349 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1007/978-3-030-36987-3_26"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier35
:Identifier35 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Wohrer2018Smart ;
              :references :Identifier9 ;
              rdfs:label "10.1109/IWBOSE.2018.8327565"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier350
:Identifier350 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1109/ICoAC48765.2019.246860"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier351
:Identifier351 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1109/BigData47090.2019.9006221"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier352
:Identifier352 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1016/j.bushor.2019.08.003"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier353
:Identifier353 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1016/j.jnca.2019.06.018"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier354
:Identifier354 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1109/ICCUBEA47591.2019.9129289"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier355
:Identifier355 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1109/TSP.2019.8769098"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier356
:Identifier356 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.2196/12426"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier357
:Identifier357 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1109/BigData.2018.8622594"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier358
:Identifier358 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1109/WorldS4.2018.8611607"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier359
:Identifier359 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.7238/idp.v0i28.3154"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier36
:Identifier36 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Eberhardt2017On ;
              rdfs:label "10.1007/978-3-319-67262-5_1"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier360
:Identifier360 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1007/978-3-030-36599-8_42"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier361
:Identifier361 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.5220/0008347903190325"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier362
:Identifier362 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1007/978-3-030-30429-4_4"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier363
:Identifier363 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1109/ACCESS.2019.2911031"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier364
:Identifier364 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.4103/JETS.JETS_90_18"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier365
:Identifier365 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.1007/978-3-319-99058-3_11"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier366
:Identifier366 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier25 ;
               rdfs:label "10.3390/sym10100470"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier367
:Identifier367 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ,
                           :Identifier35 ;
               rdfs:label "10.1016/j.future.2022.01.008"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier368
:Identifier368 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ;
               rdfs:label "10.1109/ACCESS.2022.3162227"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier369
:Identifier369 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ,
                           :Identifier37 ;
               rdfs:label "10.1145/3489449.3489994"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier37
:Identifier37 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Liu2018Applying ;
              :references :Identifier9 ;
              rdfs:label "10.1007/978-3-319-94478-4_7"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier370
:Identifier370 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ;
               rdfs:label "10.1109/UBMK52708.2021.9558914"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier371
:Identifier371 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ;
               rdfs:label "10.1109/Blockchain53845.2021.00040"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier372
:Identifier372 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ;
               rdfs:label "10.1007/978-3-030-79976-2_25"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier373
:Identifier373 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ;
               rdfs:label "10.1109/ICS51289.2020.00097"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier374
:Identifier374 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ;
               rdfs:label "10.1007/s10723-020-09534-y"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier375
:Identifier375 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ;
               rdfs:label "10.1016/j.jpdc.2020.05.011"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier376
:Identifier376 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ,
                           :Identifier35 ;
               rdfs:label "10.1109/MS.2020.2993470"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier377
:Identifier377 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ,
                           :Identifier35 ;
               rdfs:label "10.1109/ICBC48266.2020.9169399"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier378
:Identifier378 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ;
               rdfs:label "10.1007/978-3-030-48340-1_18"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier379
:Identifier379 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ;
               rdfs:label "10.1016/j.future.2019.07.030"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier38
:Identifier38 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Zhang2018Chapter ;
              rdfs:label "10.1016/bs.adcom.2018.03.006"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier380
:Identifier380 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ;
               rdfs:label "10.1109/ISMSIT.2019.8932806"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier381
:Identifier381 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier27 ;
               rdfs:label "10.1007/978-3-030-32101-7_27"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier382
:Identifier382 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ;
               rdfs:label "10.1016/j.jclepro.2022.131440"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier383
:Identifier383 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ;
               rdfs:label "10.1016/j.giq.2021.101625"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier384
:Identifier384 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ;
               rdfs:label "10.4018/978-1-7998-6463-9"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier385
:Identifier385 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ;
               rdfs:label "10.4018/978-1-7998-6463-9.ch005"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier386
:Identifier386 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ;
               rdfs:label "10.1007/978-3-030-75078-7_32"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier387
:Identifier387 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ;
               rdfs:label "10.1007/978-3-030-14939-0_4"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier388
:Identifier388 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ;
               rdfs:label "10.1109/IOTSMS52051.2020.9340232"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier389
:Identifier389 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ;
               rdfs:label "10.1016/j.scs.2020.102364"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier39
:Identifier39 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :identifies :Mühlberger2020Foundational ;
              :references :Identifier13 ;
              rdfs:label "10.1007/978-3-030-58779-6_3"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier390
:Identifier390 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ,
                           :Identifier35 ;
               rdfs:label "10.1016/j.scs.2020.102018"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier391
:Identifier391 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ;
               rdfs:label "10.1016/j.ijmedinf.2019.104040"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier392
:Identifier392 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ;
               rdfs:label "10.1016/j.sftr.2020.100034"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier393
:Identifier393 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ;
               rdfs:label "10.1109/ACCESS.2020.2969230"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier394
:Identifier394 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ;
               rdfs:label "10.3390/s20010282"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier395
:Identifier395 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ;
               rdfs:label "10.1016/bs.adcom.2018.12.002"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier396
:Identifier396 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier34 ;
               rdfs:label "10.1016/j.csbj.2018.07.004"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier397
:Identifier397 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1016/j.comnet.2021.108621"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier398
:Identifier398 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ACCESS.2022.3162065"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier399
:Identifier399 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/s41870-022-00912-1"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier40
:Identifier40 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier5 ;
              rdfs:label "10.19363/J.cnki.cn10-1380/tn.2022.03.10"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier400
:Identifier400 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.2298/CSIS210215037G"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier401
:Identifier401 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-981-16-9576-6_23"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier402
:Identifier402 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-3-030-94188-8_16"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier403
:Identifier403 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-3-030-86162-9_14"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier404
:Identifier404 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-3-030-84337-3_9"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier405
:Identifier405 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1145/3507971.3507997"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier406
:Identifier406 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.3390/su132313268"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier407
:Identifier407 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/s10586-021-03352-x"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier408
:Identifier408 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1002/cjs.11623"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier409
:Identifier409 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1016/j.rtbm.2021.100620"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier41
:Identifier41 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier6 ;
              rdfs:label "10.1109/HPCA47549.2020.00041"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier410
:Identifier410 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/BRAINS52497.2021.9569801"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier411
:Identifier411 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1016/j.iot.2021.100420"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier412
:Identifier412 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/MWSCAS47672.2021.9531857"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier413
:Identifier413 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ICSGRC53186.2021.9515276"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier414
:Identifier414 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/s11042-020-09368-6"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier415
:Identifier415 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/JIOT.2021.3058953"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier416
:Identifier416 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.4018/978-1-7998-8335-7.ch008"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier417
:Identifier417 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1049/smc2.12010"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier418
:Identifier418 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1016/j.comnet.2021.108029"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier419
:Identifier419 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ICBC51069.2021.9461127"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier42
:Identifier42 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier13 ,
                          :Identifier27 ,
                          :Identifier9 ;
              rdfs:label "10.1145/3464421"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier420
:Identifier420 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/SP40001.2021.00080"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier421
:Identifier421 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/s11042-021-10715-4"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier422
:Identifier422 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.11897/SP.J.1016.2021.00786"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier423
:Identifier423 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1016/j.future.2020.12.007"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier424
:Identifier424 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ECTIDAMTNCON51128.2021.9425780"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier425
:Identifier425 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.23919/FRUCT50888.2021.9347617"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier426
:Identifier426 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.4018/978-1-6684-3694-3.ch033"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier427
:Identifier427 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/BCCA53669.2021.9657041"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier428
:Identifier428 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-981-16-7476-1_13"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier429
:Identifier429 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1016/j.procs.2021.09.048"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier43
:Identifier43 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier13 ,
                          :Identifier15 ,
                          :Identifier39 ,
                          :Identifier9 ;
              rdfs:label "10.1007/s10270-021-00959-x"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier430
:Identifier430 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-3-662-63958-0_30"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier431
:Identifier431 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-3-030-85867-4_5"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier432
:Identifier432 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/OJCOMS.2021.3078081"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier433
:Identifier433 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.26594/REGISTER.V7I2.1959"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier434
:Identifier434 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ACCESS.2021.3068178"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier435
:Identifier435 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.21817/indjcse/2021/v12i1/211201017"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier436
:Identifier436 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-981-33-6835-4_5"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier437
:Identifier437 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.3969/j.issn.0255-8297.2021.01.013"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier438
:Identifier438 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-981-15-5029-4_63"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier439
:Identifier439 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1186/s13673-020-00244-8"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier44
:Identifier44 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1109/TNSM.2021.3123680"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier440
:Identifier440 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1016/j.jnca.2020.102814"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier441
:Identifier441 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ICCCA49541.2020.9250767"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier442
:Identifier442 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1088/1742-6596/1634/1/012031"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier443
:Identifier443 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/COMST.2020.3020092"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier444
:Identifier444 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1016/j.ins.2020.05.054"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier445
:Identifier445 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1016/j.jnca.2020.102693"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier446
:Identifier446 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/SOSE49046.2020.00018"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier447
:Identifier447 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ICCCNT49239.2020.9225525"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier448
:Identifier448 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/COMST.2020.2975999"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier449
:Identifier449 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ICOEI48184.2020.9143004"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier45
:Identifier45 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1016/j.gfj.2020.100539"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier450
:Identifier450 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1145/3391195"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier451
:Identifier451 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1145/3379463"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier452
:Identifier452 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/VTC2020-Spring48590.2020.9128995"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier453
:Identifier453 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ISSE49702.2020.9120915"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier454
:Identifier454 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/SDS49854.2020.9143900"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier455
:Identifier455 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1016/j.comcom.2020.01.073"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier456
:Identifier456 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1145/3384544.3384577"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier457
:Identifier457 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1016/j.ins.2019.09.073"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier458
:Identifier458 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ACCESS.2020.3032239"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier459
:Identifier459 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.30844/wi_2020_r13"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier46
:Identifier46 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.13374/j.issn2095-9389.2021.02.22.001"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier460
:Identifier460 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-3-030-63095-9_22"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier461
:Identifier461 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-981-15-8101-4_58"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier462
:Identifier462 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-3-030-45691-7_3"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier463
:Identifier463 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-3-030-41702-4_9"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier464
:Identifier464 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-981-15-3278-8_6"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier465
:Identifier465 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ISRITI48646.2019.9034659"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier466
:Identifier466 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ICCCIS48478.2019.8974500"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier467
:Identifier467 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/IPTCOMM.2019.8920874"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier468
:Identifier468 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.14132/j.cnki.1673-5439.2019.05.008"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier469
:Identifier469 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ICCUBEA47591.2019.9129015"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier47
:Identifier47 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1142/S0218126622500025"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier470
:Identifier470 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/Blockchain.2019.00060"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier471
:Identifier471 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/COMST.2019.2899617"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier472
:Identifier472 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.3969/j.issn.1000-7229.2019.06.002"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier473
:Identifier473 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/JIOT.2018.2879679"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier474
:Identifier474 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/SERA.2019.8886793"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier475
:Identifier475 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/BLOC.2019.8751300"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier476
:Identifier476 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ICCSP.2019.8698058"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier477
:Identifier477 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/IWBOSE.2019.8666520"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier478
:Identifier478 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/IWBOSE.2019.8666541"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier479
:Identifier479 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/IWBOSE.2019.8666575"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier48
:Identifier48 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1145/3491003.3491014"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier480
:Identifier480 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ISESD.2018.8605485"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier481
:Identifier481 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-3-030-36938-5_31"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier482
:Identifier482 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.14569/ijacsa.2019.0100973"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier483
:Identifier483 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.2991/ijndc.k.190710.003"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier484
:Identifier484 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ISETC.2018.8583975"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier485
:Identifier485 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/ACCESS.2018.2870644"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier486
:Identifier486 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1109/GLOCOM.2018.8647221"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier487
:Identifier487 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1145/3234152.3234190"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier488
:Identifier488 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier35 ;
               rdfs:label "10.1007/978-3-319-96145-3_4"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier489
:Identifier489 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier37 ,
                           :Identifier39 ;
               rdfs:label "10.1145/3462203.3475876"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier49
:Identifier49 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1007/978-3-030-95419-2_15"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier490
:Identifier490 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier37 ;
               rdfs:label "10.1155/2021/6666236"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier491
:Identifier491 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier37 ;
               rdfs:label "10.1016/j.jksuci.2021.01.009"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier492
:Identifier492 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier37 ;
               rdfs:label "10.1109/Blockchain50366.2020.00078"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier493
:Identifier493 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier37 ;
               rdfs:label "10.1109/CIMPS52057.2020.9390126"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier494
:Identifier494 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier37 ;
               rdfs:label "10.1109/DAPPS49028.2020.00018"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier495
:Identifier495 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier37 ;
               rdfs:label "10.1109/ACCESS.2020.3021502"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier496
:Identifier496 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier37 ;
               rdfs:label "10.1016/j.future.2019.05.051"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier497
:Identifier497 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier37 ;
               rdfs:label "10.1007/s11192-019-03170-4"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier498
:Identifier498 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier38 ;
               rdfs:label "10.1109/TrustCom50675.2020.00025"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier499
:Identifier499 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier39 ;
               rdfs:label "10.1145/3471140"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier5
:Identifier5 rdf:type owl:NamedIndividual ,
                      :Identifier ;
             :identifies :Worley2019Opportunities ;
             :references :Identifier9 ;
             rdfs:label "10.1007/978-3-030-04849-5_24"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier50
:Identifier50 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1007/978-981-16-8012-0_9"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier500
:Identifier500 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier39 ;
               rdfs:label "10.1016/j.future.2021.12.006"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier501
:Identifier501 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier39 ;
               rdfs:label "10.1016/j.future.2021.11.004"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier502
:Identifier502 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier39 ;
               rdfs:label "10.3390/app11167572"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier503
:Identifier503 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier39 ;
               rdfs:label "10.1109/GLOBECOM46510.2021.9685205"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier504
:Identifier504 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier39 ;
               rdfs:label "10.1007/978-3-030-75107-4_1"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier505
:Identifier505 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier39 ;
               rdfs:label "10.1007/978-3-030-89247-0_10"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier506
:Identifier506 rdf:type owl:NamedIndividual ,
                        :Identifier ;
               :references :Identifier39 ;
               rdfs:label "10.14763/2021.2.1549"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier51
:Identifier51 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1080/19331681.2022.2027317"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier52
:Identifier52 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier20 ,
                          :Identifier27 ,
                          :Identifier35 ,
                          :Identifier9 ;
              rdfs:label "10.1109/ACCESS.2021.3140091"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier53
:Identifier53 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1016/j.jnca.2021.103246"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier54
:Identifier54 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1109/TSE.2020.2971482"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier55
:Identifier55 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier27 ,
                          :Identifier35 ,
                          :Identifier9 ;
              rdfs:label "10.11897/SP.J.1016.2021.02487"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier56
:Identifier56 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1002/ett.4341"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier57
:Identifier57 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier35 ,
                          :Identifier9 ;
              rdfs:label "10.1016/j.ins.2021.08.007"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier58
:Identifier58 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1007/s10664-021-10018-0"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier59
:Identifier59 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier35 ,
                          :Identifier9 ;
              rdfs:label "10.1109/TSE.2019.2942301"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier6
:Identifier6 rdf:type owl:NamedIndividual ,
                      :Identifier ;
             :identifies :Owens2019Interfamily ;
             rdfs:label "10.1007/978-3-030-05366-6_32"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier60
:Identifier60 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1016/j.apenergy.2021.117154"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier61
:Identifier61 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1016/j.cose.2021.102343"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier62
:Identifier62 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1007/s12083-021-01151-0"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier63
:Identifier63 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1007/s12083-021-01127-0"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier64
:Identifier64 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1007/s13369-020-05245-4"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier65
:Identifier65 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1007/s10257-020-00465-5"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier66
:Identifier66 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1145/3468264.3473929"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier67
:Identifier67 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1002/cpe.5800"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier68
:Identifier68 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1145/3460319.3469078"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier69
:Identifier69 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier13 ,
                          :Identifier14 ,
                          :Identifier15 ,
                          :Identifier27 ,
                          :Identifier35 ,
                          :Identifier37 ,
                          :Identifier39 ,
                          :Identifier9 ;
              rdfs:label "10.1145/3489449.3490006"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier70
:Identifier70 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.3390/info12070257"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier71
:Identifier71 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.2196/26230"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier72
:Identifier72 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.13328/j.cnki.jos.006253"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier73
:Identifier73 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.3390/robotics10020056"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier74
:Identifier74 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1145/3423166"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier75
:Identifier75 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.3390/fi13040086"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier76
:Identifier76 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier20 ,
                          :Identifier35 ,
                          :Identifier9 ;
              rdfs:label "10.1016/j.jss.2020.110891"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier77
:Identifier77 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1007/s11704-020-9284-9"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier78
:Identifier78 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier13 ,
                          :Identifier9 ;
              rdfs:label "10.1108/BPMJ-06-2020-0263"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier79
:Identifier79 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.3389/fdata.2021.603282"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier80
:Identifier80 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier13 ,
                          :Identifier15 ,
                          :Identifier24 ,
                          :Identifier27 ,
                          :Identifier35 ,
                          :Identifier39 ,
                          :Identifier9 ;
              rdfs:label "10.1109/ICSA51549.2021.00013"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier81
:Identifier81 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1016/j.comcom.2020.12.028"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier82
:Identifier82 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1016/j.jnca.2020.102857"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier83
:Identifier83 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier35 ,
                          :Identifier9 ;
              rdfs:label "10.1016/j.tele.2020.101519"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier84
:Identifier84 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1016/j.jnca.2020.102917"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier85
:Identifier85 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1016/j.jnca.2020.102953"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier86
:Identifier86 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier27 ,
                          :Identifier35 ,
                          :Identifier9 ;
              rdfs:label "10.1016/j.patter.2020.100179"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier87
:Identifier87 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier35 ,
                          :Identifier9 ;
              rdfs:label "10.1109/MC.2020.3017466"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier88
:Identifier88 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier35 ,
                          :Identifier9 ;
              rdfs:label "10.3390/info12020070"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier89
:Identifier89 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1145/3450588.3450604"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier9
:Identifier9 rdf:type owl:NamedIndividual ,
                      :Identifier ;
             :identifies :Bartoletti2017An ;
             rdfs:label "10.1007/978-3-319-70278-0_31"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier90
:Identifier90 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1109/ICPECA51329.2021.9362671"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier91
:Identifier91 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1109/Blockchain53845.2021.00091"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier92
:Identifier92 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1109/IC2IE53219.2021.9649258"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier93
:Identifier93 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1109/ICSME52107.2021.00009"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier94
:Identifier94 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.14763/2021.2.1561"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier95
:Identifier95 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.3989/REDC.2021.4.1771"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier96
:Identifier96 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.1109/ACCESS.2021.3123894"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier97
:Identifier97 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier20 ,
                          :Identifier9 ;
              rdfs:label "10.1109/ACCESS.2021.3115577"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier98
:Identifier98 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier9 ;
              rdfs:label "10.4192/1577-8517-v21_6"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Identifier99
:Identifier99 rdf:type owl:NamedIndividual ,
                       :Identifier ;
              :references :Identifier20 ,
                          :Identifier9 ;
              rdfs:label "10.1007/978-3-030-85521-5_1"^^rdfs:Literal .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#IdentifierRegistryLiu2020Design
:IdentifierRegistryLiu2020Design rdf:type owl:NamedIndividual ,
                                          :IdentityManagement ,
                                          :Proposal ,
                                          :SmartContractEnabledBlockchains ,
                                          :Unspecified ;
                                 :benefitsFrom :DelegateListLiu2020Design ;
                                 :hasPaper :Liu2020Design ;
                                 :hasVariant :IdentifierRegistryV ;
                                 :relatedTo :FlyweightZhang2017Applying ,
                                            :PushBasedOutboundOracleMühlberger2020Foundational ;
                                 :requires :MasterSubKeyLiu2020Design ;
                                 :ApplicationExample "Jolocom (https://jolocom.io)"^^rdfs:Literal ,
                                                     "Sovrin (https://sovrin.org)"^^rdfs:Literal ,
                                                     "uPort (https://www.uport.me)"^^rdfs:Literal ;
                                 :ContextAndProblem "Identity is defined as sets of attributes related to an entity. In software applications, identity attribute data needs to be accessed for a specific purpose. An identifier is a globally unique persistent series of digits and/or characters that is used to uniquely identify an entity (e.g. human, organisation, device) within one domain and can be used to retrieve the storage location of the identity attribute data. A Decentralised Identifier (DID) is a new type of identifier which is designed for cryptographically verifiable self-sovereign identity. In traditional centralised software systems, mappings between an identifier and the identity data storage location is maintained by a centralised single authority which may become a potential single point of failure."^^rdfs:Literal ;
                                 :Solution "Implementing an identifier registry designed as a smart contract to maintain bindings between an identifier and the location of associated off-chain identity data attributes. This identifier registry smart contract is the main entry point for accessing the attributes of an identity, which can map each identifier to a storage (e.g. IPFS, Dropbox, etc.) location for the respective identity attributes (e.g. an IPFS hash linking to the IPFS storage location containing the user’s identity attributes). Only the identifier owner is allowed to update the storage location of identity attributes. Each identifier points to an identifier document which describes how to use that specific identifier, e.g. public keys used for digital signatures, service endpoints for interaction."^^rdfs:Literal ;
                                 rdfs:label "Identifier Registry (Liu, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#IdentifierRegistryV
:IdentifierRegistryV rdf:type owl:NamedIndividual ,
                              :IdentifierRegistry ,
                              :Variant ;
                     :benefitsFrom :DelegateListV ;
                     :hasProposal :IdentifierRegistryLiu2020Design ;
                     rdfs:label "Identifier Registry" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#IncentiveExecutionRajasekar2020Emerging
:IncentiveExecutionRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                                  :General ,
                                                  :Proposal ,
                                                  :SmartContractEnabledBlockchains ,
                                                  :Unspecified ;
                                         :createdFrom :IncentiveExecutionXu2018A ;
                                         :hasPaper :Rajasekar2020Emerging ;
                                         :hasVariant :IncentiveExecutionV ;
                                         :ContextAndProblem "Some functions perform tasks like cleaning up expired records, making dividend payouts and destroying deprecated contracts. These utility functions also require gas to be executed, and the payout is usually not enough to offset the execution cost."^^rdfs:Literal ;
                                         :Solution "Make seldom-run utility functions piggyback onto contracts that execute more often."^^rdfs:Literal ;
                                         rdfs:label "Incentive Execution (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#IncentiveExecutionV
:IncentiveExecutionV rdf:type owl:NamedIndividual ,
                              :IncentiveExecution ,
                              :Variant ;
                     :hasProposal :IncentiveExecutionRajasekar2020Emerging ,
                                  :IncentiveExecutionXu2018A ;
                     rdfs:label "Incentive Execution" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#IncentiveExecutionXu2018A
:IncentiveExecutionXu2018A rdf:type owl:NamedIndividual ,
                                    :General ,
                                    :Proposal ,
                                    :SmartContractEnabledBlockchains ,
                                    :Unspecified ;
                           :hasPaper :Xu2018A ;
                           :hasVariant :IncentiveExecutionV ;
                           :ApplicationExample "Ethereum Alarm Clock (http://www.ethereum-alarm-clock.com/)"^^rdfs:Literal ,
                                               "Regis (https://regis.nu)"^^rdfs:Literal ;
                           :ContextAndProblem "Smart contracts are event-driven programs, which cannot execute autonomously. All the functions defined in a smart contract need to be triggered either by a transaction from external account or another smart contract to execute. Other than the functions that provide regular services to users, some functions need to run asynchronously from regular user interaction, for example, to clean up the expired records, or make dividend payouts etc. Such functions usually involve a time, after which the function should start. Users of a smart contract have no direct benefit from calling the accessorial functions. If a public blockchain is used, executing these functions causes extra monetary cost. Some accessorial functions are expensive to execute."^^rdfs:Literal ;
                           :Solution "Reward the caller of a function defined in a smart contract for invoking the execution, for example, sending back a percentage of payout to the caller to reimburse the (gas) execution cost."^^rdfs:Literal ;
                           rdfs:label "Incentive execution (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#InterFamilyCommunicationOwens2019Interfamily
:InterFamilyCommunicationOwens2019Interfamily rdf:type owl:NamedIndividual ,
                                                       :General ,
                                                       :HyperledgerSawtooth ,
                                                       :Proposal ,
                                                       :Unspecified ;
                                              :hasPaper :Owens2019Interfamily ;
                                              :hasVariant :InterFamilyCommunicationV ;
                                              :ContextAndProblem "In a smart contract environment, a desirable property is to have the capability for smart contracts to call other smart contracts. Ideally, this functionality should be as easy as having the ability to do a function call within another function in any programming language. Nevertheless, in a blockchain, the execution environment involves some form of cryptography, and it is challenging to pass along these cryptographic guarantees along smart contract calls without passing along more context. In Sawtooth, there is an additional challenge because the platform is language agnostic and transaction families can be written in different programming languages on the same blockchain deployment."^^rdfs:Literal ;
                                              :Solution "Inter-Family Communication provides a design solution to enable smart contracts to communicate with one another, even in the case where the smart contracts are written in different programming languages."^^rdfs:Literal ;
                                              rdfs:label "Inter-family communication (Owens, 2019)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#InterFamilyCommunicationV
:InterFamilyCommunicationV rdf:type owl:NamedIndividual ,
                                    :InterFamilyCommunication ,
                                    :Variant ;
                           :hasProposal :InterFamilyCommunicationOwens2019Interfamily ;
                           rdfs:label "Inter-family communication" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#InternalFunctionCallsMarchesi2020Design
:InternalFunctionCallsMarchesi2020Design rdf:type owl:NamedIndividual ,
                                                  :Ethereum ,
                                                  :General ,
                                                  :Proposal ,
                                                  :Solidity ;
                                         :hasPaper :Marchesi2020Design ;
                                         :hasVariant :InternalFunctionCallsV ;
                                         :ContextAndProblem "Calling public functions is more expensive than calling internal functions, because in the former case all the parameters are copied into Memory."^^rdfs:Literal ;
                                         :Solution "Whenever possible, prefer internal function calls, where the parameters are passed as references."^^rdfs:Literal ;
                                         rdfs:label "Internal function calls (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#InternalFunctionCallsV
:InternalFunctionCallsV rdf:type owl:NamedIndividual ,
                                 :InternalFunctionCalls ,
                                 :Variant ;
                        :hasProposal :InternalFunctionCallsMarchesi2020Design ;
                        rdfs:label "Internal function calls" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#JudgeV
:JudgeV rdf:type owl:NamedIndividual ,
                 :Oracle ,
                 :Variant ;
        :hasProposal :JudgeWorley2019Opportunities ;
        rdfs:label "Judge" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#JudgeWorley2019Opportunities
:JudgeWorley2019Opportunities rdf:type owl:NamedIndividual ,
                                       :General ,
                                       :Proposal ,
                                       :SmartContractEnabledBlockchains ,
                                       :Unspecified ;
                              :hasPaper :Worley2019Opportunities ;
                              :hasVariant :JudgeV ;
                              :requires :AuthorizationWorley2019Opportunities ;
                              :variantOf :OracleBartoletti2017An ;
                              :ContextAndProblem "Multiple parties are participating in a contract that is dependent on real-world data."^^rdfs:Literal ;
                              :Solution "All parties identify a third-party actor that they all trust. This entity is given Authorization to update the contract with real-world state."^^rdfs:Literal ;
                              rdfs:label "Judge (Worley, 2019)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#KeyShardingLiu2020Design
:KeyShardingLiu2020Design rdf:type owl:NamedIndividual ,
                                   :AllBlockchains ,
                                   :IdentityManagement ,
                                   :Proposal ,
                                   :Unspecified ;
                          :hasPaper :Liu2020Design ;
                          :hasVariant :KeyShardingV ;
                          :relatedTo :DelegateListLiu2020Design ;
                          :requires :HotColdWalletStorageLiu2020Design ;
                          :ApplicationExample "Crypto++ (https://cryptopp.com)"^^rdfs:Literal ,
                                              "Parity (https://www.parity.io)"^^rdfs:Literal ;
                          :ContextAndProblem "In self-sovereign identity, a participant may have multiple keys, for instance, signing key for transaction authorisation, public/private key pair for encryption/decryption, etc. Consequently, key management is significant to the users, especially credential issuers and holders. A user may lose or forget his/her secret keys under some circumstances, e.g. the device containing the keys is lost or broken. Losing the keys denotes that the owner could lose control over its blockchain accounts in self-sovereign identity and the related identities."^^rdfs:Literal ;
                          :Solution "To protect the security of a secret key, one can spilt that key into several pieces as its requirement, and define a regrouping threshold. The key pieces can be kept in any way the user prefers, e.g., wrote on a paper and locked in a safe box, given to family and friends, etc. When a key is lost, the user needs to regain enough key pieces (more than the preset regrouping threshold), and these pieces can help rebuild the complete key."^^rdfs:Literal ;
                          rdfs:label "Key Sharding (Liu, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#KeyShardingV
:KeyShardingV rdf:type owl:NamedIndividual ,
                       :KeySharding ,
                       :Variant ;
              :hasProposal :KeyShardingLiu2020Design ;
              rdfs:label "Key Sharding" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#KeyValueStoreV
:KeyValueStoreV rdf:type owl:NamedIndividual ,
                         :KeyValueStore ,
                         :Variant ;
                :hasProposal :KeyValueStoreWorley2019Opportunities ;
                rdfs:label "Key-value store" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#KeyValueStoreWorley2019Opportunities
:KeyValueStoreWorley2019Opportunities rdf:type owl:NamedIndividual ,
                                               :General ,
                                               :Proposal ,
                                               :SmartContractEnabledBlockchains ,
                                               :Unspecified ;
                                      :hasPaper :Worley2019Opportunities ;
                                      :hasVariant :KeyValueStoreV ;
                                      :ApplicationExample "Ethereum Name Service (ENS) (https://ens.domains/fr/)"^^rdfs:Literal ;
                                      :ContextAndProblem "Many smart contracts store nontrivial amounts of data. A common use case is a contract that serves a registry, storing data in a manner that takes advantage of the blockchain’s censorship-resistant and DDoS-resistant nature.  How can this data be stored and retrieved effectively?"^^rdfs:Literal ;
                                      :Solution "A key-value store is well-suited to blockchain data management, where the store is dynamically resizable and provides a value given a specific key."^^rdfs:Literal ;
                                      rdfs:label "Key-value store (Worley, 2019)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LegalAndSmartContractPairV
:LegalAndSmartContractPairV rdf:type owl:NamedIndividual ,
                                     :LegalAndSmartContractPair ,
                                     :Variant ;
                            :hasProposal :LegalAndSmartContractPairXu2018A ;
                            rdfs:label "Legal and smart-contract pair" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LegalAndSmartContractPairXu2018A
:LegalAndSmartContractPairXu2018A rdf:type owl:NamedIndividual ,
                                           :General ,
                                           :Proposal ,
                                           :SmartContractEnabledBlockchains ,
                                           :Unspecified ;
                                  :hasPaper :Xu2018A ;
                                  :hasVariant :LegalAndSmartContractPairV ;
                                  :variantOf :LegalAndSmartContractPairV ;
                                  :ApplicationExample "Accord Project (https://www.accordproject.org)"^^rdfs:Literal ,
                                                      "Corda Smart Contract Template from Barclays"^^rdfs:Literal ,
                                                      "Florian Idelberger, Guido Governatori, Régis Riveret, and Giovanni Sartor. 2016. Evaluation of Logic-Based Smart Contracts for Blockchain Systems. In Rule Technologies. Research, Tools, and Applications. Springer, Stony Brook, NY, USA, 167–183."^^rdfs:Literal ,
                                                      "OpenLaw (http://openlaw.io)"^^rdfs:Literal ,
                                                      "Project DnA (https://github.com/KingandWoodMallesonsAU/Project-DnA)"^^rdfs:Literal ;
                                  :ContextAndProblem "The legal industry is becoming digitized, for example, using digital signatures has become a valid way to sign legal agreements. The Ricardian contract [8] was developed in the mid 1990s to interpret legal contracts digitally without losing the value of the legal prose. Digital legal agreements need to be executed and enforced. An independent trustworthy execution platform trusted by all the involved participants is needed to execute the digital legal agreement. How to bind a legal agreement to the corresponding smart contract on a trusted execution environment to ensure a 1-to-1 mapping?"^^rdfs:Literal ;
                                  :Solution "Blockchain can be an ideal trusted platform to run digital legal agreements, which are bound with corresponding on-chain smart contracts. The smart contract implements conditions defined in the legal agreement. When deployed, there is a variable to store the hash value of the legal agreement, but is initially a blank value. The address of the smart contract is included in the legal agreement, and then the hash of the legal agreement is calculated and added to the contract variable. By binding a physical agreement with a smart contract, the bridge between the off-chain physical agreement and the on-chain smart contract is established. The two directional binding makes sure that the legal agreement and smart contract have"^^rdfs:Literal ;
                                  rdfs:label "Legal and smart-contract pair (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Lemieux2017A
:Lemieux2017A rdf:type owl:NamedIndividual ,
                       :Paper ;
              :hasIdentifier :Identifier25 ;
              :proposes :DigitalRecordLemieux2017A ,
                        :MirrorLemieux2017A ,
                        :TokenizedLemieux2017A ;
              :Authors "Lemieux, Victoria L."^^rdfs:Literal ;
              :Identifier "10.1109/BigData.2017.8258180"^^rdfs:Literal ;
              :IdentifierType "DOI"^^rdfs:Literal ;
              :Journal "Proceedings 2017 IEEE International Conference on Big Data, Big Data 2017"^^rdfs:Literal ;
              :Pages "2271--2278"^^rdfs:Literal ;
              :Title "A typology of blockchain recordkeeping solutions and some reflections on their implications for the future of archival preservation"^^rdfs:Literal ;
              :Volume "2018-January"^^rdfs:Literal ;
              :Year "2017"^^rdfs:Literal ;
              rdfs:label "A typology of blockchain recordkeeping solutions and some reflections on their implications for the future of archival preservation" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LimitExternalCallsMarchesi2020Design
:LimitExternalCallsMarchesi2020Design rdf:type owl:NamedIndividual ,
                                               :Ethereum ,
                                               :General ,
                                               :Proposal ,
                                               :Solidity ;
                                      :hasPaper :Marchesi2020Design ;
                                      :hasVariant :LimitExternalCallsV ;
                                      :ContextAndProblem "Every call to an external SC is rather expensive, and even potentially unsafe."^^rdfs:Literal ;
                                      :Solution "Limit external calls. In Solidity, differently from other programming languages, it is better to call a single, multi-purpose function with many parameters and get back the requested results, rather than making different calls for each data."^^rdfs:Literal ;
                                      rdfs:label "Limit external calls (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LimitExternalCallsV
:LimitExternalCallsV rdf:type owl:NamedIndividual ,
                              :LimitExternalCalls ,
                              :Variant ;
                     :hasProposal :LimitExternalCallsMarchesi2020Design ;
                     rdfs:label "Limit external calls" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LimitModifiersMarchesi2020Design
:LimitModifiersMarchesi2020Design rdf:type owl:NamedIndividual ,
                                           :Ethereum ,
                                           :General ,
                                           :Proposal ,
                                           :Solidity ;
                                  :hasPaper :Marchesi2020Design ;
                                  :hasVariant :LimitModifiersV ;
                                  :ContextAndProblem "The code of modifiers is inlined inside the modified function, thus adding up size and costing gas."^^rdfs:Literal ;
                                  :Solution "Limit the modifiers. Internal functions are not inlined, but called as separate functions. They are slightly more expensive at run time, but save a lot of redundant bytecode in deployment, if used more than once."^^rdfs:Literal ;
                                  rdfs:label "Limit modifiers (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LimitModifiersV
:LimitModifiersV rdf:type owl:NamedIndividual ,
                          :LimitModifiers ,
                          :Variant ;
                 :hasProposal :LimitModifiersMarchesi2020Design ;
                 rdfs:label "Limit modifiers" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LimitStorageMarchesi2020Design
:LimitStorageMarchesi2020Design rdf:type owl:NamedIndividual ,
                                         :Ethereum ,
                                         :General ,
                                         :Proposal ,
                                         :Solidity ;
                                :hasPaper :Marchesi2020Design ;
                                :hasVariant :LimitStorageV ;
                                :ContextAndProblem "Storage is by far the most expensive kind of memory, so its usage should be minimized."^^rdfs:Literal ;
                                :Solution "Limit data stored in the blockchain, always use memory for non-permanent data. Also, limit changes in storage: when executing functions, save the intermediate results in memory or stack and update the storage only at the end of all computations."^^rdfs:Literal ;
                                rdfs:label "Limit storage (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LimitStorageV
:LimitStorageV rdf:type owl:NamedIndividual ,
                        :LimitStorage ,
                        :Variant ;
               :hasProposal :LimitStorageMarchesi2020Design ;
               rdfs:label "Limit storage" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Liu2018Applying
:Liu2018Applying rdf:type owl:NamedIndividual ,
                          :Paper ;
                 :hasIdentifier :Identifier37 ;
                 :proposes :ContractComposerLiu2018Applying ,
                           :ContractDecoratorLiu2018Applying ,
                           :ContractFacadeLiu2018Applying ,
                           :ContractFactoryLiu2018Applying ,
                           :ContractMediatorLiu2018Applying ,
                           :ContractObserverLiu2018Applying ,
                           :HashSecretLiu2018Applying ,
                           :MultiSignatureLiu2018Applying ;
                 :Authors "Liu, Yue and Lu, Qinghua and Xu, Xiwei and Zhu, Liming and Yao, Haonan"^^rdfs:Literal ;
                 :Identifier "10.1007/978-3-319-94478-4_7"^^rdfs:Literal ;
                 :IdentifierType "DOI"^^rdfs:Literal ;
                 :Journal "Blockchain -- ICBC 2018"^^rdfs:Literal ;
                 :Title "Applying design patterns in smart contracts"^^rdfs:Literal ;
                 :Year "2018"^^rdfs:Literal ;
                 rdfs:label "Applying design patterns in smart contracts" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Liu2020Design
:Liu2020Design rdf:type owl:NamedIndividual ,
                        :Paper ;
               :hasIdentifier :Identifier14 ;
               :proposes :AnchoringToBlockchainLiu2020Design ,
                         :BoundWithSocialMediaLiu2020Design ,
                         :DelegateListLiu2020Design ,
                         :DualResolutionLiu2020Design ,
                         :HotColdWalletStorageLiu2020Design ,
                         :IdentifierRegistryLiu2020Design ,
                         :KeyShardingLiu2020Design ,
                         :MasterSubKeyLiu2020Design ,
                         :MultipleRegistrationLiu2020Design ,
                         :OneOffAccessLiu2020Design ,
                         :SelectiveContentGenerationLiu2020Design ,
                         :TimeConstrainedAccessLiu2020Design ;
               :Authors "Liu, Yue and Lu, Qinghua and Paik, Hye-Young and Xu, Xiwei"^^rdfs:Literal ;
               :Identifier "10.1145/3424771.3424802"^^rdfs:Literal ;
               :IdentifierType "DOI"^^rdfs:Literal ;
               :Title "Design Patterns for Blockchain-Based Self-Sovereign Identity"^^rdfs:Literal ;
               :Year "2020"^^rdfs:Literal ;
               rdfs:label "Design Patterns for Blockchain-Based Self-Sovereign Identity" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LowContractFootprintEberhardt2017On
:LowContractFootprintEberhardt2017On rdf:type owl:NamedIndividual ,
                                              :General ,
                                              :Proposal ,
                                              :SmartContractEnabledBlockchains ,
                                              :Unspecified ;
                                     :hasPaper :Eberhardt2017On ;
                                     :hasVariant :LowContractFootprintV ;
                                     :ContextAndProblem "Changing a smart contract’s state requires an on-chain transaction. To incentivize the processing of a transaction by the network, a fee has to be paid. This fee depends on the complexity of the smart contract function called as well as its use of storage."^^rdfs:Literal ;
                                     :Solution "To optimize fees, contracts should be designed in a way that minimizes the number and size of on-chain transactions. The following two techniques can be used to reduce the footprint. – Do not check conditions on-chain after a state change. Let nodes perform the condition check locally and trigger an on-chain check in case of success. – Optimize for writes, not reads. Reading from a smart contracts is a local off-chain operation and does not require an on-chain transaction. Minimize writes and store information free of redundancy. Compute derived data locally during reads."^^rdfs:Literal ;
                                     rdfs:label "Low Contract Footprint (Eberhardt, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#LowContractFootprintV
:LowContractFootprintV rdf:type owl:NamedIndividual ,
                                :LowContractFootprint ,
                                :Variant ;
                       :hasProposal :LowContractFootprintEberhardt2017On ;
                       rdfs:label "Low Contract Footprint" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MappingVsArrayMarchesi2020Design
:MappingVsArrayMarchesi2020Design rdf:type owl:NamedIndividual ,
                                           :Ethereum ,
                                           :General ,
                                           :Proposal ,
                                           :Solidity ;
                                  :hasPaper :Marchesi2020Design ;
                                  :hasVariant :MappingVsArrayV ;
                                  :ContextAndProblem "Solidity provides only two data types to represents list of data: arrays and maps. Mappings are cheaper, while arrays are packable and iterable."^^rdfs:Literal ;
                                  :Solution "In order to save gas, it is recommended to use mappings to manage lists of data, unless there is a need to iterate or it is possible to pack data types. This is useful both for Storage and Memory. You can manage an ordered list with a mapping using an integer index as a key."^^rdfs:Literal ;
                                  rdfs:label "Mapping vs Array (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MappingVsArrayV
:MappingVsArrayV rdf:type owl:NamedIndividual ,
                          :MappingVsArray ,
                          :Variant ;
                 :hasProposal :MappingVsArrayMarchesi2020Design ;
                 rdfs:label "Mapping vs Array" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Marchesi2020Design
:Marchesi2020Design rdf:type owl:NamedIndividual ,
                             :Paper ;
                    :hasIdentifier :Identifier20 ;
                    :proposes :AvoidRedundantOperationsMarchesi2020Design ,
                              :DataContractMarchesi2020Design ,
                              :DefaultValueMarchesi2020Design ,
                              :EventLogMarchesi2020Design ,
                              :ExplicitelyMarkExternalFunctionMarchesi2020Design ,
                              :FewerFunctionsMarchesi2020Design ,
                              :FixedSizeMarchesi2020Design ,
                              :FreeingStorageMarchesi2020Design ,
                              :InternalFunctionCallsMarchesi2020Design ,
                              :LimitExternalCallsMarchesi2020Design ,
                              :LimitModifiersMarchesi2020Design ,
                              :LimitStorageMarchesi2020Design ,
                              :MappingVsArrayMarchesi2020Design ,
                              :MinimizeOnChainDataMarchesi2020Design ,
                              :OptimizerMarchesi2020Design ,
                              :PackingBooleansMarchesi2020Design ,
                              :PackingVariablesMarchesi2020Design ,
                              :ProxyMarchesi2020Design ,
                              :ShortCircuitMarchesi2020Design ,
                              :ShortConstantStringsMarchesi2020Design ,
                              :SingleLineSwapMarchesi2020Design ,
                              :UintVsUint256Marchesi2020Design ,
                              :UseLibrariesMarchesi2020Design ,
                              :WriteValuesMarchesi2020Design ;
                    :Authors "Marchesi, Lodovica and Marchesi, Michele and Destefanis, Giuseppe and Barabino, Giulio and Tigano, Danilo"^^rdfs:Literal ;
                    :Identifier "10.1109/IWBOSE50093.2020.9050163"^^rdfs:Literal ;
                    :IdentifierType "DOI"^^rdfs:Literal ;
                    :Journal "IWBOSE 2020 Proceedings of the 2020 IEEE 3rd International Workshop on Blockchain Oriented Software Engineering"^^rdfs:Literal ;
                    :Pages "9--15"^^rdfs:Literal ;
                    :Title "Design Patterns for Gas Optimization in Ethereum"^^rdfs:Literal ;
                    :Year "2020"^^rdfs:Literal ;
                    rdfs:label "Design Patterns for Gas Optimization in Ethereum" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MasterSubKeyLiu2020Design
:MasterSubKeyLiu2020Design rdf:type owl:NamedIndividual ,
                                    :AllBlockchains ,
                                    :IdentityManagement ,
                                    :Proposal ,
                                    :Unspecified ;
                           :benefitsFrom :KeyShardingLiu2020Design ;
                           :hasPaper :Liu2020Design ;
                           :hasVariant :MasterSubKeyV ;
                           :requires :HotColdWalletStorageLiu2020Design ;
                           :ApplicationExample "Ethereum ERC 725 standard (https://github.com/ethereum/EIPs/issues/725)"^^rdfs:Literal ,
                                               "Trinity on IOTA (https://trinity.iota.org)"^^rdfs:Literal ,
                                               "uPort (https://www.uport.me)"^^rdfs:Literal ;
                           :ContextAndProblem "Public key cryptography and digital signatures are used to identify accounts and authorise transactions submitted to a blockchain. Using a single key for all transactions has serious privacy implication for an identity owner since transactions can be correlated to expose all the identities an entity holds."^^rdfs:Literal ;
                           :Solution "Each entity can have a master-key to manage subkeys which are used for signing messages under different identities. For example, a person can have a sub-key for the student identity and another sub-key for the company intern identity. Each sub-key is linked to a unique identifier and stored as part of the identifier’s data in the identifier registry, which can be updated using the master-key. The use of masterkey must be minimised (i.e., only used for controlling subkeys) due to its importance."^^rdfs:Literal ;
                           rdfs:label "Master & Sub Key (Liu, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MasterSubKeyV
:MasterSubKeyV rdf:type owl:NamedIndividual ,
                        :MasterSubKey ,
                        :Variant ;
               :benefitsFrom :KeyShardingV ;
               :hasProposal :MasterSubKeyLiu2020Design ;
               rdfs:label "Master & Sub Key" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MathBartoletti2017An
:MathBartoletti2017An rdf:type owl:NamedIndividual ,
                               :Ethereum ,
                               :General ,
                               :Proposal ,
                               :Solidity ;
                      :hasPaper :Bartoletti2017An ;
                      :hasVariant :MathV ;
                      :ApplicationExample "Badge contract (https://etherscan.io/address/0x54bda709fed875224eae569bb6817d96ef7ed9ad#code)"^^rdfs:Literal ;
                      :ContextAndProblem ""^^rdfs:Literal ;
                      :Solution "Contracts using this pattern encode the logic which guards the execution of some critical operations. For instance, Badge implements a method named subtractSafely to avoid subtracting a value from a balance when there are not enough funds in an account"^^rdfs:Literal ;
                      rdfs:label "Math (Bartoletti, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MathV
:MathV rdf:type owl:NamedIndividual ,
                :Math ,
                :Variant ;
       :hasProposal :MathBartoletti2017An ;
       rdfs:label "Math" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MigrationV
:MigrationV rdf:type owl:NamedIndividual ,
                     :Migration ,
                     :Variant ;
            :hasProposal :MigrationWorley2019Opportunities ;
            rdfs:label "Migration" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MigrationWorley2019Opportunities
:MigrationWorley2019Opportunities rdf:type owl:NamedIndividual ,
                                           :General ,
                                           :Proposal ,
                                           :SmartContractEnabledBlockchains ,
                                           :Unspecified ;
                                  :hasPaper :Worley2019Opportunities ;
                                  :hasVariant :MigrationV ;
                                  :ApplicationExample "Truffle framework (https://www.trufflesuite.com/)"^^rdfs:Literal ;
                                  :ContextAndProblem "A contract has a defined lifespan, passing through multiple stages related to its development or obsolescence."^^rdfs:Literal ;
                                  :Solution "Create a special Migration contract that serves as a pointer to the current version of the contract. When the contract is upgraded, the Migration contract is updated with a pointer to the latest version."^^rdfs:Literal ;
                                  rdfs:label "Migration (Worley, 2019)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MinimizeOnChainDataMarchesi2020Design
:MinimizeOnChainDataMarchesi2020Design rdf:type owl:NamedIndividual ,
                                                :Ethereum ,
                                                :General ,
                                                :Proposal ,
                                                :Solidity ;
                                       :hasPaper :Marchesi2020Design ;
                                       :hasVariant :MinimizeOnChainDataV ;
                                       :ContextAndProblem "The gas costs of Storage are very high, and much higher than the cost of Memory."^^rdfs:Literal ;
                                       :Solution "Minimize on-chain data. The less data you put on-chain in Storage variables, the less your gas costs. Store on-chain only critical data for the SC and keep all possible data off-chain."^^rdfs:Literal ;
                                       rdfs:label "Minimize on-chain data (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MinimizeOnChainDataV
:MinimizeOnChainDataV rdf:type owl:NamedIndividual ,
                               :MinimizeOnChainData ,
                               :Variant ;
                      :hasProposal :MinimizeOnChainDataMarchesi2020Design ;
                      rdfs:label "Minimize on-chain data" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MirrorLemieux2017A
:MirrorLemieux2017A rdf:type owl:NamedIndividual ,
                             :AllBlockchains ,
                             :General ,
                             :Proposal ,
                             :Unspecified ;
                    :hasPaper :Lemieux2017A ;
                    :hasVariant :OffChainDataStorageV ;
                    :ApplicationExample "Government of Estonia e-health solution"^^rdfs:Literal ;
                    :ContextAndProblem "Many current and proposed applications of blockchain technology aim to address recordkeeping challenges, such as more efficient and secure processing of land title transfers, greater patient control over their sensitive health information, and more efficient recording of financial payments and settlements. All of the blockchain systems offer a new form of records generation use, storage and/or control."^^rdfs:Literal ;
                    :Solution "The “mirror” system, the blockchain serves as a repository of “digital fingerprints”, or hashes, of the records. The original records, which may be born paper or digital, but now exist in digital form, are hashed. This produces a sort of digital fingerprint of the record. These hashes are anchored into the blockchain, with the blockchain being used as a mirror of the records, reflecting back their hashes."^^rdfs:Literal ;
                    rdfs:label "Mirror (Lemieux, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Moreno2019BlockBD
:Moreno2019BlockBD rdf:type owl:NamedIndividual ,
                            :Paper ;
                   :hasIdentifier :Identifier17 ;
                   :proposes :BlockchainSecurityPatternForBigDataEcosystemsMoreno2019BlockBD ;
                   :Authors "Moreno, Julio and Fernandez, Eduardo B. and Fernandez-Medina, Eduardo and Serrano, Manuel A."^^rdfs:Literal ;
                   :Identifier "10.1145/3361149.3361166"^^rdfs:Literal ;
                   :IdentifierType "DOI"^^rdfs:Literal ;
                   :Title "BlockBD: A Security Pattern to Incorporate Blockchain in Big Data Ecosystems"^^rdfs:Literal ;
                   :Year "2019"^^rdfs:Literal ;
                   rdfs:label "BlockBD: A Security Pattern to Incorporate Blockchain in Big Data Ecosystems" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MortalV
:MortalV rdf:type owl:NamedIndividual ,
                  :Mortal ,
                  :Variant ;
         :hasProposal :MortalWöhrer2018Design ;
         rdfs:label "Mortal" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MortalWöhrer2018Design
:MortalWöhrer2018Design rdf:type owl:NamedIndividual ,
                                 :Ethereum ,
                                 :General ,
                                 :Proposal ,
                                 :Solidity ;
                        :hasPaper :Wöhrer2018Design ;
                        :hasVariant :MortalV ;
                        :ApplicationExample "GTA Token"^^rdfs:Literal ;
                        :ContextAndProblem "A contract is defined by its creator, but the execution, and subsequently the services it offers are provided by the Ethereum network itself. Thus, a contract will exist and be executable as long as the whole network exists, and will only disappear if it was programmed to self destruct."^^rdfs:Literal ;
                        :Solution "Use a selfdestruct call within a method that does a preliminary authorization check of the invoking party."^^rdfs:Literal ;
                        rdfs:label "Mortal (Wöhrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MultiSignatureLiu2018Applying
:MultiSignatureLiu2018Applying rdf:type owl:NamedIndividual ,
                                        :General ,
                                        :Proposal ,
                                        :SmartContractEnabledBlockchains ,
                                        :Unspecified ;
                               :hasPaper :Liu2018Applying ;
                               :hasVariant :MultipleAuthorizationV ;
                               :ContextAndProblem "There are multiple authorities in a blockchain network."^^rdfs:Literal ;
                               :Solution "This pattern can provide a flexible way to achieve better cooperation. A transaction is valid only when there are enough signatures from the authorities. In addition, this pattern can also be considered as an individual safeguard mechanism as the current blockchain technology does not provide a way to recover the lost private key."^^rdfs:Literal ;
                               rdfs:label "Multi-signature (Liu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MultipleAuthorizationV
:MultipleAuthorizationV rdf:type owl:NamedIndividual ,
                                 :MultipleAuthorization ,
                                 :Variant ;
                        :benefitsFrom :OffChainSecretEnabledDynamicAuthenticationV ;
                        :hasProposal :MultiSignatureLiu2018Applying ,
                                     :MultipleAuthorizationXu2018A ;
                        rdfs:label "Multiple authorization" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MultipleAuthorizationXu2018A
:MultipleAuthorizationXu2018A rdf:type owl:NamedIndividual ,
                                       :General ,
                                       :Proposal ,
                                       :SmartContractEnabledBlockchains ,
                                       :Unspecified ;
                              :benefitsFrom :OffChainSecretEnabledDynamicAuthenticationXu2018A ;
                              :hasPaper :Xu2018A ;
                              :hasVariant :MultipleAuthorizationV ;
                              :relatedTo :IdentifierRegistryV ;
                              :variantOf :MultipleAuthorizationV ;
                              :ApplicationExample "Bitcoin MultiSignature mechanism (https://en.bitcoin.it/Multisignature)"^^rdfs:Literal ,
                                                  "Solidity MultiSignature wallet through Mist (https://github.com/ethereum/mist)"^^rdfs:Literal ;
                              :ContextAndProblem "In blockchain-based applications, activities might need to be authorized by multiple blockchain addresses. For example, a monetary transaction may require authorization from multiple blockchain addresses. The actual addresses that authorize an activity might not be able to be decided due to the availability of the authorities."^^rdfs:Literal ;
                              :Solution "It would enable more dynamism if the set of blockchain addresses for authorization are not decided before the corresponding transaction being submited into the blockchain network, or the corresponding smart contract being deployed on blockchain. On the Bitcoin blockchain, a multi-signature mechanism can be used to require more than one private key to authorize a Bitcoin transaction. In Ethereum, smart contract can mimic multi-signature mechanism. More flexibly, an M-of-N multi-signature can be used to define that M out of N private keys are required to authorize the transaction. M is the threshold of authorization. This on-chain mechanism enables more flexible binding of authorities."^^rdfs:Literal ;
                              rdfs:label "Multiple authorization (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MultipleRegistrationLiu2020Design
:MultipleRegistrationLiu2020Design rdf:type owl:NamedIndividual ,
                                            :IdentityManagement ,
                                            :Proposal ,
                                            :SmartContractEnabledBlockchains ,
                                            :Unspecified ;
                                   :hasPaper :Liu2020Design ;
                                   :hasVariant :MultipleRegistrationV ;
                                   :requires :IdentifierRegistryLiu2020Design ,
                                             :MasterSubKeyLiu2020Design ;
                                   :ApplicationExample "Blockstack (https://blockstack.org)"^^rdfs:Literal ,
                                                       "DAML (https://daml.com)"^^rdfs:Literal ,
                                                       "Sovrin (https://sovrin.org)"^^rdfs:Literal ;
                                   :ContextAndProblem "An identifier is used to uniquely identify an entity and to retrieve the identity attribute data. Sending all transactions using a single identifier has serious privacy implication for an entity since these transactions can be correlated to expose all the identities this entity holds."^^rdfs:Literal ;
                                   :Solution "Each entity can establish a unique identifier for every relationship (i.e. every identity) they have, which allows keeping interactions with one entity entirely separate from any other entity. For example, the relationship a person builds with a hospital is completely separate to the one that is established with a university. Neither the hospital nor the university could proactively use the identifiers to correlate this person’s activities."^^rdfs:Literal ;
                                   rdfs:label "Multiple Registration (Liu, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MultipleRegistrationV
:MultipleRegistrationV rdf:type owl:NamedIndividual ,
                                :MultipleRegistration ,
                                :Variant ;
                       :hasProposal :MultipleRegistrationLiu2020Design ;
                       rdfs:label "Multiple Registration" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MutexRajasekar2020Emerging
:MutexRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                     :General ,
                                     :Proposal ,
                                     :SmartContractEnabledBlockchains ,
                                     :Unspecified ;
                            :createdFrom :MutexWohrer2018Smart ;
                            :hasPaper :Rajasekar2020Emerging ;
                            :hasVariant :MutexV ;
                            :ContextAndProblem "Having a recursive call (or a callback) that modifies the state of the parent, before it has finished its execution, can cause serious issues as described several times above."^^rdfs:Literal ;
                            :Solution "This patern is similar to mutexes in traditional programming. It prevents a contract from executing code in its parent contract, until the parent has executed completely."^^rdfs:Literal ;
                            rdfs:label "Mutex (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MutexV
:MutexV rdf:type owl:NamedIndividual ,
                 :Mutex ,
                 :Variant ;
        :hasProposal :MutexRajasekar2020Emerging ,
                     :MutexWohrer2018Smart ;
        rdfs:label "Mutex" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#MutexWohrer2018Smart
:MutexWohrer2018Smart rdf:type owl:NamedIndividual ,
                               :Ethereum ,
                               :General ,
                               :Proposal ,
                               :Solidity ;
                      :hasPaper :Wohrer2018Smart ;
                      :hasVariant :MutexV ;
                      :ContextAndProblem "Re-entrancy attacks can manipulate the state of a contract and hijack the control flow."^^rdfs:Literal ;
                      :Solution "Utilize a mutex to hinder an external call from re-entering its caller function again."^^rdfs:Literal ;
                      rdfs:label "Mutex (Wohrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Mühlberger2020Foundational
:Mühlberger2020Foundational rdf:type owl:NamedIndividual ,
                                     :Paper ;
                            :hasIdentifier :Identifier39 ;
                            :proposes :PullBasedInboundOracleMühlberger2020Foundational ,
                                      :PullBasedOutboundOracleMühlberger2020Foundational ,
                                      :PushBasedInboundOracleMühlberger2020Foundational ,
                                      :PushBasedOutboundOracleMühlberger2020Foundational ;
                            :Authors "Mühlberger, Roman and Bachhofner, Stefan and Ferrer, Eduardo Castelló and Ciccio, Claudio Di and Weber, Ingo and Wöhrer, Maximilian and Zdun, Uwe"^^rdfs:Literal ;
                            :Identifier "10.1007/978-3-030-58779-6_3"^^rdfs:Literal ;
                            :IdentifierType "DOI"^^rdfs:Literal ;
                            :Journal "Business Process Management: Blockchain and Robotic Process Automation Forum"^^rdfs:Literal ;
                            :Title "Foundational Oracle Patterns: Connecting Blockchain to the Off-Chain World"^^rdfs:Literal ;
                            :Year "2020"^^rdfs:Literal ;
                            rdfs:label "Foundational Oracle Patterns: Connecting Blockchain to the Off-Chain World" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Müller2020Silver
:Müller2020Silver rdf:type owl:NamedIndividual ,
                           :Paper ;
                  :hasIdentifier :Identifier2 ;
                  :proposes :BlockchainBasedReputationSystemMüller2020Silver ,
                            :BlockchainBpEngineMüller2020Silver ,
                            :DecentralizeBusinessProcessMüller2020Silver ,
                            :HashStorageMüller2020Silver ,
                            :SmartContractActivitiesMüller2020Silver ,
                            :TransparentEventLogMüller2020Silver ;
                  :Authors "Müller, Marcel and Ostern, Nadine and Rosemann, Michael"^^rdfs:Literal ;
                  :Identifier "10.1007/978-3-030-58779-6_1"^^rdfs:Literal ;
                  :IdentifierType "DOI"^^rdfs:Literal ;
                  :Journal "Lecture Notes in Business Information Processing"^^rdfs:Literal ;
                  :Pages "3--18"^^rdfs:Literal ;
                  :Title "Silver Bullet for All Trust Issues? Blockchain-Based Trust Patterns for Collaborative Business Processes"^^rdfs:Literal ;
                  :Volume "393 LNBIP"^^rdfs:Literal ;
                  :Year "2020"^^rdfs:Literal ;
                  rdfs:label "Silver Bullet for All Trust Issues? Blockchain-Based Trust Patterns for Collaborative Business Processes" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#NodeSyncBandara2020Patterns
:NodeSyncBandara2020Patterns rdf:type owl:NamedIndividual ,
                                      :AllBlockchains ,
                                      :General ,
                                      :Proposal ,
                                      :Unspecified ;
                             :benefitsFrom :SnapshottingBandara2020Patterns ,
                                           :StateAggregationBandara2020Patterns ;
                             :hasPaper :Bandara2020Patterns ;
                             :hasVariant :NodeSyncV ;
                             :ApplicationExample "B. Network, “Bithereum’s hard spoon snapshot is complete!,” Dec. 2018. https: //medium.com/bithereum-network/bithereums-hard-spoon-snapshot-is-complete-c1814024ea9a."^^rdfs:Literal ,
                                                 "V. Buterin, “A next-generation smart contract and decentralized application platform,” 2014. https://github.com/ethereum/wiki/wiki/White-Paper."^^rdfs:Literal ;
                             :ContextAndProblem "The nonprofit wants to add new nodes or swap nodes to change the physical location, improve performance, or create multiple instances of the source blockchain. A snapshot of the source blockchain is available. How to clone a blockchain node?"^^rdfs:Literal ;
                             :Solution "First, install the source blockchain platform’s client software (or an updated version that is backward compatible) on the new node. Also, configure the new node to connect to other members of the source blockchain. Second, enable the sync tool on the node to copy various data structures representing the global state, smart contracts, transactions, and blocks from other blockchain nodes. Next, the node should rebuild and validate all the transactions from the genesis to verify the global state. Any errors, such as failed data transfer, need to be resolved by requesting further data. Finally, reconfigure the node to accept new transactions."^^rdfs:Literal ;
                             rdfs:label "Node Sync (Bandara, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#NodeSyncV
:NodeSyncV rdf:type owl:NamedIndividual ,
                    :NodeSync ,
                    :Variant ;
           :benefitsFrom :SnapshottingV ,
                         :StateAggregationV ;
           :hasProposal :NodeSyncBandara2020Patterns ;
           rdfs:label "Node Sync" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OffChainContractRegistryRajasekar2020Emerging
:OffChainContractRegistryRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                                        :General ,
                                                        :Proposal ,
                                                        :SmartContractEnabledBlockchains ,
                                                        :Unspecified ;
                                               :createdFrom :ContractRegisterWöhrer2018Design ,
                                                            :ContractRegistryXu2018A ;
                                               :hasPaper :Rajasekar2020Emerging ;
                                               :hasVariant :OffChainContractRegistryV ;
                                               :relatedTo :ProxyContractRajasekar2020Emerging ;
                                               :ContextAndProblem "Code on a smart contract may need to be modified or updated to deal with bugs and changing requirements."^^rdfs:Literal ;
                                               :Solution "Every contract and its address are stored off-chain as key-value pairs. This mapping is mutable since it is off-chain, which means that the address of a contract can be updated in the registry. Since calls to any contract will now go through the registry, this leaves all dependencies intact."^^rdfs:Literal ;
                                               rdfs:label "(Off-chain) Contract Registry (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OffChainContractRegistryV
:OffChainContractRegistryV rdf:type owl:NamedIndividual ,
                                    :OffChainContractRegistry ,
                                    :Variant ;
                           :hasProposal :OffChainContractRegistryRajasekar2020Emerging ;
                           rdfs:label "(Off-chain) Contract Registry" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OffChainDataStorageV
:OffChainDataStorageV rdf:type owl:NamedIndividual ,
                               :OffChainDataStorage ,
                               :Variant ;
                      :hasProposal :AnchoringToBlockchainLiu2020Design ,
                                   :ContentAddressableStorageEberhardt2017On ,
                                   :HashStorageMüller2020Silver ,
                                   :MirrorLemieux2017A ,
                                   :OffChainDataStorageXu2018A ,
                                   :OffChainDatastoreRajasekar2020Emerging ;
                      rdfs:label "Off-chain data storage" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OffChainDataStorageXu2018A
:OffChainDataStorageXu2018A rdf:type owl:NamedIndividual ,
                                     :General ,
                                     :Proposal ,
                                     :SmartContractEnabledBlockchains ,
                                     :Unspecified ;
                            :hasPaper :Xu2018A ;
                            :hasVariant :OffChainDataStorageV ;
                            :relatedTo :ProxyZhang2017Applying ;
                            :ApplicationExample "Chainy (https://chainy.info)"^^rdfs:Literal ,
                                                "Proof-of-Existence (https://poex.io)"^^rdfs:Literal ;
                            :ContextAndProblem "Some applications consider using the blockchain to guarantee the integrity of large amounts of data. The blockchain, due to its full replication across all participants of the blockchain network, has limited storage capacity. Storing large amounts of data within a transaction may be impossible due to the limited size of the blocks of the blockchain (for example, Ethereum has a block gas limit to determine the number, computational complexity, and data size ofthe transactions included in the block). Data cannot take advantage of the immutability or integrity guarantees without being stored on the blockchain. How to store data of arbitrary size and take advantage of the immutability and integrity guarantees provided by the blockchain?"^^rdfs:Literal ;
                            :Solution "The blockchain can be used as a general-purpose replicated database, as transactions logged in the blockchain can include arbitrary data on some blockchain platforms. For data of big size (essentially data that is bigger than its hash value), rather than storing the raw data directly on blockchain, a representation of the data with smaller size can be stored on blockchain with other small sized metadata about the data (e.g., a URI pointing to it). The solution is to store a hash value (also called digest) of the raw data on chain. The value is generated by a hash function which maps data of arbitrary size to data of fixed size. Hash function is a one-way function which is easy to compute, but hard to invert given the output of a random input. If even one bit of the data changes, its corresponding hash value would change as well. The hash value is used for ensuring the integrity of the raw data stored off-chain, and the transaction on blockchain that includes the hash value guarantees the integrity of the hash value as well as the original raw data from which the hash was derived."^^rdfs:Literal ;
                            rdfs:label "Off-chain data storage (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OffChainDatastoreRajasekar2020Emerging
:OffChainDatastoreRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                                 :AllBlockchains ,
                                                 :General ,
                                                 :Proposal ,
                                                 :Unspecified ;
                                        :createdFrom :Unknown ;
                                        :hasPaper :Rajasekar2020Emerging ;
                                        :hasVariant :OffChainDataStorageV ;
                                        :ContextAndProblem "Since the blockchain is a distributed store of data, many nodes in the network must store the entire blockchain, which becomes infeasible if too much data is stored in every block."^^rdfs:Literal ;
                                        :Solution "If the raw data to be stored on the blockchain takes too much memory, calculate a hash for the entire raw data and store this on the blockchain instead."^^rdfs:Literal ;
                                        rdfs:label "Off-chain Datastore (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OffChainSecretEnabledDynamicAuthenticationV
:OffChainSecretEnabledDynamicAuthenticationV rdf:type owl:NamedIndividual ,
                                                      :OffChainSecretEnabledDynamicAuthentication ,
                                                      :Variant ;
                                             :benefitsFrom :MultipleAuthorizationV ;
                                             :hasProposal :OffChainSecretEnabledDynamicAuthenticationXu2018A ;
                                             rdfs:label "Off-chain secret enabled dynamic authentication" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OffChainSecretEnabledDynamicAuthenticationXu2018A
:OffChainSecretEnabledDynamicAuthenticationXu2018A rdf:type owl:NamedIndividual ,
                                                            :General ,
                                                            :Proposal ,
                                                            :SmartContractEnabledBlockchains ,
                                                            :Unspecified ;
                                                   :benefitsFrom :MultipleAuthorizationXu2018A ;
                                                   :hasPaper :Xu2018A ;
                                                   :hasVariant :OffChainSecretEnabledDynamicAuthenticationV ;
                                                   :ApplicationExample "Bitcoin atomic cross-chain trading (https://en.bitcoin.it/wiki/Atomic_cross-chain_trading)"^^rdfs:Literal ,
                                                                       "Raiden network (https://raiden.network)"^^rdfs:Literal ;
                                                   :ContextAndProblem "In blockchain-based applications, some activities need to be authorized by one or more participants that are unknown when a first transaction is submitted to blockchain. Sometimes, the authority who can authorize a given activity is unknown when the corresponding smart contract is deployed, or the corresponding transaction is submitted to the blockchain. Blockchain uses digital signature for authentication and transaction authorization. Blockchain does not support dynamic binding with an address of a participant which is not defined in the respective transaction or smart contract. All accounts that can authorize a second transaction have to be defined in the first transaction before that transaction is added to the blockchain."^^rdfs:Literal ;
                                                   :Solution "An off-chain secret can be used to enable a dynamic authorization when the participant authorizing a transaction is unknown beforehand. In the context of payment, for example, a smart contract can be used as an escrow. When the sender deposits the money to an escrow smart contract, a hash of a secret (e.g. a random string, called pre-image) is submitted with the money as well. Whoever receives the secret off-chain can claim the money from the escrow smart contract by revealing the secret. With this solution, the receiver of the money does not need to be defined beforehand in the escrow contract. This can be generalized to any transaction that needs authorization from a dynamically bound participant. Note that since the secret is revealed, it cannot be reused. One variant is to lock multiple transactions with the same secret – by unlocking one, all of them are unlocked."^^rdfs:Literal ;
                                                   rdfs:label "Off-chain secret enabled dynamic authentication (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OffChainSignaturesEberhardt2017On
:OffChainSignaturesEberhardt2017On rdf:type owl:NamedIndividual ,
                                            :General ,
                                            :Proposal ,
                                            :SmartContractEnabledBlockchains ,
                                            :Unspecified ;
                                   :hasPaper :Eberhardt2017On ;
                                   :hasVariant :OffChainSignaturesV ;
                                   :ContextAndProblem "Two network participants know that they will perform a set of transactions in the future. They want to reduce the cost of these transactions or want to hide them from other network participants."^^rdfs:Literal ;
                                   :Solution "Together, the two participants specify a smart contract including a function, which applies an external state given as argument to the contract state. This function includes a signature check to ensure both participants agree with the state change. Only if valid signatures of both participants are supplied with a requested new state, the new state is applied. This contract is deployed to the blockchain and both participants optionally make a deposit. Then, the participants perform transactions purely off-chain and peer-topeer, without involving the blockchain: One participant computes a new state, wraps it in a transaction, signs it and sends it to his counterpart. The recipient then checks the new state, signs the transaction as well in case he agrees and sends it back to the sender. This transaction, signed by both parties, can now be sent to the smart contract by a participant at any point in time. After validating both signatures, the contract updates its state accordingly."^^rdfs:Literal ;
                                   rdfs:label "Off-chain Signatures (Eberhardt, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OffChainSignaturesV
:OffChainSignaturesV rdf:type owl:NamedIndividual ,
                              :OffChainSignatures ,
                              :Variant ;
                     :hasProposal :OffChainSignaturesEberhardt2017On ;
                     rdfs:label "Off-chain Signatures" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OneOffAccessLiu2020Design
:OneOffAccessLiu2020Design rdf:type owl:NamedIndividual ,
                                    :IdentityManagement ,
                                    :Proposal ,
                                    :SmartContractEnabledBlockchains ,
                                    :Unspecified ;
                           :benefitsFrom :SelectiveContentGenerationLiu2020Design ;
                           :hasPaper :Liu2020Design ;
                           :hasVariant :OneOffAccessV ;
                           :variantOf :OneOffAccessV ,
                                      :TimeConstrainedAccessLiu2020Design ;
                           :ApplicationExample "Snapchat (https://www.snapchat.com/)"^^rdfs:Literal ,
                                               "Snappass (https://oneoffsecret.com/)"^^rdfs:Literal ;
                           :ContextAndProblem "A verifier does not require a long-term effective credential but only needs to check the identity of a holder once for a specific purpose. Sometimes an identification process does not require a strict verification procedure, but only needs to check the identity for once. For instance, travelling by train/airplane or going to a theme park only asks for checking credentials before entering. If a holder presents a long-term effective link redirecting to the credential content, a malicious verifier may access the holder’s data illegally after identification process. This can be considered as an extreme version of Time-Constrained Access."^^rdfs:Literal ;
                           :Solution "A holder is able to generate an identifiable link, which redirects to a one-off page presenting the credential content. One-off links can be shared with verifiers on some special occasions. After being visited once, the link becomes invalid that no one can use it to access the credential content."^^rdfs:Literal ;
                           rdfs:label "One-Off Access (Liu, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OneOffAccessV
:OneOffAccessV rdf:type owl:NamedIndividual ,
                        :TimeConstrainedAccess ,
                        :Variant ;
               :benefitsFrom :SelectiveContentGenerationV ;
               :hasProposal :OneOffAccessLiu2020Design ;
               :variantOf :TimeConstrainedAccessV ;
               rdfs:label "One-Off Access" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OptimizerMarchesi2020Design
:OptimizerMarchesi2020Design rdf:type owl:NamedIndividual ,
                                      :Ethereum ,
                                      :General ,
                                      :Proposal ,
                                      :Solidity ;
                             :hasPaper :Marchesi2020Design ;
                             :hasVariant :OptimizerV ;
                             :ContextAndProblem "Optimizing Solidity code to save gas in exhaustive way is difficult."^^rdfs:Literal ;
                             :Solution "Always turn on the Solidity Optimizer. It is an option of all Solidity compilers, which performs all the optimizations that can be made by the compiler. However, it does not substitute the usage of the presented patterns, most of which need information that is not available to the compiler."^^rdfs:Literal ;
                             rdfs:label "Optimizer (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OptimizerV
:OptimizerV rdf:type owl:NamedIndividual ,
                     :Optimizer ,
                     :Variant ;
            :hasProposal :OptimizerMarchesi2020Design ;
            rdfs:label "Optimizer" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Oracle
:Oracle rdf:type owl:NamedIndividual .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OracleBartoletti2017An
:OracleBartoletti2017An rdf:type owl:NamedIndividual ,
                                 :Ethereum ,
                                 :General ,
                                 :Proposal ,
                                 :Solidity ;
                        :hasPaper :Bartoletti2017An ;
                        :hasVariant :OracleV ;
                        :requires :EmbeddedPermissionV ;
                        :variantOf :OracleV ;
                        :ApplicationExample "Oraclize (http://www.oraclize.it/)"^^rdfs:Literal ;
                        :ContextAndProblem "Some contracts may need to acquire data from outside the blockchain, e.g. from a website, to determine the winner of a bet. The Ethereum language does not allow contracts to query external sites: otherwise, the determinism of computations would be broken, as different nodes could receive different results for the same query"^^rdfs:Literal ;
                        :Solution "Oracles are the interface between contracts and the outside.Technically, they are just contracts, and as such their state can be updated by sending them transactions. In practice, instead of querying an external service, a contract queries an oracle; and when the external service needs to update its data, it sends a suitable transaction to the oracle."^^rdfs:Literal ;
                        rdfs:label "Oracle (Bartoletti, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OracleDataProviderWöhrer2018Design
:OracleDataProviderWöhrer2018Design rdf:type owl:NamedIndividual ,
                                             :Ethereum ,
                                             :General ,
                                             :Proposal ,
                                             :Solidity ;
                                    :hasPaper :Wöhrer2018Design ;
                                    :hasVariant :OracleV ;
                                    :ApplicationExample "Etheroll"^^rdfs:Literal ;
                                    :ContextAndProblem "Ethereum contracts run within their own ecosystem, where they communicate with each other, but external data can only enter the system through outside interaction via a transaction (by passing data to a method). This is a drawback, because many contract use cases depend on external knowledge outside the blockchain (e.g. price feeds)."^^rdfs:Literal ;
                                    :Solution "A solution to this problem is to utilize oracles with a connection to the outside world. The oracle service acts as a data carrier, where the interaction between an oracle service and a smart contract is asynchronous. First, a transaction invokes a function of a smart contract that contains an instruction to send a request to an oracle. Then, according to the parameters of such a request, the oracle will fetch a result and return it by executing a callback function placed in the primary contract."^^rdfs:Literal ;
                                    rdfs:label "Oracle (Data Provider) (Wöhrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OracleRajasekar2020Emerging
:OracleRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                      :General ,
                                      :Proposal ,
                                      :SmartContractEnabledBlockchains ,
                                      :Unspecified ;
                             :createdFrom :OracleDataProviderWöhrer2018Design ,
                                          :OracleXu2018A ,
                                          :PublisherSubscriberZhang2018Chapter ;
                             :hasPaper :Rajasekar2020Emerging ;
                             :hasVariant :OracleV ;
                             :relatedTo :DynamicBindingRajasekar2020Emerging ;
                             :ContextAndProblem "A contract or blockchain-based application may sometimes need to access information from the external world."^^rdfs:Literal ;
                             :Solution "The oracle pattern uses a third-party verifier to verify that information stored off-chain is valid, before it can be relayed to the blockchain."^^rdfs:Literal ;
                             rdfs:label "Oracle (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OracleV
:OracleV rdf:type owl:NamedIndividual ,
                  :Oracle ,
                  :Variant ;
         :hasProposal :OracleBartoletti2017An ,
                      :OracleDataProviderWöhrer2018Design ,
                      :OracleRajasekar2020Emerging ,
                      :OracleXu2018A ;
         rdfs:label "Oracle" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OracleXu2018A
:OracleXu2018A rdf:type owl:NamedIndividual ,
                        :General ,
                        :Proposal ,
                        :SmartContractEnabledBlockchains ,
                        :Unspecified ;
               :hasPaper :Xu2018A ;
               :hasVariant :OracleV ;
               :relatedTo :ReverseOracleXu2018A ;
               :requires :Unknown ;
               :ApplicationExample "Bitcoin Oracle (https://en.bitcoin.it/wiki/Contract#Example_4:_Using_external_state)"^^rdfs:Literal ,
                                   "Gnosis (https://gnosis.pm)"^^rdfs:Literal ,
                                   "Orisi (http://orisi.org)"^^rdfs:Literal ;
               :ContextAndProblem "From the software architecture perspective, blockchain can be viewed as a component or connector within a large software system [19]. In the case the blockchain is used as a distributed database for more general purposes other than financial services, the applications built on blockchain might need to interact with other external systems. Thus, the validation of transactions on blockchain might depend on states of external systems. The execution environment of a blockchain is self-contained. It can only access information present in the data and transactions on the blockchain. Smart contracts running on blockchain are pure functions by design. The state of external systems are not directly accessible to smart contracts. Yet, function calls in smart contracts sometimes need to access state of the external world. How can function calls in smart contracts be enabled to access the state of the external world from within smart contracts?"^^rdfs:Literal ;
               :Solution "To connect the closed execution environment of blockchain with the external world, a oracle is introduced to evaluate conditions that cannot be expressed in a smart contract running within the blockchain environment. A oracle is a trusted third party that provides the smart contracts with information about the external world. When validation of a transaction depends on external state, the oracle is requested to check the external state and to provide the result to the validator (miner), which then takes the result provided by the oracle into account when validating the transaction. The oracle can be implemented inside a blockchain network as a smart contract with external state being injected into the oracle periodically by an off-chain injector. Later, other smart contracts can access the data from the oracle smart contract."^^rdfs:Literal ;
               rdfs:label "Oracle (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Owens2019Interfamily
:Owens2019Interfamily rdf:type owl:NamedIndividual ,
                               :Paper ;
                      :hasIdentifier :Identifier6 ;
                      :proposes :InterFamilyCommunicationOwens2019Interfamily ;
                      :Authors "Owens, Luke and Razet, Benoit and Smith, W. Bryan and Tanner, Theodore C."^^rdfs:Literal ;
                      :Identifier "10.1007/978-3-030-05366-6_32"^^rdfs:Literal ;
                      :IdentifierType "DOI"^^rdfs:Literal ;
                      :Journal "Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)"^^rdfs:Literal ;
                      :Pages "389--401"^^rdfs:Literal ;
                      :Title "Inter-family communication in hyperledger sawtooth and its application to a crypto-asset framework"^^rdfs:Literal ;
                      :Volume "11319 LNCS"^^rdfs:Literal ;
                      :Year "2019"^^rdfs:Literal ;
                      rdfs:label "Inter-family communication in hyperledger sawtooth and its application to a crypto-asset framework" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OwnershipV
:OwnershipV rdf:type owl:NamedIndividual ,
                     :Ownership ,
                     :Variant ;
            :hasProposal :OwnershipWöhrer2018Design ;
            rdfs:label "Ownership" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#OwnershipWöhrer2018Design
:OwnershipWöhrer2018Design rdf:type owl:NamedIndividual ,
                                    :Ethereum ,
                                    :General ,
                                    :Proposal ,
                                    :Solidity ;
                           :hasPaper :Wöhrer2018Design ;
                           :hasVariant :OwnershipV ;
                           :ApplicationExample "Ethereum Lottery"^^rdfs:Literal ;
                           :ContextAndProblem "By default any party can call a contract method, but it must be ensured that sensitive contract methods can only be executed by the owner of a contract."^^rdfs:Literal ;
                           :Solution "Store the contract creator’s address as owner of a contract and restrict method execution dependent on the callers address."^^rdfs:Literal ;
                           rdfs:label "Ownership (Wöhrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PackingBooleansMarchesi2020Design
:PackingBooleansMarchesi2020Design rdf:type owl:NamedIndividual ,
                                            :Ethereum ,
                                            :General ,
                                            :Proposal ,
                                            :Solidity ;
                                   :hasPaper :Marchesi2020Design ;
                                   :hasVariant :PackingBooleansV ;
                                   :ContextAndProblem "In Solidity, Boolean variables are stored as uint8 (unsigned integer of 8 bits). However, only 1 bit would be enough to store them. If you need up to 32 Booleans together, you can just follow the Packing Variables pattern. If you need more, you will use more slots than actually needed."^^rdfs:Literal ;
                                   :Solution "Pack Booleans in a single uint256 variable. To this purpose, create functions that pack and unpack the Booleans into and from a single variable. The cost of running these functions is cheaper than the cost of extra Storage."^^rdfs:Literal ;
                                   rdfs:label "Packing booleans (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PackingBooleansV
:PackingBooleansV rdf:type owl:NamedIndividual ,
                           :PackingBooleans ,
                           :Variant ;
                  :hasProposal :PackingBooleansMarchesi2020Design ;
                  rdfs:label "Packing booleans" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PackingVariablesMarchesi2020Design
:PackingVariablesMarchesi2020Design rdf:type owl:NamedIndividual ,
                                             :Ethereum ,
                                             :General ,
                                             :Proposal ,
                                             :Solidity ;
                                    :hasPaper :Marchesi2020Design ;
                                    :hasVariant :PackingVariablesV ;
                                    :ContextAndProblem "In Ethereum, the minimum unit of memory is a slot of 256 bits. You pay for an integer number of slots even if they are not full."^^rdfs:Literal ;
                                    :Solution "Pack the variables. When declaring storage variables, the packable ones, with the same data type, should be declared consecutively. In this way, the packing is done automatically by the Solidity compiler. (Note that this pattern does not work for Memory and Calldata memories, whose variables cannot be packed.)"^^rdfs:Literal ;
                                    rdfs:label "Packing variables (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PackingVariablesV
:PackingVariablesV rdf:type owl:NamedIndividual ,
                            :PackingVariables ,
                            :Variant ;
                   :hasProposal :PackingVariablesMarchesi2020Design ;
                   rdfs:label "Packing variables" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PollBartoletti2017An
:PollBartoletti2017An rdf:type owl:NamedIndividual ,
                               :Ethereum ,
                               :General ,
                               :Proposal ,
                               :Solidity ;
                      :benefitsFrom :AddressMapping ,
                                    :Tokenisation ;
                      :hasPaper :Bartoletti2017An ;
                      :hasVariant :PollV ;
                      :ApplicationExample "Dice game contract (https://etherscan.io/address/0x2AB9f67A27f606272189b307052694D3a2B158bA#code)"^^rdfs:Literal ;
                      :ContextAndProblem ""^^rdfs:Literal ;
                      :Solution "Polls allows users to vote on some question. Often this is a side feature in a more complex scenario. For instance, in the Dice game, when a certain state is reached, the owner issues a poll to decide whether an emergency withdrawal is needed. To determine who can vote and to keep track of the votes, polls can use tokens, or they can check the voters’ addresses."^^rdfs:Literal ;
                      rdfs:label "Poll (Bartoletti, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PollV
:PollV rdf:type owl:NamedIndividual ,
                :Poll ,
                :Variant ;
       :hasProposal :PollBartoletti2017An ;
       rdfs:label "Poll" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ProxyContractRajasekar2020Emerging
:ProxyContractRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                             :General ,
                                             :Proposal ,
                                             :SmartContractEnabledBlockchains ,
                                             :Unspecified ;
                                    :createdFrom :ContractRelayWöhrer2018Design ;
                                    :hasPaper :Rajasekar2020Emerging ;
                                    :hasVariant :ProxyContractV ;
                                    :relatedTo :OffChainContractRegistryRajasekar2020Emerging ;
                                    :ContextAndProblem ""^^rdfs:Literal ;
                                    :Solution "Create a proxy for each contract, which will accept, and then forward the parameters to the current version of the contract."^^rdfs:Literal ;
                                    rdfs:label "Proxy Contract (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ProxyContractV
:ProxyContractV rdf:type owl:NamedIndividual ,
                         :ProxyContract ,
                         :Variant ;
                :benefitsFrom :ContractComposerV ,
                              :ContractDecoratorV ,
                              :ContractMediatorV ,
                              :ContractObserverV ,
                              :DataContractV ;
                :hasProposal :ContractFacadeLiu2018Applying ,
                             :ContractRelayWöhrer2018Design ,
                             :ProxyContractRajasekar2020Emerging ,
                             :ProxyMarchesi2020Design ,
                             :ProxyZhang2017Applying ,
                             :ProxyZhang2018Chapter ;
                rdfs:label "Proxy Contract" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ProxyMarchesi2020Design
:ProxyMarchesi2020Design rdf:type owl:NamedIndividual ,
                                  :Ethereum ,
                                  :General ,
                                  :Proposal ,
                                  :Solidity ;
                         :benefitsFrom :DataContractMarchesi2020Design ;
                         :hasPaper :Marchesi2020Design ;
                         :hasVariant :ProxyContractV ;
                         :ContextAndProblem "SCs are immutable. If a SC must be changed due to a bug or a needed extension, you must deploy a new contract, and also update all SCs making direct calls to the old SC, thus deploying also new versions of these. This can be very expensive."^^rdfs:Literal ;
                         :Solution "Use Proxy delegate pattern. Proxy patterns are a set of SCs working together to facilitate upgrading of SCs, despite their intrinsic immutability. A Proxy holds the addresses of referred SCs, in its state variables, which can be changed. In this way, only the references to the new SC must be updated."^^rdfs:Literal ;
                         rdfs:label "Proxy (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ProxyZhang2017Applying
:ProxyZhang2017Applying rdf:type owl:NamedIndividual ,
                                 :Healthcare ,
                                 :Proposal ,
                                 :SmartContractEnabledBlockchains ,
                                 :Unspecified ;
                        :benefitsFrom :Unknown ;
                        :hasPaper :Zhang2017Applying ;
                        :hasVariant :ProxyContractV ;
                        :ApplicationExample "DASH (from the same paper)"^^rdfs:Literal ;
                        :ContextAndProblem "A fundamental aspect of a blockchain is that all data stored in the blockchain is public, immutable, and verifiable. For financial transactions that are focused on proving that transfer of an asset occurred, these properties are critical. However, when the goal is to store data in the blockchain, it is important to understand how these properties will impact the use case."^^rdfs:Literal ;
                        :Solution "The Proxy pattern is a well-known software pattern that can be applied to blockchain-based data storage toresolve the tension created by the public and immutable aspects of the blockchain. Using the proxy pattern with a blockchain, a proxy contract is created to provide some lightweight representation or placeholder for the data with more intensive computation (such as acquiring data from off-blockchain storage via an Oracle. The proxy contract can expose some simpler metadata of a patient and later refer to the heavyweight implementation on demand to obtain the real data object. Each read request and modification operation of the data store can be logged in an audit trail that is transparent to the entire blockchain network for verification against data corruption. When the proxified contract (with heavyweight implementation) is updated with new storage option, for instance, interface to the proxy contract can remain the same, encapsulating detailed implementation variations."^^rdfs:Literal ;
                        rdfs:label "Proxy (Zhang, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ProxyZhang2018Chapter
:ProxyZhang2018Chapter rdf:type owl:NamedIndividual ,
                                :Healthcare ,
                                :Proposal ,
                                :SmartContractEnabledBlockchains ,
                                :Unspecified ;
                       :hasPaper :Zhang2018Chapter ;
                       :hasVariant :ProxyContractV ;
                       :requires :Oracle ;
                       :ContextAndProblem "If a Blockchain-based healthcare app must expose sensitive data or common Meta data (such as patient identifying information or insurance information in the example in Section 3.5.2) on the Blockchain, it must be designed to maximize health data  privacy on-chain while facilitating health information exchange. In particular, a fundamental aspect of a Blockchain is that data and all data change history stored in the Blockchain are public, immutable, and verifiable. For financial transactions focused on proving that the transfer of an asset indeed occurred, these properties are critical. When the goal is to store data in the Blockchain, however, it is important to understand how these properties will impact the use case. For"^^rdfs:Literal ;
                       :Solution "Combining the PROXY pattern with a secure data retrieving service, such as an oracle, can enable secure and private data exchange services. The oracle network is a third-party service that allows a smart contract to query or retrieve data sources outside the Blockchain address space and ensures that retrieved data is genuine and uncompromised. To reduce computation overhead on-chain, a proxy can be created as a lightweight representation or placeholder for the real data until its retrieval is required."^^rdfs:Literal ;
                       rdfs:label "Proxy (Zhang, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PublisherSubscriberV
:PublisherSubscriberV rdf:type owl:NamedIndividual ,
                               :PublisherSubscriber ,
                               :Variant ;
                      :hasProposal :PublisherSubscriberZhang2017Applying ,
                                   :PublisherSubscriberZhang2018Chapter ;
                      rdfs:label "Publisher-Subscriber" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PublisherSubscriberZhang2017Applying
:PublisherSubscriberZhang2017Applying rdf:type owl:NamedIndividual ,
                                               :Healthcare ,
                                               :Proposal ,
                                               :SmartContractEnabledBlockchains ,
                                               :Unspecified ;
                                      :hasPaper :Zhang2017Applying ;
                                      :hasVariant :PublisherSubscriberV ;
                                      :ApplicationExample "DASH (from the same paper)"^^rdfs:Literal ;
                                      :ContextAndProblem "The Ethereum blockchain maintains a public record of contract creations and operation executions along with regular cryptocurrency transactions. The availability of information makes blockchain a more autonomous approach to improve the coordination of patient care across different teams (e.g. physicians, pharmacists, insurance agents, etc) who would normally communicate through various channels with a lot of manual effort, such as through telephoning or faxing. Although, from a continually growing list of records, directly capturing any specific health-related topic of occurred events would require a lot of transaction receipt lookups and topic filtering, which requires non-trivial computation and may result in delayed responses."^^rdfs:Literal ;
                                      :Solution "The Publisher-Subscriber pattern can assist in broadcasting the information only to care providers that subscribe to events relating to this patient. It solves the issue of constant information filtering by actively monitoring patient activities and sending notifications to the patient’s care team as the activities take place. To avoid computation overhead on the blockchain, the actual processing of patient activities data can be done off-chain by a back-end server. When receiving the events of interest, the subscribers can then pass the heavy computation tasks to the server."^^rdfs:Literal ;
                                      rdfs:label "Publisher-Subscriber (Zhang, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PublisherSubscriberZhang2018Chapter
:PublisherSubscriberZhang2018Chapter rdf:type owl:NamedIndividual ,
                                              :Healthcare ,
                                              :Proposal ,
                                              :SmartContractEnabledBlockchains ,
                                              :Unspecified ;
                                     :hasPaper :Zhang2018Chapter ;
                                     :hasVariant :PublisherSubscriberV ;
                                     :ContextAndProblem "A practical Blockchain-based health system may need to manage and track relevant health events across large patient populations. Therefore, it should be designed to filter out useful health-related information from all communication traffic (i.e., transaction records) occurring on the Blockchain. For example, the Ethereum public Blockchain maintains a transparent record of all contract creation and operation execution history along with regular cryptocurrency transactions. The availability of information makes Blockchain a potentially autonomous approach to improve care coordination across different participants and teams (e.g., physicians, pharmacists, insurance agents, etc.) who would normally communicate through various channels that are manual and timeconsuming, such as through telephoning or faxing. However, records on the Blockchain are continually growing. Without a meticulously crafted design, capturing any specific health-related topic from all occurred events ondemand would imply exhaustive transaction receipt lookups and topic filtering, which requires non-trivial computations and may result in delayed responses. A good design should support relevant health information relays to facilitate coordinated care as the events occur."^^rdfs:Literal ;
                                     :Solution "Incorporating a notification service using the PUBLISHER-SUBSCRIBER pattern can facilitate scalable information filtering. In this design, health activities are only broadcast to providers who subscribe to events relating to their patients. It alleviates the tedious filtering process of determining which care provider should be notified about what patient activities as large volumes of transactions take place."^^rdfs:Literal ;
                                     rdfs:label "Publisher-Subscriber (Zhang, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PullBasedInboundOracleMühlberger2020Foundational
:PullBasedInboundOracleMühlberger2020Foundational rdf:type owl:NamedIndividual ,
                                                           :AllBlockchains ,
                                                           :General ,
                                                           :Proposal ,
                                                           :Unspecified ;
                                                  :hasPaper :Mühlberger2020Foundational ;
                                                  :hasVariant :PullBasedInboundOracleV ;
                                                  :ContextAndProblem "A blockchain application requires knowledge contained outside of the blockchain, but since blockchains are closed systems, applications cannot directly acquire information from the outside world."^^rdfs:Literal ;
                                                  :Solution "A pull-based inbound oracle allows blockchain applications to request states from off-chain components. When a blockchain application requests an off-chain state, the pull-based inbound oracle receives this request, gathers the state from off-chain components, and sends the result back to the blockchain (via a transaction)."^^rdfs:Literal ;
                                                  rdfs:label "Pull-based inbound oracle (Mühlberger, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PullBasedInboundOracleV
:PullBasedInboundOracleV rdf:type owl:NamedIndividual ,
                                  :PullBasedInboundOracle ,
                                  :Variant ;
                         :hasProposal :PullBasedInboundOracleMühlberger2020Foundational ;
                         rdfs:label "Pull-based inbound oracle" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PullBasedOutboundOracleMühlberger2020Foundational
:PullBasedOutboundOracleMühlberger2020Foundational rdf:type owl:NamedIndividual ,
                                                            :AllBlockchains ,
                                                            :General ,
                                                            :Proposal ,
                                                            :Unspecified ;
                                                   :hasPaper :Mühlberger2020Foundational ;
                                                   :hasVariant :PullBasedOutboundOracleV ;
                                                   :ContextAndProblem "Knowledge contained on the blockchain is needed outside the blockchain, but since blockchains are closed systems, the outside world cannot directly request information. Solution"^^rdfs:Literal ;
                                                   :Solution "A pull-based outbound oracle allows blockchain data to be queried and filtered to make it available to the outside world. It can be called from (off-chain) components to pull (all) blockchain data and query relevant information"^^rdfs:Literal ;
                                                   rdfs:label "Pull-based outbound oracle (Mühlberger, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PullBasedOutboundOracleV
:PullBasedOutboundOracleV rdf:type owl:NamedIndividual ,
                                   :PullBasedOutboundOracle ,
                                   :Variant ;
                          :hasProposal :PullBasedOutboundOracleMühlberger2020Foundational ;
                          rdfs:label "Pull-based outbound oracle" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PullPaymentV
:PullPaymentV rdf:type owl:NamedIndividual ,
                       :PullPayment ,
                       :Variant ;
              :hasProposal :PullPaymentWöhrer2018Design ;
              rdfs:label "Pull payment" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PullPaymentWöhrer2018Design
:PullPaymentWöhrer2018Design rdf:type owl:NamedIndividual ,
                                      :Ethereum ,
                                      :General ,
                                      :Proposal ,
                                      :Solidity ;
                             :hasPaper :Wöhrer2018Design ;
                             :hasVariant :PullPaymentV ;
                             :ApplicationExample "Cryptopunks"^^rdfs:Literal ;
                             :ContextAndProblem "A common task when coding smart contracts is to transfer funds. Unfortunately, there are several circumstances under which a transfer can fail. This is due to the fact that the implementation to send funds involves an external call, which basically hands over control to the called contract. Therefore, security considerations regarding external calls and re-entrancy attacks have to be considered. A re-entrancy attack describes the scenario where the called contract calls back the current contract, before the first invocation of the function containing the call, was finished. This can lead to an unwanted execution behaviour of functions."^^rdfs:Literal ;
                             :Solution "Due to the possibility of deliberately sabotaging the transferof funds by executing expensive operations in the fallback method, causing an “out of gas” (OOG) error, or manipulations involving re-entrancy attacks, a more favourable approach is to reverse the payment process (let users withdraw their funds themselves)."^^rdfs:Literal ;
                             rdfs:label "Pull payment (Wöhrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PushBasedInboundOracleMühlberger2020Foundational
:PushBasedInboundOracleMühlberger2020Foundational rdf:type owl:NamedIndividual ,
                                                           :AllBlockchains ,
                                                           :General ,
                                                           :Proposal ,
                                                           :Unspecified ;
                                                  :hasPaper :Mühlberger2020Foundational ;
                                                  :hasVariant :PushBasedInboundOracleV ;
                                                  :ContextAndProblem "A blockchain application must be supplied with knowledge outside the blockchain, but since blockchains are closed systems, this knowledge cannot be directly communicated. Solution"^^rdfs:Literal ;
                                                  :Solution "A push-based inbound oracle allows off-chain information to be propagated to the blockchain by monitoring off-chain state changes and forwarding them to the blockchain."^^rdfs:Literal ;
                                                  rdfs:label "Push-based inbound oracle (Mühlberger, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PushBasedInboundOracleV
:PushBasedInboundOracleV rdf:type owl:NamedIndividual ,
                                  :PushBasedInboundOracle ,
                                  :Variant ;
                         :hasProposal :PushBasedInboundOracleMühlberger2020Foundational ;
                         rdfs:label "Push-based inbound oracle" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PushBasedOutboundOracleMühlberger2020Foundational
:PushBasedOutboundOracleMühlberger2020Foundational rdf:type owl:NamedIndividual ,
                                                            :AllBlockchains ,
                                                            :General ,
                                                            :Proposal ,
                                                            :Unspecified ;
                                                   :hasPaper :Mühlberger2020Foundational ;
                                                   :hasVariant :PushBasedOutboundOracleV ;
                                                   :ContextAndProblem "Knowledge contained on the blockchain must be available outside the blockchain, but since blockchains are closed systems, applications cannot directly propagate information to the outside world."^^rdfs:Literal ;
                                                   :Solution "A push-based outbound oracle monitors the blockchain for relevant changes to subsequently trigger or perform activities outside the blockchain."^^rdfs:Literal ;
                                                   rdfs:label "Push-based outbound oracle (Mühlberger, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#PushBasedOutboundOracleV
:PushBasedOutboundOracleV rdf:type owl:NamedIndividual ,
                                   :PushBasedOutboundOracle ,
                                   :Variant ;
                          :hasProposal :PushBasedOutboundOracleMühlberger2020Foundational ;
                          rdfs:label "Push-based outbound oracle" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Rajasekar2020Emerging
:Rajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                :Paper ;
                       :hasIdentifier :Identifier11 ;
                       :proposes :ChecksEffectInteractionsRajasekar2020Emerging ,
                                 :CommitAndRevealRajasekar2020Emerging ,
                                 :ContractBalanceLimitRajasekar2020Emerging ,
                                 :DataContractRajasekar2020Emerging ,
                                 :DynamicBindingRajasekar2020Emerging ,
                                 :EmbeddedPermissionRajasekar2020Emerging ,
                                 :EmergencyStopRajasekar2020Emerging ,
                                 :FactoryContractRajasekar2020Emerging ,
                                 :FlyweightRajasekar2020Emerging ,
                                 :IncentiveExecutionRajasekar2020Emerging ,
                                 :MutexRajasekar2020Emerging ,
                                 :OffChainContractRegistryRajasekar2020Emerging ,
                                 :OffChainDatastoreRajasekar2020Emerging ,
                                 :OracleRajasekar2020Emerging ,
                                 :ProxyContractRajasekar2020Emerging ,
                                 :ReverseVerifierRajasekar2020Emerging ,
                                 :SecureEtherTransferRajasekar2020Emerging ,
                                 :StateChannelRajasekar2020Emerging ,
                                 :TightVariablePackingRajasekar2020Emerging ;
                       :Authors "Rajasekar, Vijay and Sondhi, Shiv and Saad, Sherif and Mohammed, Shady"^^rdfs:Literal ;
                       :Identifier "10.5220/0009892702420249"^^rdfs:Literal ;
                       :IdentifierType "DOI"^^rdfs:Literal ;
                       :Title "Emerging Design Patterns for Blockchain Applications"^^rdfs:Literal ;
                       :Year "2020"^^rdfs:Literal ;
                       rdfs:label "Emerging Design Patterns for Blockchain Applications" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#RandomnessBartoletti2017An
:RandomnessBartoletti2017An rdf:type owl:NamedIndividual ,
                                     :Ethereum ,
                                     :General ,
                                     :Proposal ,
                                     :Solidity ;
                            :hasPaper :Bartoletti2017An ;
                            :hasVariant :RandomnessV ;
                            :requires :Oracle ;
                            :ApplicationExample "Lottery contract (https://etherscan.io/address/0x302fE87B56330BE266599FAB2A54747299B5aC5B#code)"^^rdfs:Literal ,
                                                "Slot contract (https://etherscan.io/address/0x76bc9e61a1904b82cbf70d1fd9c0f8a120483bbb#code)"^^rdfs:Literal ;
                            :ContextAndProblem "Dealing with randomness is not a trivial task in Ethereum. Since contract execution must be deterministic, all the nodes must obtain the same value when asking for a random number: this struggles with the randomness requirements wished."^^rdfs:Literal ;
                            :Solution "To address this issue, several contracts (e.g., Slot) query oracles that generate these values off-chain."^^rdfs:Literal ;
                            rdfs:label "Randomness (Bartoletti, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#RandomnessV
:RandomnessV rdf:type owl:NamedIndividual ,
                      :Randomness ,
                      :Variant ;
             :hasProposal :RandomnessBartoletti2017An ;
             rdfs:label "Randomness" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#RateLimitV
:RateLimitV rdf:type owl:NamedIndividual ,
                     :RateLimit ,
                     :Variant ;
            :hasProposal :RateLimitWohrer2018Smart ;
            rdfs:label "Rate Limit" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#RateLimitWohrer2018Smart
:RateLimitWohrer2018Smart rdf:type owl:NamedIndividual ,
                                   :Ethereum ,
                                   :General ,
                                   :Proposal ,
                                   :Solidity ;
                          :hasPaper :Wohrer2018Smart ;
                          :hasVariant :RateLimitV ;
                          :ContextAndProblem "A request rush on a certain task is not desired and can hinder the correct operational performance of a contract."^^rdfs:Literal ;
                          :Solution "Regulate how often a task can be executed within a period of time."^^rdfs:Literal ;
                          rdfs:label "Rate Limit (Wohrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ReverseOracleV
:ReverseOracleV rdf:type owl:NamedIndividual ,
                         :ReverseOracle ,
                         :Variant ;
                :hasProposal :AntiOracleWorley2019Opportunities ,
                             :ReverseOracleXu2018A ,
                             :ReverseVerifierRajasekar2020Emerging ;
                rdfs:label "Reverse Oracle" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ReverseOracleXu2018A
:ReverseOracleXu2018A rdf:type owl:NamedIndividual ,
                               :General ,
                               :Proposal ,
                               :SmartContractEnabledBlockchains ,
                               :Unspecified ;
                      :hasPaper :Xu2018A ;
                      :hasVariant :ReverseOracleV ;
                      :relatedTo :OracleXu2018A ;
                      :ApplicationExample "Identitii (https://identitii.com)"^^rdfs:Literal ,
                                          "Slock.it (https://slock.it/)"^^rdfs:Literal ;
                      :ContextAndProblem "In a software system, where blockchain is one of the components, the off-chain components might need to use the data stored on the blockchain and the smart contracts running on the blockchain to check certain conditions. Some domains use very large and mature (or even legacy) systems, which comply with existing standards. For such domains, an non-intrusive approach is desired to leverage the existing complex systems with blockchain without changing the core of the existing systems."^^rdfs:Literal ;
                      :Solution "The unique ID ofthe transactions or blocks on blockchain is a piece of data that can be easily integrated into the existing systems. Validation of the data can be implemented by smart contracts running on blockchain. An off-chain component is required to query the blockchain through using the ID of the data."^^rdfs:Literal ;
                      rdfs:label "Reverse oracle (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ReverseVerifierRajasekar2020Emerging
:ReverseVerifierRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                               :General ,
                                               :Proposal ,
                                               :SmartContractEnabledBlockchains ,
                                               :Unspecified ;
                                      :createdFrom :ReverseOracleXu2018A ;
                                      :hasPaper :Rajasekar2020Emerging ;
                                      :hasVariant :ReverseOracleV ;
                                      :relatedTo :OracleRajasekar2020Emerging ;
                                      :ContextAndProblem "It is common to have application data in a traditional database and store only a hash on the blockchain. One shortcoming of this is that we cannot prevent tampering of data in the database."^^rdfs:Literal ;
                                      :Solution "Sometimes an application may need to access data from the blockchain. Like the oracle pattern, reverse verifier is used to verify data being sent to an external source from the blockchain."^^rdfs:Literal ;
                                      rdfs:label "Reverse Verifier (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SatelliteV
:SatelliteV rdf:type owl:NamedIndividual ,
                     :Satellite ,
                     :Variant ;
            :hasProposal :SatelliteWöhrer2018Design ;
            rdfs:label "Satellite" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SatelliteWöhrer2018Design
:SatelliteWöhrer2018Design rdf:type owl:NamedIndividual ,
                                    :Ethereum ,
                                    :General ,
                                    :Proposal ,
                                    :Solidity ;
                           :hasPaper :Wöhrer2018Design ;
                           :hasVariant :SatelliteV ;
                           :ApplicationExample "LATP Token"^^rdfs:Literal ;
                           :ContextAndProblem "Contracts are immutable. Changing contract functionality requires the deployment of a new contract."^^rdfs:Literal ;
                           :Solution "The satellite pattern allows to modify and replace contract functionality. This is achieved through the creation of separate satellite contracts that encapsulate certain contract functionality. The addresses of these satellite contracts are stored in a base contract. This contract can then can call out to the satellite contracts when it needs to reference certain functionalities, by using the stored address pointers. If this pattern is properly implemented, modifying functionality is as simple as creating new satellite contracts and changing the corresponding satellite addresses."^^rdfs:Literal ;
                           rdfs:label "Satellite (Wöhrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SecureEtherTransferRajasekar2020Emerging
:SecureEtherTransferRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                                   :Ethereum ,
                                                   :General ,
                                                   :Proposal ,
                                                   :Solidity ;
                                          :createdFrom :ChecksEffectsInteractionWohrer2018Smart ;
                                          :hasPaper :Rajasekar2020Emerging ;
                                          :hasVariant :SecureEtherTransferV ;
                                          :ContextAndProblem "Since the low-level function will forward all remaining gas to the invoked contract, using it allows further invocations to be made, provided the gas sent in the original call is sufficiently larger than the required minimum."^^rdfs:Literal ;
                                          :Solution "This is infact an anti-pattern. The low-level Solidity function, address.call() should not be used to invoke a contract. Instead, the high-level address.send() or address.transfer() should be preferred because they set a limit on the amount of gas1 the contract can forward to any invoked contract."^^rdfs:Literal ;
                                          rdfs:label "Secure Ether Transfer (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SecureEtherTransferV
:SecureEtherTransferV rdf:type owl:NamedIndividual ,
                               :SecureEtherTransfer ,
                               :Variant ;
                      :hasProposal :SecureEtherTransferRajasekar2020Emerging ;
                      rdfs:label "Secure Ether Transfer" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SelectiveContentGenerationLiu2020Design
:SelectiveContentGenerationLiu2020Design rdf:type owl:NamedIndividual ,
                                                  :IdentityManagement ,
                                                  :Proposal ,
                                                  :SmartContractEnabledBlockchains ,
                                                  :Unspecified ;
                                         :benefitsFrom :OneOffAccessLiu2020Design ,
                                                       :TimeConstrainedAccessLiu2020Design ;
                                         :hasPaper :Liu2020Design ;
                                         :hasVariant :SelectiveContentGenerationV ;
                                         :requires :AnchoringToBlockchainLiu2020Design ;
                                         :ApplicationExample "Sovrin (https://sovrin.org)"^^rdfs:Literal ,
                                                             "uPort (https://www.uport.me)"^^rdfs:Literal ;
                                         :ContextAndProblem "A verifier requires certain information to prove a holder’s identity, thus, a holder only needs to share a credential with necessary data to the verifer. If issuers publish general credentials to holders, a verifier can learn all identity data involved when only some particular attributes are needed. For instance, if a person shows his/her ID to identify the age, his/her address is presented either. This may cause data leak as extra information is provided."^^rdfs:Literal ;
                                         :Solution "Selective Content Generation allows issuers to decide what identity attributes are contained in a credential. An issued credential needs to satisfy the target verifier’s specific requirements of holder’s identity, without revealing extra data."^^rdfs:Literal ;
                                         rdfs:label "Selective Content Generation (Liu, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SelectiveContentGenerationV
:SelectiveContentGenerationV rdf:type owl:NamedIndividual ,
                                      :SelectiveContentGeneration ,
                                      :Variant ;
                             :benefitsFrom :OneOffAccessV ,
                                           :TimeConstrainedAccessV ;
                             :hasProposal :SelectiveContentGenerationLiu2020Design ;
                             rdfs:label "Selective Content Generation" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SelfConfirmedTransactionsV
:SelfConfirmedTransactionsV rdf:type owl:NamedIndividual ,
                                     :SelfConfirmedTransactions ,
                                     :Variant ;
                            :hasProposal :SelfConfirmedTransactionsWessling2018Engineering ;
                            rdfs:label "Self-Confirmed Transactions" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SelfConfirmedTransactionsWessling2018Engineering
:SelfConfirmedTransactionsWessling2018Engineering rdf:type owl:NamedIndividual ,
                                                           :AllBlockchains ,
                                                           :General ,
                                                           :Proposal ,
                                                           :Unspecified ;
                                                  :hasPaper :Wessling2018Engineering ;
                                                  :hasVariant :SelfConfirmedTransactionsV ;
                                                  :ApplicationExample "AxiomZen. Cryptokitties. (Accessed 2018-03-15). [Online]. Available: https://www.cryptokitties.co"^^rdfs:Literal ;
                                                  :ContextAndProblem "Manually generating transactions can be hard or is not always feasible, especially when it is necessary to query the current state of the blockchain or to gather additional data, e.g., like the marketplace of CryptoKitties. This requires a certain trust in the DApp provider as transactions are generated but the implication of their execution is not always completely transparent (e.g., the geneScience contract of CryptoKitties without published source code or ABI)."^^rdfs:Literal ;
                                                  :Solution "Transactions are not generated by the user but are triggered by the DApp website, presented to the user for further verification and then manually sent to the blockchain node. Thus, this pattern offers a trade-off between convenience and trust that is required in the DApp website providing the transaction details."^^rdfs:Literal ;
                                                  rdfs:label "Self-Confirmed Transactions (Wessling, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SelfGeneratedTransactionsV
:SelfGeneratedTransactionsV rdf:type owl:NamedIndividual ,
                                     :SelfGeneratedTransactions ,
                                     :Variant ;
                            :hasProposal :SelfGeneratedTransactionsWessling2018Engineering ;
                            rdfs:label "Self-Generated Transactions" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SelfGeneratedTransactionsWessling2018Engineering
:SelfGeneratedTransactionsWessling2018Engineering rdf:type owl:NamedIndividual ,
                                                           :AllBlockchains ,
                                                           :General ,
                                                           :Proposal ,
                                                           :Unspecified ;
                                                  :hasPaper :Wessling2018Engineering ;
                                                  :hasVariant :SelfGeneratedTransactionsV ;
                                                  :ApplicationExample "Aurora Labs S.A. Idex – decentralized ethereum asset exchange. (Accessed 2018-03-15). [Online]. Available: https://idex.market"^^rdfs:Literal ,
                                                                      "EtherDelta. Etherdelta. (Accessed 2018-03-15). [Online]. Available: https://etherdelta.com"^^rdfs:Literal ,
                                                                      "Ethorse. (Accessed 2018-03-15). [Online]. Available: https://ethorse.com"^^rdfs:Literal ;
                                                  :ContextAndProblem ""^^rdfs:Literal ;
                                                  :Solution "For directly interacting with an EDCC (Executable Distributed Code Contract) it is necessarythat the interface description (Application Binary Interface, ABI) of the EDCC is publicly available. Furthermore, for understanding the specific actions carried out by a contract, the source code should be published as well. DApps structured with this pattern have the security advantage that the users keep their private keys on their device and are able to generate, sign and send transactions on their own."^^rdfs:Literal ;
                                                  rdfs:label "Self-Generated Transactions (Wessling, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ShortCircuitMarchesi2020Design
:ShortCircuitMarchesi2020Design rdf:type owl:NamedIndividual ,
                                         :Ethereum ,
                                         :General ,
                                         :Proposal ,
                                         :Solidity ;
                                :hasPaper :Marchesi2020Design ;
                                :hasVariant :ShortCircuitV ;
                                :ContextAndProblem "Every single operation costs gas."^^rdfs:Literal ;
                                :Solution "When using the logical operators, order the expressions to reduce the probability of evaluating the second expression. Remember that in the logical disjunction (OR, ||), if the first expression resolves to true, the second one will not be executed; or that in the logical disjunction (AND, &&), if the first expression is evaluated as false, the next one will not be evaluated."^^rdfs:Literal ;
                                rdfs:label "Short circuit (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ShortCircuitV
:ShortCircuitV rdf:type owl:NamedIndividual ,
                        :ShortCircuit ,
                        :Variant ;
               :hasProposal :ShortCircuitMarchesi2020Design ;
               rdfs:label "Short circuit" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ShortConstantStringsMarchesi2020Design
:ShortConstantStringsMarchesi2020Design rdf:type owl:NamedIndividual ,
                                                 :Ethereum ,
                                                 :General ,
                                                 :Proposal ,
                                                 :Solidity ;
                                        :hasPaper :Marchesi2020Design ;
                                        :hasVariant :ShortConstantStringsV ;
                                        :ContextAndProblem "Storing strings is costly."^^rdfs:Literal ;
                                        :Solution "Keep constant strings short. Be sure that constant strings fit 32 bytes. For example, it is possible to clarify an error using a string; these messages, however, are included in the bytecode, so they must be kept short to avoid wasting memory."^^rdfs:Literal ;
                                        rdfs:label "Short constant strings (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#ShortConstantStringsV
:ShortConstantStringsV rdf:type owl:NamedIndividual ,
                                :ShortConstantStrings ,
                                :Variant ;
                       :hasProposal :ShortConstantStringsMarchesi2020Design ;
                       rdfs:label "Short constant strings" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SingleLineSwapMarchesi2020Design
:SingleLineSwapMarchesi2020Design rdf:type owl:NamedIndividual ,
                                           :Ethereum ,
                                           :General ,
                                           :Proposal ,
                                           :Solidity ;
                                  :hasPaper :Marchesi2020Design ;
                                  :hasVariant :SingleLineSwapV ;
                                  :ContextAndProblem "Each assignment and defining variables costs gas."^^rdfs:Literal ;
                                  :Solution "Solidity allows to swap the values of two variables in one instruction. So, instead of the classical swap using an auxiliary variable, use: (a, b) = (b, a)"^^rdfs:Literal ;
                                  rdfs:label "Single-line swap (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SingleLineSwapV
:SingleLineSwapV rdf:type owl:NamedIndividual ,
                          :SingleLineSwap ,
                          :Variant ;
                 :hasProposal :SingleLineSwapMarchesi2020Design ;
                 rdfs:label "Single-line swap" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Six2020A
:Six2020A rdf:type owl:NamedIndividual ,
                   :Paper ;
          :hasIdentifier :Identifier23 ;
          :proposes :ConfidentialAndPseudoAnonymousContractEnforcementSix2020A ;
          :Authors "Six, Nicolas and Ribalta, Claudia Negri and Herbaut, Nicolas and Salinesi, Camille"^^rdfs:Literal ;
          :Identifier "10.1109/TrustCom50675.2020.00268"^^rdfs:Literal ;
          :IdentifierType "DOI"^^rdfs:Literal ;
          :Journal "Proceedings 2020 IEEE 19th International Conference on Trust, Security and Privacy in Computing and Communications, TrustCom 2020"^^rdfs:Literal ;
          :Pages "1965--1970"^^rdfs:Literal ;
          :Title "A blockchain-based pattern for confidential and pseudo-anonymous contract enforcement"^^rdfs:Literal ;
          :Year "2020"^^rdfs:Literal ;
          rdfs:label "A blockchain-based pattern for confidential and pseudo-anonymous contract enforcement" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SmartContractActivitiesMüller2020Silver
:SmartContractActivitiesMüller2020Silver rdf:type owl:NamedIndividual ,
                                                  :BPM ,
                                                  :Proposal ,
                                                  :SmartContractEnabledBlockchains ,
                                                  :Unspecified ;
                                         :hasPaper :Müller2020Silver ;
                                         :hasVariant :SmartContractActivitiesV ;
                                         :requires :Oracle ;
                                         :ContextAndProblem "In an inter-organizational process, different collaborators are responsible for certain activities. The execution of activities carried out by one organization can be seen as a “black box” for other organizations. Without any modifications, collaborators cannot verify the correct execution of the activities of other collaborators. Further, it is also not traceable to them if even the resources to execute the activity at a certain point in time are available."^^rdfs:Literal ;
                                         :Solution "In this trust pattern, the business logic of an activity is encoded in a smart contract and deployed on the blockchain. The execution of the smart contract is either triggered by the responsible collaborator or by another smart contract, such as a decentralized business process engine."^^rdfs:Literal ;
                                         rdfs:label "Smart Contract Activities (Müller, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SmartContractActivitiesV
:SmartContractActivitiesV rdf:type owl:NamedIndividual ,
                                   :SmartContractActivities ,
                                   :Variant ;
                          :hasProposal :SmartContractActivitiesMüller2020Silver ;
                          rdfs:label "Smart Contract Activities" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SmartContractTranslationBandara2020Patterns
:SmartContractTranslationBandara2020Patterns rdf:type owl:NamedIndividual ,
                                                      :General ,
                                                      :Proposal ,
                                                      :SmartContractEnabledBlockchains ,
                                                      :Unspecified ;
                                             :benefitsFrom :EstablishGenesisBandara2020Patterns ;
                                             :hasPaper :Bandara2020Patterns ;
                                             :hasVariant :SmartContractTranslationV ;
                                             :ApplicationExample "A. Milano, “$3 billion blockchain Tron kicks off token migration,” June 2018. https: //coindesk.com/3-billion-blockchain-tron-kicks-off-token-migration-today."^^rdfs:Literal ,
                                                                 "Augur, “Serpent compiler vulnerability, REP & Solidity,” July 2017. https://medium.com/@AugurProject/serpent-compiler-vulnerability-rep-solidity-migration-5d91e4ae90dd."^^rdfs:Literal ,
                                                                 "Counterparty, “Smart contracts/EVM FAQ.” https://counterparty.io/docs/faq-smartcontracts/."^^rdfs:Literal ,
                                                                 "K. Network, “Istanbul upgrade: Kyber smart contract migration,” Nov. 2019. https://blog.kyber.network/istanbul-upgrade-kyber-smart-contract-migration-c8a6bcd84a1b."^^rdfs:Literal ,
                                                                 "TRONbet, “ANTE/WIN: Prepare for take-off,” July 2019. https://medium.com/@tronbethelp/ante-win-prepare-for-take-off-353d41b43401."^^rdfs:Literal ;
                                             :ContextAndProblem "Concert application uses a set of smart contracts and associated states which need to be usable on the target blockchain. The smart contract language of the target blockchain is not interoperable. The list of smart contracts and their states to be migrated is given in the snapshot. How to run smart contracts written for one blockchain platform on another?"^^rdfs:Literal ;
                                             :Solution "Translate and deploy a smart contract on the target blockchain. First, verify that the respective source code produces the exact smart contract deployed on the source blockchain. Second, translate the smart contract to the new language. Then, test the functional correctness and security of the translated contract. Fourth, deploy the new smart contract to the target blockchain using the state initialization pattern. Fifth, use the same pattern to set the states of the deployed contract, as per the state recorded on the snapshot. Next, update the mapping between old and new smart contract addresses on the ID database, as smart contract addresses vary across different blockchain instances and could also depend on the address that deployed the smart contract, transaction sequence number, among others. Finally, it is also desirable to include the original and translated code, snapshot file, and mapping between old and new smart contract addresses as a PoE entry, as they are not included in the target blockchain’s history."^^rdfs:Literal ;
                                             rdfs:label "Smart Contract Translation (Bandara, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SmartContractTranslationV
:SmartContractTranslationV rdf:type owl:NamedIndividual ,
                                    :SmartContractTranslation ,
                                    :Variant ;
                           :benefitsFrom :EstablishGenesisV ;
                           :hasProposal :SmartContractTranslationBandara2020Patterns ;
                           rdfs:label "Smart Contract Translation" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SnapshottingBandara2020Patterns
:SnapshottingBandara2020Patterns rdf:type owl:NamedIndividual ,
                                          :AllBlockchains ,
                                          :General ,
                                          :Proposal ,
                                          :Unspecified ;
                                 :hasPaper :Bandara2020Patterns ;
                                 :hasVariant :SnapshottingV ;
                                 :requires :EstablishGenesisBandara2020Patterns ,
                                           :HardForkBandara2020Patterns ,
                                           :StateInitializationBandara2020Patterns ;
                                 :ApplicationExample "A. Milano, “$3 billion blockchain Tron kicks off token migration,” June 2018. https: //coindesk.com/3-billion-blockchain-tron-kicks-off-token-migration-today."^^rdfs:Literal ,
                                                     "R. Peter, “Spin-offs: Bootstrap your alt-coin with a Bitcoin-blockchain-based initial coin distribution,” Apr. 2014. https://bitcointalk.org/index.php?topic=563972.0."^^rdfs:Literal ,
                                                     "T. Foundation, “Telos token distribution -Use of the EOS genesis snapshot & why,” Aug. 2018. https://medium.com/telos-foundation/telos-token-distribution-use-of-the-eos-genesis-snapshot-why-2d849a2b0055."^^rdfs:Literal ,
                                                     "T. Publisher, “TomoChain’s mainnet launch, and token swapping schedule,” Nov. 2018. https://medium.com/tomochain/tomochains-mainnet-launch-and-token-swapping-schedule-6f556e2f772."^^rdfs:Literal ,
                                                     "TRONbet, “ANTE/WIN: Prepare for take-off,” July 2019. @tronbethelp/ante-win-prepare-for-take-off-353d41b43401.https://medium.com/"^^rdfs:Literal ,
                                                     "VeChain, “VeChainThor wallet manual including token swap and X node migration,” July 2018. https://cdn.vechain.com/vechainthor wallet manual en v1.0.pdf."^^rdfs:Literal ;
                                 :ContextAndProblem "The latest states and transactions of all accounts and smart contracts of the concert application need to be migrated to the target blockchain. Source blockchain is currently active; hence, the global state continues to change as new transactions arrive. The state to be migrated is already aggregated on the source blockchain.How to get a complete account of states, smart contracts, and transactions on the source blockchain before migration?"^^rdfs:Literal ;
                                 :Solution "Get a snapshot of relevant states, smart contracts, and transactions on the source blockchain at a given time. First, select a block number to initiate the snapshotting process and number of blocks to wait for finality (aka., x-confirmation). Second, update all instances of the BAL (Blockchain Access/API Layer). Third, the BAL should wait until the chosen block number is reached. Once reached, it should freeze processing further transactions to prevent any state changes. BAL should further wait for x-confirmation to ensure the finality of already issued transactions. Once it is reached, the migration tool can extract all required states, smart contracts, and transactions by querying the source blockchain via the BAL. Finally, all extracted data are saved as a snapshot file"^^rdfs:Literal ;
                                 rdfs:label "Snapshotting (Bandara, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SnapshottingV
:SnapshottingV rdf:type owl:NamedIndividual ,
                        :Snapshotting ,
                        :Variant ;
               :hasProposal :SnapshottingBandara2020Patterns ;
               rdfs:label "Snapshotting" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SpeedBumpV
:SpeedBumpV rdf:type owl:NamedIndividual ,
                     :SpeedBump ,
                     :Variant ;
            :hasProposal :SpeedBumpWohrer2018Smart ;
            rdfs:label "Speed Bump" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#SpeedBumpWohrer2018Smart
:SpeedBumpWohrer2018Smart rdf:type owl:NamedIndividual ,
                                   :Ethereum ,
                                   :General ,
                                   :Proposal ,
                                   :Solidity ;
                          :hasPaper :Wohrer2018Smart ;
                          :hasVariant :SpeedBumpV ;
                          :ContextAndProblem "The simultaneous execution of sensitive tasks by a huge number of parties can bring about the downfall of a contract."^^rdfs:Literal ;
                          :Solution "Prolong the completion of sensitive tasks to take steps against fraudulent activities."^^rdfs:Literal ;
                          rdfs:label "Speed Bump (Wohrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#StateAggregationBandara2020Patterns
:StateAggregationBandara2020Patterns rdf:type owl:NamedIndividual ,
                                              :AllBlockchains ,
                                              :General ,
                                              :Proposal ,
                                              :Unspecified ;
                                     :benefitsFrom :SnapshottingBandara2020Patterns ;
                                     :hasPaper :Bandara2020Patterns ;
                                     :hasVariant :StateAggregationV ;
                                     :requires :OffChainDataStorageXu2018A ;
                                     :ApplicationExample "B. C. Assistant, “Binance chain mainnet swap,” May 2019.community.binance.org/topic/44/binance-chain-mainnet-swap."^^rdfs:Literal ,
                                                         "B. Wiki, “How to cheaply consolidate coins to reduce miner fees,” May 2019. https: //en.bitcoin.it/wiki/How to cheaply consolidate coins to reduce miner fees."^^rdfs:Literal ,
                                                         "J. Wilcke, “To fork or not to fork,” July 2016. https://blog.ethereum.org/2016/07/15/ to-fork-or-not-to-fork/."^^rdfs:Literal ,
                                                         "Storj, “Token migration plan pt.1,” Apr. 2017. https://storj.io/blog/2017/04/token"^^rdfs:Literal ,
                                                         "migration-plan-pt.1/."^^rdfs:Literal ;
                                     :ContextAndProblem "Concert application has a large number of accounts and states. Extracting all states from the source blockchain and recreating them on the target blockchain is both costly and time-consuming. The list of states to be migrated is given in the snapshot or ID database. How to extract and recreate a large number of states while minimizing the time and cost?"^^rdfs:Literal ;
                                     :Solution "Transfer all ConcertCoins to a single account, such that only the closing balance needs to be migrated. Fig. 5 shows the sequence of activities required to perform such an aggregation of state. To aggregate blockchain native assets, first, create a new account on the source blockchain. To aggregate states embedded in smart contracts, deploy a new Smart Contract (SC). Both cases will produce a new address (aggregateAddress). Then get the users’ consent to transfer their states by signing a transaction with the current state as payload and aggregateAddress as the recipient. Next, submit the signed transaction to the source blockchain. Finally, trigger the aggregate function at the aggregateAddress."^^rdfs:Literal ;
                                     rdfs:label "State Aggregation (Bandara, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#StateAggregationV
:StateAggregationV rdf:type owl:NamedIndividual ,
                            :StateAggregation ,
                            :Variant ;
                   :benefitsFrom :SnapshottingV ;
                   :hasProposal :StateAggregationBandara2020Patterns ;
                   rdfs:label "State Aggregation" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#StateChannelRajasekar2020Emerging
:StateChannelRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                            :AllBlockchains ,
                                            :General ,
                                            :Proposal ,
                                            :Unspecified ;
                                   :createdFrom :StateChannelXu2018A ;
                                   :hasPaper :Rajasekar2020Emerging ;
                                   :hasVariant :StateChannelV ;
                                   :ApplicationExample "Bitcoin Lightning Network (https://lightning.network/)"^^rdfs:Literal ,
                                                       "Plasma (https://docs.ethhub.io/ethereum-roadmap/layer-2-scaling/plasma/)"^^rdfs:Literal ;
                                   :ContextAndProblem "As mentioned, storing large amounts of data on the blockchain is not sustainable for scalability and sometimes cost issues. In the case of micro-transactions, the amount being transacted is significantly lesser than the processing fees and will take up as much space as any other transaction on the chain."^^rdfs:Literal ;
                                   :Solution "Micro-transactions should not be stored on the blockchain; they should be stored off-chain and only the final settled amounts should be stored on-chain. There are some use-cases of this pattern, the most common being the Lightning Network in Bitcoin and Plasma in Ethereum."^^rdfs:Literal ;
                                   rdfs:label "State Channel (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#StateChannelV
:StateChannelV rdf:type owl:NamedIndividual ,
                        :StateChannel ,
                        :Variant ;
               :hasProposal :StateChannelRajasekar2020Emerging ,
                            :StateChannelXu2018A ;
               rdfs:label "State Channel" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#StateChannelXu2018A
:StateChannelXu2018A rdf:type owl:NamedIndividual ,
                              :General ,
                              :Proposal ,
                              :SmartContractEnabledBlockchains ,
                              :Unspecified ;
                     :hasPaper :Xu2018A ;
                     :hasVariant :StateChannelV ;
                     :relatedTo :OffChainSignaturesEberhardt2017On ;
                     :ApplicationExample "Bitcoin Lightning Network (https://lightning.network/)"^^rdfs:Literal ,
                                         "Gnosis (https://forum.gnosis.pm/t/how-offchain-trading-will-work/63)"^^rdfs:Literal ,
                                         "Orinoco (http://www.orinocopay.com)"^^rdfs:Literal ,
                                         "Plasma (https://docs.ethhub.io/ethereum-roadmap/layer-2-scaling/plasma/)"^^rdfs:Literal ,
                                         "Raiden Network (https://raiden.network)"^^rdfs:Literal ;
                     :ContextAndProblem "Micro-payments are payments that can be as small as a few cents, e.g., payment of a very small amount of money to a WiFi hot-spot for every 10 kilobytes of data usage. Blockchain has potential to be used for such financial transactions with tiny monetary value. The question is if it is necessary and cost effective to store all the micro-payment transactions on blockchain. The decentralized design of blockchain has limited performance. Transactions can take several minutes or even one hour (for Bitcoin blockchain) to be committed on the blockchain [17]. Due to the long commit time and high transaction fees on a public blockchain (where fees are largely independent of the transacted amount), it is often infeasible to store every micro-payment transaction on the blockchain network."^^rdfs:Literal ;
                     :Solution "A solution is to establish a payment channel between two participants, with a deposit from one or both sides of the participants locked up as security in a smart contract for the lifetime of the payment channel. The payment channel keeps the intermediate states of the micro-payment off-chain, and only stores the finalized payment on chain. The frequency of transaction settlement depends on the use case, and agreement between the two sides. A network of micro-payment channels can be built where the transactions transferring small values occur off-chain. The individual transactions take place entirely off the blockchain and exclusively between the participants, across multiple hops where needed. Only the final transaction that settles the payment for a given channel or set of channels is submitted to the blockchain."^^rdfs:Literal ;
                     rdfs:label "State channel (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#StateInitializationBandara2020Patterns
:StateInitializationBandara2020Patterns rdf:type owl:NamedIndividual ,
                                                 :AllBlockchains ,
                                                 :General ,
                                                 :Proposal ,
                                                 :Unspecified ;
                                        :benefitsFrom :EstablishGenesisBandara2020Patterns ,
                                                      :HardForkBandara2020Patterns ;
                                        :hasPaper :Bandara2020Patterns ;
                                        :hasVariant :StateInitializationV ;
                                        :ApplicationExample "A. Milano, “$3 billion blockchain Tron kicks off token migration,” June 2018. https: //coindesk.com/3-billion-blockchain-tron-kicks-off-token-migration-today."^^rdfs:Literal ,
                                                            "B. C. Assistant, “Binance chain mainnet swap,” May 2019. https://community.binance.org/topic/44/binance-chain-mainnet-swap. "^^rdfs:Literal ,
                                                            "B. Network, “Bithereum’s hard spoon snapshot is complete!,” Dec. 2018. https: //medium.com/bithereum-network/bithereums-hard-spoon-snapshot-is-complete-c1814024ea9a."^^rdfs:Literal ,
                                                            "BitGuild, “Bitizens is moving to TRON,” Dec. 2018. https://medium.com/the-notice-board/bitizens-is-moving-to-tron-71e5c9a39ef."^^rdfs:Literal ,
                                                            "Effect.AI, “Effect.AI brings artificial intelligence to EOS main net,” Feb. 2019. https://medium.com/effect-ai/effect-ai-brings-artificial-intelligence-to-eos-main-net-ead7e68e09fa."^^rdfs:Literal ,
                                                            "Gifto Official, “Mass adoption token meets mass adoption chain: Gifto migrates to Binance chain,” Apr. 2019. https://medium.com/@gifto/mass-adoption-token-meets"^^rdfs:Literal ,
                                                            "K. Ecosystem, “Kin blockchain migration -iOS,” Apr. 2018. https://kinecosystem.github.io/kin-ecosystem-sdk-docs/docs/migration ios."^^rdfs:Literal ,
                                                            "Qubicles, “Migrating ethereum Qubicle tokens to the Telos chain of EOS.IO using the EOS21 protocol,” Jan. 2019. https://medium.com/@Qubicles/migrating-ethereum-qubicle-tokens-to-the-telos-chain-of-eos-io-using-the-eos21-protocol-e79c14fcf112"^^rdfs:Literal ,
                                                            "Storj, “Token migration plan pt.1,” Apr. 2017. https://storj.io/blog/2017/04/token-migration-plan-pt.1/."^^rdfs:Literal ,
                                                            "VeChain, “VeChainThor wallet manual including token swap and X node migration,” July 2018. https://cdn.vechain.com/vechainthor wallet manual en v1.0.pdf."^^rdfs:Literal ,
                                                            "mass-adoption-chain-gifto-migrates-to-binance-chain-af8cf906e13a."^^rdfs:Literal ;
                                        :ContextAndProblem "Concert application has a large number of states and smart contracts, and all of them need to be recreated on the target blockchain. The nonprofit has chosen an existing public blockchain as the target. The list of accounts, smart contracts, and states to be migrated is given in the snapshot or ID database. After the snapshot, states are marked as unusable using token burning. How to load states to the target blockchain?"^^rdfs:Literal ;
                                        :Solution "Create one state at a time on the target blockchain. If a user cannot use an existing private key to access the state migrated to the target blockchain, follow the first step to create a new account similar to the establish genesis pattern. Then get the user to sign a transaction with the state listed in the snapshot as the payload and new address (i.e., accID) on the target blockchain as the recipient. Then submit the signed transaction to the target blockchain to recreate the state. Similar to the establish genesis pattern, update the ID database, and add a PoE entry to reflect new account IDs. It is also desirable to include the snapshot file as a PoE entry, as it is not included in the target blockchain’s history compared to establish genesis and hard fork patterns."^^rdfs:Literal ;
                                        rdfs:label "State Initialization (Bandara, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#StateInitializationV
:StateInitializationV rdf:type owl:NamedIndividual ,
                               :StateInitialization ,
                               :Variant ;
                      :benefitsFrom :EstablishGenesisV ,
                                    :HardForkV ;
                      :hasProposal :StateInitializationBandara2020Patterns ;
                      rdfs:label "State Initialization" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#StateMachineV
:StateMachineV rdf:type owl:NamedIndividual ,
                        :StateMachine ,
                        :Variant ;
               :hasProposal :StateMachineWöhrer2018Design ;
               rdfs:label "State machine" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#StateMachineWöhrer2018Design
:StateMachineWöhrer2018Design rdf:type owl:NamedIndividual ,
                                       :Ethereum ,
                                       :General ,
                                       :Proposal ,
                                       :Solidity ;
                              :hasPaper :Wöhrer2018Design ;
                              :hasVariant :StateMachineV ;
                              :ApplicationExample "DutchAuction"^^rdfs:Literal ;
                              :ContextAndProblem "A state machine models the behaviour of a system based on its history and current inputs. Developers use this construct to break complex problems into simple states and state transitions. These are then used to represent and control the execution flow of a program."^^rdfs:Literal ;
                              :Solution "State machines can also be applied in smart contracts. Many usage scenarios require a contract to have different behavioural stages, in which different functions can be called. When interacting with such a contract, a function call might end the current stage and initiate a change into a consecutive stage."^^rdfs:Literal ;
                              rdfs:label "State machine (Wöhrer, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TerminationBartoletti2017An
:TerminationBartoletti2017An rdf:type owl:NamedIndividual ,
                                      :Ethereum ,
                                      :General ,
                                      :Proposal ,
                                      :Solidity ;
                             :hasPaper :Bartoletti2017An ;
                             :hasVariant :TerminationV ;
                             :ApplicationExample "SimpleCoinFlipGame contract (https://etherscan.io/address/0xe941e5d4a66123dc74886699544fbbb942f1887a#code)"^^rdfs:Literal ;
                             :ContextAndProblem "Since the blockchain is immutable, a contract cannot be deleted when its use has come to an end. Hence, developers must forethink a way to disable it, so that it is still present but unresponsive."^^rdfs:Literal ;
                             :Solution "This can be done manually, by inserting ad-hoc code in the contract, or automatically, calling selfdestruct or suicide."^^rdfs:Literal ;
                             rdfs:label "Termination (Bartoletti, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TerminationV
:TerminationV rdf:type owl:NamedIndividual ,
                       :Termination ,
                       :Variant ;
              :hasProposal :TerminationBartoletti2017An ;
              rdfs:label "Termination" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TickerTapeV
:TickerTapeV rdf:type owl:NamedIndividual ,
                      :Oracle ,
                      :Variant ;
             :hasProposal :TickerTapeWorley2019Opportunities ;
             rdfs:label "Ticker Tape" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TickerTapeWorley2019Opportunities
:TickerTapeWorley2019Opportunities rdf:type owl:NamedIndividual ,
                                            :General ,
                                            :Proposal ,
                                            :SmartContractEnabledBlockchains ,
                                            :Unspecified ;
                                   :hasPaper :Worley2019Opportunities ;
                                   :hasVariant :TickerTapeV ;
                                   :requires :AuthorizationWorley2019Opportunities ;
                                   :variantOf :OracleBartoletti2017An ;
                                   :ContextAndProblem "A contract must constantly supply up-to-date information about some real-world data."^^rdfs:Literal ;
                                   :Solution "Create a contract whose only purpose is to store regularly updated data about the external world. Use the Authorization pattern to allow a trusted source to update the state periodically/regularly. This contract is a service to other contracts that use the data."^^rdfs:Literal ;
                                   rdfs:label "Ticker Tape (Worley, 2019)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TightVariablePackingRajasekar2020Emerging
:TightVariablePackingRajasekar2020Emerging rdf:type owl:NamedIndividual ,
                                                    :General ,
                                                    :Proposal ,
                                                    :SmartContractEnabledBlockchains ,
                                                    :Unspecified ;
                                           :createdFrom :Unknown ;
                                           :hasPaper :Rajasekar2020Emerging ;
                                           :hasVariant :TightVariablePackingV ;
                                           :ContextAndProblem ""^^rdfs:Literal ;
                                           :Solution "Store static variables in smart contracts as the smallest possible data type that they can fit in. For example don’t store a value as an int if it could be stored as a byte."^^rdfs:Literal ;
                                           rdfs:label "Tight Variable Packing (Rajasekar, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TightVariablePackingV
:TightVariablePackingV rdf:type owl:NamedIndividual ,
                                :TightVariablePacking ,
                                :Variant ;
                       :hasProposal :TightVariablePackingRajasekar2020Emerging ;
                       rdfs:label "Tight Variable Packing" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TimeConstrainedAccessLiu2020Design
:TimeConstrainedAccessLiu2020Design rdf:type owl:NamedIndividual ,
                                             :IdentityManagement ,
                                             :Proposal ,
                                             :SmartContractEnabledBlockchains ,
                                             :Unspecified ;
                                    :benefitsFrom :SelectiveContentGenerationLiu2020Design ;
                                    :hasPaper :Liu2020Design ;
                                    :hasVariant :TimeConstrainedAccessV ;
                                    :variantOf :OneOffAccessLiu2020Design ,
                                               :TimeConstrainedAccessV ;
                                    :ApplicationExample "Snapchat (https://www.snapchat.com/)"^^rdfs:Literal ,
                                                        "Snappass (https://oneoffsecret.com/)"^^rdfs:Literal ;
                                    :ContextAndProblem "Usually an identification process lasts for a certain time period. After proving the identity of an entity, the presented credential has accomplished its mission and should not be accessed again. After receiving a credential, a verifier then has the ability to access, read, and verify certain identity data of the holder. If the credential is long-term or even permanently effective, the verifier then can verify the credential after current identification process, which means that it can still access and check the holder’s identity data when there is not a legitimate permission for proving the identity, resulting identity data leak."^^rdfs:Literal ;
                                    :Solution "A holder is able to generate an identifiable link, and define its accessible period (e.g. certain days). The link can redirect to a page presenting credential content. Afterwards, the holder can share the time-constrained link to verifiers instead of the original credential itself. Within the predefined accessible period, a verifier can visit and verify the credential for identification without limit. Nevertheless, when the link is expired, there is no approach for the verifier to obtain credential content again."^^rdfs:Literal ;
                                    rdfs:label "Time-Constrained Access (Liu, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TimeConstrainedAccessV
:TimeConstrainedAccessV rdf:type owl:NamedIndividual ,
                                 :TimeConstrainedAccess ,
                                 :Variant ;
                        :benefitsFrom :SelectiveContentGenerationV ;
                        :hasProposal :TimeConstrainedAccessLiu2020Design ;
                        :variantOf :OneOffAccessV ;
                        rdfs:label "Time-Constrained Access" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TimeConstraintBartoletti2017An
:TimeConstraintBartoletti2017An rdf:type owl:NamedIndividual ,
                                         :Ethereum ,
                                         :General ,
                                         :Proposal ,
                                         :Solidity ;
                                :hasPaper :Bartoletti2017An ;
                                :hasVariant :TimeConstraintV ;
                                :ApplicationExample "BirthdayGift contract (https://etherscan.io/address/0x9828f591b21ee4ad4fd803fc7339588cb83a6b84#code)"^^rdfs:Literal ,
                                                    "Lottery contract (https://etherscan.io/address/0x302fE87B56330BE266599FAB2A54747299B5aC5B#code)"^^rdfs:Literal ;
                                :ContextAndProblem ""^^rdfs:Literal ;
                                :Solution "Many contracts implement time constraints, e.g. to specify when an action is permitted. For instance, BirthdayGift allows users to collect funds, which will be redeemable only after their birthday. In notary contracts, time constraints are used to prove that a document is owned from a certain date."^^rdfs:Literal ;
                                rdfs:label "Time Constraint (Bartoletti, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TimeConstraintV
:TimeConstraintV rdf:type owl:NamedIndividual ,
                          :TimeConstraint ,
                          :Variant ;
                 :hasProposal :TimeConstraintBartoletti2017An ;
                 rdfs:label "Time Constraint" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TokenBartoletti2017An
:TokenBartoletti2017An rdf:type owl:NamedIndividual ,
                                :Ethereum ,
                                :General ,
                                :Proposal ,
                                :Solidity ;
                       :hasPaper :Bartoletti2017An ;
                       :hasVariant :TokenisationV ;
                       :ApplicationExample "DVIP contract (https://etherscan.io/address/0xadc46ff5434910bd17b24ffb429e585223287d7f#code)"^^rdfs:Literal ,
                                           "ETCSurvey contract (https://etherscan.io/address/0xdb6d68e1d8c3f69d32e2d83065492e502b4c67ba#code)"^^rdfs:Literal ;
                       :ContextAndProblem ""^^rdfs:Literal ;
                       :Solution "This pattern is used to distribute some fungible goods (represented by tokens) to users. Tokens can represent a wide variety of goods, like e.g. coins, shares, outcomes or tickets, or everything else which is transferable and countable."^^rdfs:Literal ;
                       rdfs:label "Token (Bartoletti, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TokenBurningBandara2020Patterns
:TokenBurningBandara2020Patterns rdf:type owl:NamedIndividual ,
                                          :General ,
                                          :Proposal ,
                                          :SmartContractEnabledBlockchains ,
                                          :Unspecified ;
                                 :benefitsFrom :SnapshottingBandara2020Patterns ;
                                 :hasPaper :Bandara2020Patterns ;
                                 :hasVariant :TokenBurningV ;
                                 :ApplicationExample "A. Garoffolo and R. Viglione, “Sidechains: Decoupled consensus between chains,” Oct. 2018. https://horizen.global/assets/files/Horizen-Sidechains-Decoupled-Consensus-Between-Chains.pdf."^^rdfs:Literal ,
                                                     "B. C. Assistant, “Binance chain mainnet swap,” May 2019.community.binance.org/topic/44/binance-chain-mainnet-swap. https://"^^rdfs:Literal ,
                                                     "B. Sigman and A. Siniscalchi, “Teleport your ERC20 tokens to EOS.” https://github.com/ sheos-org/eos21."^^rdfs:Literal ,
                                                     "B. Wiki, “Proof of burn,” Jan. 2018. https://en.bitcoin.it/wiki/Proof of burn.-Storj, “Token migration plan pt.1,” Apr. 2017. https://storj.io/blog/2017/04/token-migration-plan-pt.1/"^^rdfs:Literal ,
                                                     "BitGuild, “Bitizens is moving to TRON,” Dec. 2018. https://medium.com/the-notice-board/bitizens-is-moving-to-tron-71e5c9a39ef."^^rdfs:Literal ,
                                                     "KARMA, “KARMA is moving from EOS to WAX,” Nov. 2019. https://medium.com/ @karmaapp/karma-is-moving-from-eos-to-wax-b081100c2702."^^rdfs:Literal ,
                                                     "Qubicles, “Migrating ethereum Qubicle tokens to the Telos chain of EOS.IO using the EOS21 protocol,” Jan. 2019. https://medium.com/@Qubicles/migrating-ethereum-qubicle-tokens-to-the-telos-chain-of-eos-io-using-the-eos21-protocol-e79c14fcf112."^^rdfs:Literal ,
                                                     "S. News, “Prepare yourself for the Safex blockchain swap,” Sep. 2018. https://safexnews.net/prepare-for-safex-blockchain-swap/."^^rdfs:Literal ,
                                                     "VeChain, “VeChainThor wallet manual including token swap and X node migration,” July 2018. https://cdn.vechain.com/vechainthor wallet manual en v1.0.pdf."^^rdfs:Literal ;
                                 :ContextAndProblem "Because the source blockchain used by the nonprofit is public, it is not decommissioned after the migration. Therefore, any state and smart contracts left in the source blockchain could be misused (e.g., double spending). The list of states and smart contracts to be migrated is given in the snapshot or ID database. How to prevent the misuse of states and smart contracts after migration?"^^rdfs:Literal ;
                                 :Solution "Use transactions to transfer states such as native assets and tokens to an unusable account. Delete tokens by calling respective functions on the smart contracts that created them. Similarly, smart contracts can call the self-destruct function. All such attempts to make states and smart contracts unusable are referred to as token burning."^^rdfs:Literal ;
                                 rdfs:label "Token Burning (Bandara, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TokenBurningV
:TokenBurningV rdf:type owl:NamedIndividual ,
                        :TokenBurning ,
                        :Variant ;
               :benefitsFrom :SnapshottingV ;
               :hasProposal :TokenBurningBandara2020Patterns ;
               rdfs:label "Token burning" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TokenWorley2019Opportunities
:TokenWorley2019Opportunities rdf:type owl:NamedIndividual ,
                                       :General ,
                                       :Proposal ,
                                       :SmartContractEnabledBlockchains ,
                                       :Unspecified ;
                              :hasPaper :Worley2019Opportunities ;
                              :hasVariant :TokenisationV ;
                              :requires :AddressMappingWorley2019Opportunities ;
                              :ContextAndProblem "A contract needs a flexible unit of accounting for access to a certain resource."^^rdfs:Literal ;
                              :Solution "Define a token, or contract-based cryptocurrency. Use the Address Mapping pattern to associate each Ethereum address with a balance and provide functions for transfer of balance between users."^^rdfs:Literal ;
                              rdfs:label "Token (Worley, 2019)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Tokenisation
:Tokenisation rdf:type owl:NamedIndividual .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TokenisationV
:TokenisationV rdf:type owl:NamedIndividual ,
                        :Tokenisation ,
                        :Variant ;
               :hasProposal :TokenBartoletti2017An ,
                            :TokenWorley2019Opportunities ,
                            :TokenisationXu2018A ,
                            :TokenizedLemieux2017A ;
               rdfs:label "Tokenisation" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TokenisationXu2018A
:TokenisationXu2018A rdf:type owl:NamedIndividual ,
                              :General ,
                              :Proposal ,
                              :SmartContractEnabledBlockchains ,
                              :Unspecified ;
                     :hasPaper :Xu2018A ;
                     :hasVariant :TokenisationV ;
                     :ApplicationExample "Coloredcoin (http://coloredcoins.org)"^^rdfs:Literal ,
                                         "Digix (https://digix.global)"^^rdfs:Literal ;
                     :ContextAndProblem "The concept of tokenisation has emerged centuries ago with the first currency systems. Tokenisation is a means to reduce risk in handling high value financial instruments by replacing them with equivalents, for example, the tokens used in casino. Tokens can represent a wide range of goods which are transferable and fungible, like shares, or tickets. Tokens representing assets should be the authoritative source of the corresponding assets."^^rdfs:Literal ;
                     :Solution "Tokenisation is a process starting from an asset (e.g., money) is locked under a custody (e.g., a bank), and gets represented in the cryptographic world through a token. The ownership of the digital token matches the ownership of the corresponding asset. The reverse process can take place by which the user redeems the token to recover the value which is sitting within the bank. A token on blockchain is the authoritative source of the physical asset. By using smart contracts, some conditions can be implemented and associated with the ownership transfer."^^rdfs:Literal ;
                     rdfs:label "Tokenisation (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TokenizedLemieux2017A
:TokenizedLemieux2017A rdf:type owl:NamedIndividual ,
                                :AllBlockchains ,
                                :General ,
                                :Proposal ,
                                :Unspecified ;
                       :hasPaper :Lemieux2017A ;
                       :hasVariant :TokenisationV ;
                       :ContextAndProblem "Many current and proposed applications of blockchain technology aim to address recordkeeping challenges, such as more efficient and secure processing of land title transfers, greater patient control over their sensitive health information, and more efficient recording of financial payments and settlements. All of the blockchain systems offer a new form of records generation use, storage and/or control."^^rdfs:Literal ;
                       :Solution "With this type of system, not only are records captured on chain, but assets are represented and captured on chain. These assets can represent anything of value – currency, as in the original use case for the blockchain – Bitcoin land, fine wine, food, diamonds, artworks, etc. Readers may ask whether these assets are records."^^rdfs:Literal ;
                       rdfs:label "Tokenized (Lemieux, 2017)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TransactionReplayBandara2020Patterns
:TransactionReplayBandara2020Patterns rdf:type owl:NamedIndividual ,
                                               :AllBlockchains ,
                                               :General ,
                                               :Proposal ,
                                               :Unspecified ;
                                      :benefitsFrom :SnapshottingBandara2020Patterns ,
                                                    :StateAggregationBandara2020Patterns ;
                                      :hasPaper :Bandara2020Patterns ;
                                      :hasVariant :TransactionReplayV ;
                                      :ApplicationExample "SFOX, “Life after hard forks: What you need to know about replay protection,” Feb. 2019. https://blog.sfox.com/life-after-hard-forks-what-you-need-to-know-about-replay-protection-ab8adaf6ddf6gi=9b4099fe431."^^rdfs:Literal ;
                                      :ContextAndProblem "Concert application has a large number of accounts, states, transactions, and smart contracts. All of which need to be recreated on the target blockchain while preserving the history of state changes. The initial state is already recreated on the target blockchain. List of transactions to be replayed can be found from the snapshot. How to recreate both the states and history on the target blockchain?"^^rdfs:Literal ;
                                      :Solution "Replay transactions from the source blockchain. When replaying transactions on the target blockchain, their causal relationships must be preserved, e.g., the order of transactions send/received by an account may need to be preserved to maintain consistency of a state. Therefore, first group related transactions in the snapshot file. If abstraction is acceptable, also aggregate the transactions in a group such that the final state is consistent. Third, concurrently replay each independent group of transactions on the target blockchain, while sequentially replaying all transactions within a group to preserve causal relationships. When the private keys or signature format of the source and target blockchains are different, transactions need to be signed again before replaying on the target blockchain. Address of the recipient also needs to be updated when the same addresses cannot be used across the blockchains. Then submit the signed transaction to the target blockchain. The transaction ID (txID) is likely to vary across blockchain instances, and also depends on nonce, sender and receiver addresses, and transaction fees. Hence, use the second last step to update the mapping between old and new txIDs on the ID database on the BAL. Finally, add a PoE entry to reflect new transactions IDs. If translations are aggregated, also include the snapshot file as a PoE entry, as it is not included in the target blockchain’s history."^^rdfs:Literal ;
                                      rdfs:label "Transaction Replay (Bandara, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TransactionReplayV
:TransactionReplayV rdf:type owl:NamedIndividual ,
                             :TransactionReplay ,
                             :Variant ;
                    :benefitsFrom :SnapshottingV ,
                                  :StateAggregationV ;
                    :hasProposal :TransactionReplayBandara2020Patterns ;
                    rdfs:label "Transaction Replay" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TransparentEventLogMüller2020Silver
:TransparentEventLogMüller2020Silver rdf:type owl:NamedIndividual ,
                                              :AllBlockchains ,
                                              :BPM ,
                                              :Proposal ,
                                              :Unspecified ;
                                     :hasPaper :Müller2020Silver ;
                                     :hasVariant :TransparentEventLogV ;
                                     :ApplicationExample "Pradipta K Banerjee, Pooja Kulkarni, and Harshal S Patil. Distributed logging of application events in a blockchain, June 11 2019. US Patent 10,320,566."^^rdfs:Literal ;
                                     :ContextAndProblem "Non-repudiation of event occurrences is a trust concern in collaborative business processes. During the inter-organizational collaboration, incidents like failures during an activity execution might imply following different workflows. One instance of this is the error event. Therefore, it is essential that organizations cannot deny the occurrence of an event afterward to avoid compensation claims from other stakeholders. In terms of trust-aware business processes, the organization causes a trust concern regarding the non-repudiation of event occurrences."^^rdfs:Literal ;
                                     :Solution "Using the blockchain as a decentralized event log means to save the occurrence of events and data related to them immutably on a shared distributed ledger, as described in [21]. Technically, this can be implemented similar to the blockchain hashed data storage trust pattern."^^rdfs:Literal ;
                                     rdfs:label "Transparent Event Log (Müller, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#TransparentEventLogV
:TransparentEventLogV rdf:type owl:NamedIndividual ,
                               :TransparentEventLog ,
                               :Variant ;
                      :hasProposal :TransparentEventLogMüller2020Silver ;
                      rdfs:label "Transparent Event Log" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#UintVsUint256Marchesi2020Design
:UintVsUint256Marchesi2020Design rdf:type owl:NamedIndividual ,
                                          :Ethereum ,
                                          :General ,
                                          :Proposal ,
                                          :Solidity ;
                                 :hasPaper :Marchesi2020Design ;
                                 :hasVariant :UintVsUint256V ;
                                 :relatedTo :UintVsUint256Marchesi2020Design ;
                                 :ContextAndProblem "The EVM run on 256 bits at a time, thus using an uint* (unsigned integers smaller than 256 bits), it will first be converted to uint256 and it costs extra gas."^^rdfs:Literal ;
                                 :Solution "Use unsigned integers smaller or equal than 128 bits when packing more variables in one slot (see Variables Packing pattern). If not, it is better to use uint256 variables."^^rdfs:Literal ;
                                 rdfs:label "Uint* vs Uint256 (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#UintVsUint256V
:UintVsUint256V rdf:type owl:NamedIndividual ,
                         :UintVsUint256 ,
                         :Variant ;
                :hasProposal :UintVsUint256Marchesi2020Design ;
                rdfs:label "Uint* vs Uint256" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Unknown
:Unknown rdf:type owl:NamedIndividual .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#UseLibrariesMarchesi2020Design
:UseLibrariesMarchesi2020Design rdf:type owl:NamedIndividual ,
                                         :Ethereum ,
                                         :General ,
                                         :Proposal ,
                                         :Solidity ;
                                :hasPaper :Marchesi2020Design ;
                                :hasVariant :UseLibrariesV ;
                                :ContextAndProblem "If a SC tends to perform all its tasks by its own code, it will grow and be very expensive."^^rdfs:Literal ;
                                :Solution "Use libraries. The bytecode of external libraries is not part of your SC, thus saving gas. However, calling them is costly and has security issues. Use libraries in a balanced way, for complex tasks."^^rdfs:Literal ;
                                rdfs:label "Use libraries (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#UseLibrariesV
:UseLibrariesV rdf:type owl:NamedIndividual ,
                        :UseLibraries ,
                        :Variant ;
               :hasProposal :UseLibrariesMarchesi2020Design ;
               rdfs:label "Use libraries" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#VirtualMachineEmulationBandara2020Patterns
:VirtualMachineEmulationBandara2020Patterns rdf:type owl:NamedIndividual ,
                                                     :General ,
                                                     :Proposal ,
                                                     :SmartContractEnabledBlockchains ,
                                                     :Unspecified ;
                                            :benefitsFrom :SnapshottingBandara2020Patterns ;
                                            :hasPaper :Bandara2020Patterns ;
                                            :hasVariant :VirtualMachineEmulationV ;
                                            :ApplicationExample "G. G. G. et al., “Sbft: A scalable and decentralized trust infrastructure,” in 49th Annual IEEE/IFIP Intl. Conf. on Dependable Systems and Networks (DSN ’20), pp. 568 – 580, June 2019."^^rdfs:Literal ,
                                                                "Hyperledger, “Hyperledger Fabric now supports Ethereum,” Oct. 2018. https:// hyperledger.org/blog/2018/10/26."^^rdfs:Literal ,
                                                                "P. H. Madore, “Deloitte ditches Ethereum for VeChain, brags about overtaking Bitcoin transactions,” May 2019. https://finance.yahoo.com/news/deloitte-ditches-ethereum-vechain-brags-065730503.html."^^rdfs:Literal ;
                                            :ContextAndProblem "Concert application uses a set of smart contracts and embedded states which need to be usable on the target blockchain. The target blockchain platform could run/emulate the Virtual Machine (VM) used to execute smart contracts. The list of smart contracts and their states to be migrated is given in the snapshot. After the snapshot, smart contracts are marked as unusable using token burning. How to run smart contracts written for one blockchain platform on another?"^^rdfs:Literal ;
                                            :Solution "Use the process outlined in Fig. 12 to reuse the smart contract execution environment (aka., VM, sandbox, or container) on the target blockchain. First, copy the VM from the source blockchain. Second, integrate the VM into the target blockchain. Third, if the VM does not hold the smart contract code, redeploy the smart contracts on the target blockchain using the state initialization pattern. Fourth, use the same pattern to set the states of the deployed smart contracts. Smart contract code and their states can be found from the snapshot. Sixth, update the mapping between old and new smart contract addresses on the ID database, as smart contract addresses vary across blockchain instances, and could also depend on the address that deployed the smart contract, transaction sequence number, among others. Finally, it is also desirable to include the snapshot file and mapping between old and new smart contract addresses as a PoE entry, as they are not included in the target blockchain’s history."^^rdfs:Literal ;
                                            rdfs:label "Virtual Machine Emulation (Bandara, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#VirtualMachineEmulationV
:VirtualMachineEmulationV rdf:type owl:NamedIndividual ,
                                   :Variant ,
                                   :VirtualMachineEmulation ;
                          :benefitsFrom :SnapshottingV ;
                          :hasProposal :VirtualMachineEmulationBandara2020Patterns ;
                          rdfs:label "Virtual Machine Emulation" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#VoteV
:VoteV rdf:type owl:NamedIndividual ,
                :Oracle ,
                :Variant ;
       :benefitsFrom :BlockchainBasedReputationSystemV ;
       :hasProposal :VoteWorley2019Opportunities ;
       rdfs:label "Vote" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#VoteWorley2019Opportunities
:VoteWorley2019Opportunities rdf:type owl:NamedIndividual ,
                                      :General ,
                                      :Proposal ,
                                      :SmartContractEnabledBlockchains ,
                                      :Unspecified ;
                             :benefitsFrom :BlockchainBasedReputationSystemMüller2020Silver ;
                             :hasPaper :Worley2019Opportunities ;
                             :hasVariant :VoteV ;
                             :variantOf :OracleBartoletti2017An ;
                             :ContextAndProblem "A contract must supply data that cannot rely on a single source. A large number of data sources are present and must be decided between."^^rdfs:Literal ;
                             :Solution "Allow the input sources to vote on the correct answer. And, provide disincentives for voting incorrectly, as determined by the eventual consensus."^^rdfs:Literal ;
                             rdfs:label "Vote (Worley, 2019)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Wessling2018Engineering
:Wessling2018Engineering rdf:type owl:NamedIndividual ,
                                  :Paper ;
                         :hasIdentifier :Identifier24 ;
                         :proposes :DelegatedTransactionsWessling2018Engineering ,
                                   :SelfConfirmedTransactionsWessling2018Engineering ,
                                   :SelfGeneratedTransactionsWessling2018Engineering ;
                         :Authors "Wessling, Florian and Gruhn, Volker"^^rdfs:Literal ;
                         :Identifier "10.1109/ICSA-C.2018.00019"^^rdfs:Literal ;
                         :IdentifierType "DOI"^^rdfs:Literal ;
                         :Journal "Proceedings 2018 IEEE 15th International Conference on Software Architecture Companion, ICSA-C 2018"^^rdfs:Literal ;
                         :Pages "45--46"^^rdfs:Literal ;
                         :Title "Engineering Software Architectures of Blockchain-Oriented Applications"^^rdfs:Literal ;
                         :Year "2018"^^rdfs:Literal ;
                         rdfs:label "Engineering Software Architectures of Blockchain-Oriented Applications" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Wohrer2018Smart
:Wohrer2018Smart rdf:type owl:NamedIndividual ,
                          :Paper ;
                 :hasIdentifier :Identifier35 ;
                 :proposes :BalanceLimitWohrer2018Smart ,
                           :ChecksEffectsInteractionWohrer2018Smart ,
                           :EmergencyStopWohrer2018Smart ,
                           :MutexWohrer2018Smart ,
                           :RateLimitWohrer2018Smart ,
                           :SpeedBumpWohrer2018Smart ;
                 :Authors "Wohrer, Maximilian and Zdun, Uwe"^^rdfs:Literal ;
                 :Identifier "10.1109/IWBOSE.2018.8327565"^^rdfs:Literal ;
                 :IdentifierType "DOI"^^rdfs:Literal ;
                 :Journal "2018 International Workshop on Blockchain Oriented Software Engineering (IWBOSE)"^^rdfs:Literal ;
                 :Title "Smart contracts: security patterns in the ethereum ecosystem and solidity"^^rdfs:Literal ;
                 :Year "2018"^^rdfs:Literal ;
                 rdfs:label "Smart contracts: security patterns in the ethereum ecosystem and solidity" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Worley2019Opportunities
:Worley2019Opportunities rdf:type owl:NamedIndividual ,
                                  :Paper ;
                         :hasIdentifier :Identifier5 ;
                         :proposes :AddressMappingWorley2019Opportunities ,
                                   :AnnouncementWorley2019Opportunities ,
                                   :AntiOracleWorley2019Opportunities ,
                                   :AuthorizationWorley2019Opportunities ,
                                   :BlocklistWorley2019Opportunities ,
                                   :BulletinBoardWorley2019Opportunities ,
                                   :JudgeWorley2019Opportunities ,
                                   :KeyValueStoreWorley2019Opportunities ,
                                   :MigrationWorley2019Opportunities ,
                                   :TickerTapeWorley2019Opportunities ,
                                   :TokenWorley2019Opportunities ,
                                   :VoteWorley2019Opportunities ;
                         :Authors "Worley, Carl R. and Skjellum, Anthony"^^rdfs:Literal ;
                         :Identifier "10.1007/978-3-030-04849-5_24"^^rdfs:Literal ;
                         :IdentifierType "DOI"^^rdfs:Literal ;
                         :Journal "Lecture Notes in Business Information Processing"^^rdfs:Literal ;
                         :Pages "264--276"^^rdfs:Literal ;
                         :Title "Opportunities, challenges, and future extensions for smart-contract design patterns"^^rdfs:Literal ;
                         :Volume "339"^^rdfs:Literal ;
                         :Year "2019"^^rdfs:Literal ;
                         rdfs:label "Opportunities, challenges, and future extensions for smart-contract design patterns" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#WriteValuesMarchesi2020Design
:WriteValuesMarchesi2020Design rdf:type owl:NamedIndividual ,
                                        :Ethereum ,
                                        :General ,
                                        :Proposal ,
                                        :Solidity ;
                               :hasPaper :Marchesi2020Design ;
                               :hasVariant :WriteValuesV ;
                               :ContextAndProblem "Every single operation costs gas."^^rdfs:Literal ;
                               :Solution "Write values instead of computing them. If you already know the value of some data at compile time, write directly these values. Do not use Solidity functions to derive the value of the data during their initialization. Doing so, might lead to a less clear code, but it saves gas."^^rdfs:Literal ;
                               rdfs:label "Write values (Marchesi, 2020)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#WriteValuesV
:WriteValuesV rdf:type owl:NamedIndividual ,
                       :Variant ,
                       :WriteValues ;
              :hasProposal :WriteValuesMarchesi2020Design ;
              rdfs:label "Write values" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Wöhrer2018Design
:Wöhrer2018Design rdf:type owl:NamedIndividual ,
                           :Paper ;
                  :hasIdentifier :Identifier27 ;
                  :proposes :AccessRestrictionWöhrer2018Design ,
                            :AutomaticDeprecationWöhrer2018Design ,
                            :CommitAndRevealWöhrer2018Design ,
                            :ContractRegisterWöhrer2018Design ,
                            :ContractRelayWöhrer2018Design ,
                            :DataSegregationWöhrer2018Design ,
                            :MortalWöhrer2018Design ,
                            :OracleDataProviderWöhrer2018Design ,
                            :OwnershipWöhrer2018Design ,
                            :PullPaymentWöhrer2018Design ,
                            :SatelliteWöhrer2018Design ,
                            :StateMachineWöhrer2018Design ;
                  :Authors "Wöhrer, Maximilian and Zdun, Uwe"^^rdfs:Literal ;
                  :Identifier "10.1109/Cybermatics_2018.2018.00255"^^rdfs:Literal ;
                  :IdentifierType "DOI"^^rdfs:Literal ;
                  :Pages "1513--1520"^^rdfs:Literal ;
                  :Title "Design Patterns for Smart Contracts in the Ethereum Ecosystem"^^rdfs:Literal ;
                  :Year "2018"^^rdfs:Literal ;
                  rdfs:label "Design Patterns for Smart Contracts in the Ethereum Ecosystem" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#XConfirmationV
:XConfirmationV rdf:type owl:NamedIndividual ,
                         :Variant ,
                         :XConfirmation ;
                :hasProposal :XConfirmationXu2018A ;
                rdfs:label "X-confirmation" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#XConfirmationXu2018A
:XConfirmationXu2018A rdf:type owl:NamedIndividual ,
                               :General ,
                               :Proposal ,
                               :SmartContractEnabledBlockchains ,
                               :Unspecified ;
                      :hasPaper :Xu2018A ;
                      :hasVariant :XConfirmationV ;
                      :ApplicationExample "Bitcoin"^^rdfs:Literal ,
                                          "Ethereum"^^rdfs:Literal ;
                      :ContextAndProblem "Immutability of a blockchain using Proof-of-work (Nakamoto) consensus is probabilistic immutability. There is always a chance that the most recent few blocks are replaced by a competing chain fork. At the time a fork occurs, there is usually no certainty as to which branch will be permanently kept in the blockchain and which branches will be discarded. The transactions that were included in the branches being discarded eventually go back to the transaction pool and being added into a later block."^^rdfs:Literal ;
                      :Solution "From the application perspective, one security strategy is to wait for a certain number (X) of blocks to be generated after the transaction is included into one block. After X blocks, the transaction is taken to be committed and thus perceived as immutable [17]. The value of X can be decided by the developers of the blockchain-based applications."^^rdfs:Literal ;
                      rdfs:label "X-confirmation (Xu, 2018)" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Xu2018A
:Xu2018A rdf:type owl:NamedIndividual ,
                  :Paper ;
         :hasIdentifier :Identifier13 ;
         :proposes :ContractRegistryXu2018A ,
                   :DataContractXu2018A ,
                   :EmbeddedPermissionXu2018A ,
                   :EncryptingOnChainDataXu2018A ,
                   :FactoryContractXu2018A ,
                   :IncentiveExecutionXu2018A ,
                   :LegalAndSmartContractPairXu2018A ,
                   :MultipleAuthorizationXu2018A ,
                   :OffChainDataStorageXu2018A ,
                   :OffChainSecretEnabledDynamicAuthenticationXu2018A ,
                   :OracleXu2018A ,
                   :ReverseOracleXu2018A ,
                   :StateChannelXu2018A ,
                   :TokenisationXu2018A ,
                   :XConfirmationXu2018A ;
         :Authors "Xu, Xiwei and Pautasso, Cesare and Zhu, Liming and Lu, Qinghua and Weber, Ingo"^^rdfs:Literal ;
         :Identifier "10.1145/3282308.3282312"^^rdfs:Literal ;
         :IdentifierType "DOI"^^rdfs:Literal ;
         :Title "A Pattern Collection for Blockchain-Based Applications"^^rdfs:Literal ;
         :Year "2018"^^rdfs:Literal ;
         rdfs:label "A Pattern Collection for Blockchain-Based Applications" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Zhang2017Applying
:Zhang2017Applying rdf:type owl:NamedIndividual ,
                            :Paper ;
                   :hasIdentifier :Identifier34 ;
                   :proposes :AbstractFactoryZhang2017Applying ,
                             :FlyweightZhang2017Applying ,
                             :ProxyZhang2017Applying ,
                             :PublisherSubscriberZhang2017Applying ;
                   :Authors "Zhang, Peng and White, Jules and Schmidt, Douglas C. and Lenz, Gunther"^^rdfs:Literal ;
                   :Identifier "1706.03700"^^rdfs:Literal ;
                   :IdentifierType "Arxiv"^^rdfs:Literal ;
                   :Journal "arXiv.org"^^rdfs:Literal ;
                   :Title "Applying software patterns to address interoperability in blockchain-based healthcare apps"^^rdfs:Literal ;
                   :Year "2017"^^rdfs:Literal ;
                   rdfs:label "Applying software patterns to address interoperability in blockchain-based healthcare apps" .


###  http://www.semanticweb.org/nicolas/ontologies/2021/8/patterns#Zhang2018Chapter
:Zhang2018Chapter rdf:type owl:NamedIndividual ,
                           :Paper ;
                  :hasIdentifier :Identifier38 ;
                  :proposes :AbstractFactoryZhang2018Chapter ,
                            :FlyweightZhang2018Chapter ,
                            :ProxyZhang2018Chapter ,
                            :PublisherSubscriberZhang2018Chapter ;
                  :Authors "Zhang, Peng and White, Jules and Schmidt, Douglas C. and Lenz, Gunther"^^rdfs:Literal ;
                  :Identifier "10.1016/bs.adcom.2018.03.006"^^rdfs:Literal ;
                  :IdentifierType "DOI"^^rdfs:Literal ;
                  :Journal "Advances in computers"^^rdfs:Literal ;
                  :Title "Chapter One - Blockchain Technology Use Cases in Healthcare"^^rdfs:Literal ;
                  :Year "2018"^^rdfs:Literal ;
                  rdfs:label "Chapter One - Blockchain Technology Use Cases in Healthcare" .


#################################################################
#    Annotations
#################################################################

:AddressMapping rdfs:label "Address mapping"@en .


:Identifier rdfs:label "Identifier"@en ,
                       "Identifier" .


:Oracle rdfs:label "Oracle"@en .


:Tokenisation rdfs:label "Tokenisation"@en .


#################################################################
#    General axioms
#################################################################

[ rdf:type owl:AllDisjointClasses ;
  owl:members ( :ArchitecturalDesignOrganization
                :DesignPatternApplication
                :LanguageIdiomApplication
              )
] .


[ rdf:type owl:AllDisjointClasses ;
  owl:members ( :AssetManagement
                :BlockchainEnhancedOffChainStorage
                :BlockchainTransactionHandling
                :OnOffChainDataExchange
              )
] .


[ rdf:type owl:AllDisjointClasses ;
  owl:members ( :BPMFeatureApplication
                :BigDataFeatureApplication
                :DecentralizedIdentityFeatureApplication
                :MultiDomainFeatureApplication
              )
] .


[ rdf:type owl:AllDisjointClasses ;
  owl:members ( :DomainOrientedApplicationDesign
                :ManageOnChainData
                :SmartContractUsage
              )
] .


[ rdf:type owl:AllDisjointClasses ;
  owl:members ( :EnableSmartContractAccessControl
                :SmartContractEfficiency
                :SmartContractManagement
                :SmartContractSecurity
              )
] .


[ rdf:type owl:AllDisjointClasses ;
  owl:members ( :OnChainDataEncryption
                :OnChainDataMigration
                :OnChainStorage
              )
] .


#################################################################
#    Rules
#################################################################

:p1 rdf:type <http://www.w3.org/2003/11/swrl#Variable> .

:p2 rdf:type <http://www.w3.org/2003/11/swrl#Variable> .

:v1 rdf:type <http://www.w3.org/2003/11/swrl#Variable> .

:v2 rdf:type <http://www.w3.org/2003/11/swrl#Variable> .

[ <http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean ;
   rdfs:comment ""^^xsd:string ;
   rdfs:label "BenefitsFromExtension"^^xsd:string ;
   rdf:type <http://www.w3.org/2003/11/swrl#Imp> ;
   <http://www.w3.org/2003/11/swrl#body> [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                           rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                       <http://www.w3.org/2003/11/swrl#propertyPredicate> :benefitsFrom ;
                                                       <http://www.w3.org/2003/11/swrl#argument1> :p1 ;
                                                       <http://www.w3.org/2003/11/swrl#argument2> :p2
                                                     ] ;
                                           rdf:rest [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                                      rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                                  <http://www.w3.org/2003/11/swrl#propertyPredicate> :hasVariant ;
                                                                  <http://www.w3.org/2003/11/swrl#argument1> :p1 ;
                                                                  <http://www.w3.org/2003/11/swrl#argument2> :v1
                                                                ] ;
                                                      rdf:rest [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                                                 rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                                             <http://www.w3.org/2003/11/swrl#propertyPredicate> :hasVariant ;
                                                                             <http://www.w3.org/2003/11/swrl#argument1> :p2 ;
                                                                             <http://www.w3.org/2003/11/swrl#argument2> :v2
                                                                           ] ;
                                                                 rdf:rest rdf:nil
                                                               ]
                                                    ]
                                         ] ;
   <http://www.w3.org/2003/11/swrl#head> [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                           rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                       <http://www.w3.org/2003/11/swrl#propertyPredicate> :benefitsFrom ;
                                                       <http://www.w3.org/2003/11/swrl#argument1> :v1 ;
                                                       <http://www.w3.org/2003/11/swrl#argument2> :v2
                                                     ] ;
                                           rdf:rest rdf:nil
                                         ]
 ] .

[ <http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean ;
   rdfs:comment ""^^xsd:string ;
   rdfs:label "CreatedFromExtension"^^xsd:string ;
   rdf:type <http://www.w3.org/2003/11/swrl#Imp> ;
   <http://www.w3.org/2003/11/swrl#body> [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                           rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                       <http://www.w3.org/2003/11/swrl#propertyPredicate> :createdFrom ;
                                                       <http://www.w3.org/2003/11/swrl#argument1> :p1 ;
                                                       <http://www.w3.org/2003/11/swrl#argument2> :p2
                                                     ] ;
                                           rdf:rest [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                                      rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                                  <http://www.w3.org/2003/11/swrl#propertyPredicate> :variantOf ;
                                                                  <http://www.w3.org/2003/11/swrl#argument1> :p1 ;
                                                                  <http://www.w3.org/2003/11/swrl#argument2> :v1
                                                                ] ;
                                                      rdf:rest [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                                                 rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                                             <http://www.w3.org/2003/11/swrl#propertyPredicate> :hasVariant ;
                                                                             <http://www.w3.org/2003/11/swrl#argument1> :p2 ;
                                                                             <http://www.w3.org/2003/11/swrl#argument2> :v2
                                                                           ] ;
                                                                 rdf:rest rdf:nil
                                                               ]
                                                    ]
                                         ] ;
   <http://www.w3.org/2003/11/swrl#head> [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                           rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                       <http://www.w3.org/2003/11/swrl#propertyPredicate> :createdFrom ;
                                                       <http://www.w3.org/2003/11/swrl#argument1> :v1 ;
                                                       <http://www.w3.org/2003/11/swrl#argument2> :v2
                                                     ] ;
                                           rdf:rest rdf:nil
                                         ]
 ] .

[ <http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean ;
   rdfs:comment ""^^xsd:string ;
   rdfs:label "RelatedToExtension"^^xsd:string ;
   rdf:type <http://www.w3.org/2003/11/swrl#Imp> ;
   <http://www.w3.org/2003/11/swrl#body> [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                           rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                       <http://www.w3.org/2003/11/swrl#propertyPredicate> :relatedTo ;
                                                       <http://www.w3.org/2003/11/swrl#argument1> :p1 ;
                                                       <http://www.w3.org/2003/11/swrl#argument2> :p2
                                                     ] ;
                                           rdf:rest [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                                      rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                                  <http://www.w3.org/2003/11/swrl#propertyPredicate> :variantOf ;
                                                                  <http://www.w3.org/2003/11/swrl#argument1> :p1 ;
                                                                  <http://www.w3.org/2003/11/swrl#argument2> :v1
                                                                ] ;
                                                      rdf:rest [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                                                 rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                                             <http://www.w3.org/2003/11/swrl#propertyPredicate> :hasVariant ;
                                                                             <http://www.w3.org/2003/11/swrl#argument1> :p2 ;
                                                                             <http://www.w3.org/2003/11/swrl#argument2> :v2
                                                                           ] ;
                                                                 rdf:rest rdf:nil
                                                               ]
                                                    ]
                                         ] ;
   <http://www.w3.org/2003/11/swrl#head> [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                           rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                       <http://www.w3.org/2003/11/swrl#propertyPredicate> :relatedTo ;
                                                       <http://www.w3.org/2003/11/swrl#argument1> :v1 ;
                                                       <http://www.w3.org/2003/11/swrl#argument2> :v2
                                                     ] ;
                                           rdf:rest rdf:nil
                                         ]
 ] .

[ <http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean ;
   rdfs:comment ""^^xsd:string ;
   rdfs:label "RequiresExtension"^^xsd:string ;
   rdf:type <http://www.w3.org/2003/11/swrl#Imp> ;
   <http://www.w3.org/2003/11/swrl#body> [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                           rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                       <http://www.w3.org/2003/11/swrl#propertyPredicate> :requires ;
                                                       <http://www.w3.org/2003/11/swrl#argument1> :p1 ;
                                                       <http://www.w3.org/2003/11/swrl#argument2> :p2
                                                     ] ;
                                           rdf:rest [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                                      rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                                  <http://www.w3.org/2003/11/swrl#propertyPredicate> :variantOf ;
                                                                  <http://www.w3.org/2003/11/swrl#argument1> :p1 ;
                                                                  <http://www.w3.org/2003/11/swrl#argument2> :v1
                                                                ] ;
                                                      rdf:rest [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                                                 rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                                             <http://www.w3.org/2003/11/swrl#propertyPredicate> :hasVariant ;
                                                                             <http://www.w3.org/2003/11/swrl#argument1> :p2 ;
                                                                             <http://www.w3.org/2003/11/swrl#argument2> :v2
                                                                           ] ;
                                                                 rdf:rest rdf:nil
                                                               ]
                                                    ]
                                         ] ;
   <http://www.w3.org/2003/11/swrl#head> [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                           rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                       <http://www.w3.org/2003/11/swrl#propertyPredicate> :requires ;
                                                       <http://www.w3.org/2003/11/swrl#argument1> :v1 ;
                                                       <http://www.w3.org/2003/11/swrl#argument2> :v2
                                                     ] ;
                                           rdf:rest rdf:nil
                                         ]
 ] .

[ <http://swrl.stanford.edu/ontologies/3.3/swrla.owl#isRuleEnabled> "true"^^xsd:boolean ;
   rdfs:comment ""^^xsd:string ;
   rdfs:label "VariantOfExtension"^^xsd:string ;
   rdf:type <http://www.w3.org/2003/11/swrl#Imp> ;
   <http://www.w3.org/2003/11/swrl#body> [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                           rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                       <http://www.w3.org/2003/11/swrl#propertyPredicate> :variantOf ;
                                                       <http://www.w3.org/2003/11/swrl#argument1> :p1 ;
                                                       <http://www.w3.org/2003/11/swrl#argument2> :p2
                                                     ] ;
                                           rdf:rest [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                                      rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                                  <http://www.w3.org/2003/11/swrl#propertyPredicate> :variantOf ;
                                                                  <http://www.w3.org/2003/11/swrl#argument1> :p1 ;
                                                                  <http://www.w3.org/2003/11/swrl#argument2> :v1
                                                                ] ;
                                                      rdf:rest [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                                                 rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                                             <http://www.w3.org/2003/11/swrl#propertyPredicate> :hasVariant ;
                                                                             <http://www.w3.org/2003/11/swrl#argument1> :p2 ;
                                                                             <http://www.w3.org/2003/11/swrl#argument2> :v2
                                                                           ] ;
                                                                 rdf:rest rdf:nil
                                                               ]
                                                    ]
                                         ] ;
   <http://www.w3.org/2003/11/swrl#head> [ rdf:type <http://www.w3.org/2003/11/swrl#AtomList> ;
                                           rdf:first [ rdf:type <http://www.w3.org/2003/11/swrl#IndividualPropertyAtom> ;
                                                       <http://www.w3.org/2003/11/swrl#propertyPredicate> :variantOf ;
                                                       <http://www.w3.org/2003/11/swrl#argument1> :v1 ;
                                                       <http://www.w3.org/2003/11/swrl#argument2> :v2
                                                     ] ;
                                           rdf:rest rdf:nil
                                         ]
 ] .

###  Generated by the OWL API (version 4.5.9.2019-02-01T07:24:44Z) https://github.com/owlcs/owlapi
